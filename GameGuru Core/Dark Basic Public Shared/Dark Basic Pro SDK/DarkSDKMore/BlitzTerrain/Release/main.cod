; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33139.0 

	TITLE	D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\Release\main.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_LevelToRender@@3HA				; g_LevelToRender
PUBLIC	?g_iQualityTechniqueMode@@3HA			; g_iQualityTechniqueMode
PUBLIC	?g_iTerrainIDForShadowMap@@3HA			; g_iTerrainIDForShadowMap
PUBLIC	?g_bRenderTerrainForShadowMap@@3_NA		; g_bRenderTerrainForShadowMap
PUBLIC	?m_pCBChangePerTerrsainChunk@@3PAUID3D11Buffer@@A ; m_pCBChangePerTerrsainChunk
PUBLIC	?m_pCBChangePerTerrsainChunkPS@@3PAUID3D11Buffer@@A ; m_pCBChangePerTerrsainChunkPS
PUBLIC	?g_bSkipTerrainRender@@3_NA			; g_bSkipTerrainRender
PUBLIC	?g_CurrentTerrainCameraID@@3KA			; g_CurrentTerrainCameraID
_BSS	SEGMENT
?g_iQualityTechniqueMode@@3HA DD 01H DUP (?)		; g_iQualityTechniqueMode
?g_iTerrainIDForShadowMap@@3HA DD 01H DUP (?)		; g_iTerrainIDForShadowMap
?g_bRenderTerrainForShadowMap@@3_NA DB 01H DUP (?)	; g_bRenderTerrainForShadowMap
	ALIGN	4

?m_pCBChangePerTerrsainChunk@@3PAUID3D11Buffer@@A DD 01H DUP (?) ; m_pCBChangePerTerrsainChunk
?m_pCBChangePerTerrsainChunkPS@@3PAUID3D11Buffer@@A DD 01H DUP (?) ; m_pCBChangePerTerrsainChunkPS
?g_bSkipTerrainRender@@3_NA DB 01H DUP (?)		; g_bSkipTerrainRender
	ALIGN	4

?g_CurrentTerrainCameraID@@3KA DD 01H DUP (?)		; g_CurrentTerrainCameraID
_BSS	ENDS
_DATA	SEGMENT
?g_LevelToRender@@3HA DD 05H				; g_LevelToRender
_DATA	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	___use_char_max
PUBLIC	??0Vector3@KMaths@@QAE@XZ			; KMaths::Vector3::Vector3
PUBLIC	?BTConstructor@@YAXXZ				; BTConstructor
PUBLIC	?BTDestructor@@YAXXZ				; BTDestructor
PUBLIC	?BT_MakeTerrain@@YAKXZ				; BT_MakeTerrain
PUBLIC	?BT_SetTerrainHeightmap@@YAXKK@Z		; BT_SetTerrainHeightmap
PUBLIC	?BT_SetTerrainTexture@@YAXKK@Z			; BT_SetTerrainTexture
PUBLIC	?BT_SetTerrainExclusion@@YAXKK@Z		; BT_SetTerrainExclusion
PUBLIC	?BT_SetTerrainExclusionThreshold@@YAXKK@Z	; BT_SetTerrainExclusionThreshold
PUBLIC	?BT_SetTerrainDetail@@YAXKK@Z			; BT_SetTerrainDetail
PUBLIC	?BT_SetTerrainDetailBlendMode@@YAXKE@Z		; BT_SetTerrainDetailBlendMode
PUBLIC	?BT_SetTerrainEnvironment@@YAXKK@Z		; BT_SetTerrainEnvironment
PUBLIC	?BT_AddTerrainEnvironment@@YAKKK@Z		; BT_AddTerrainEnvironment
PUBLIC	?BT_SetTerrainLOD@@YAXKE@Z			; BT_SetTerrainLOD
PUBLIC	?BT_SetTerrainSplit@@YAXKK@Z			; BT_SetTerrainSplit
PUBLIC	?BT_SetTerrainDetailTile@@YAXKM@Z		; BT_SetTerrainDetailTile
PUBLIC	?BT_SetTerrainQuadReduction@@YAXK_N@Z		; BT_SetTerrainQuadReduction
PUBLIC	?BT_SetTerrainQuadRotation@@YAXK_N@Z		; BT_SetTerrainQuadRotation
PUBLIC	?BT_SetTerrainSmoothing@@YAXKK@Z		; BT_SetTerrainSmoothing
PUBLIC	?BT_SetTerrainScale@@YAXKM@Z			; BT_SetTerrainScale
PUBLIC	?BT_SetTerrainYScale@@YAXKM@Z			; BT_SetTerrainYScale
PUBLIC	?BT_SetTerrainLODDistance@@YAXKEM@Z		; BT_SetTerrainLODDistance
PUBLIC	?BT_BuildTerrain@@YAXKK@Z			; BT_BuildTerrain
PUBLIC	?BT_BuildTerrain@@YAXKK_N@Z			; BT_BuildTerrain
PUBLIC	?BT_ContinueBuild@@YAHXZ			; BT_ContinueBuild
PUBLIC	?BT_TerrainExist@@YAKK@Z			; BT_TerrainExist
PUBLIC	?BT_DeleteTerrain@@YAXK@Z			; BT_DeleteTerrain
PUBLIC	?BT_ForceTerrainTechnique@@YAXK@Z		; BT_ForceTerrainTechnique
PUBLIC	?BT_GetGroundHeight@@YAMKMM@Z			; BT_GetGroundHeight
PUBLIC	?BT_GetGroundHeight@@YAMKMM_N@Z			; BT_GetGroundHeight
PUBLIC	?BT_GetTerrainSize@@YAMK@Z			; BT_GetTerrainSize
PUBLIC	?BT_GetPointExcluded@@YAKKMM@Z			; BT_GetPointExcluded
PUBLIC	?BT_GetPointEnvironment@@YAKKMM@Z		; BT_GetPointEnvironment
PUBLIC	?BT_GetVersion@@YAKXZ				; BT_GetVersion
PUBLIC	?BT_SetBuildStep@@YAXK@Z			; BT_SetBuildStep
PUBLIC	?BT_SetATMode@@YAX_N@Z				; BT_SetATMode
PUBLIC	?BT_EnableAutoRender@@YAX_N@Z			; BT_EnableAutoRender
PUBLIC	?BT_GetStatistic@@YAKK@Z			; BT_GetStatistic
PUBLIC	?BT_GetTerrainObjectID@@YAKK@Z			; BT_GetTerrainObjectID
PUBLIC	?BT_MakeSectorObject@@YAXKKKK@Z			; BT_MakeSectorObject
PUBLIC	?BT_MakeTerrainObject@@YAXKKK@Z			; BT_MakeTerrainObject
PUBLIC	?BT_GetSectorPositionX@@YAMKKK@Z		; BT_GetSectorPositionX
PUBLIC	?BT_GetSectorPositionY@@YAMKKK@Z		; BT_GetSectorPositionY
PUBLIC	?BT_GetSectorPositionZ@@YAMKKK@Z		; BT_GetSectorPositionZ
PUBLIC	?BT_GetSectorCount@@YAKKK@Z			; BT_GetSectorCount
PUBLIC	?BT_GetSectorSize@@YAKKK@Z			; BT_GetSectorSize
PUBLIC	?BT_GetSectorExcluded@@YAKKKK@Z			; BT_GetSectorExcluded
PUBLIC	?BT_GetSectorRow@@YAKKKK@Z			; BT_GetSectorRow
PUBLIC	?BT_GetSectorCollumn@@YAKKKK@Z			; BT_GetSectorCollumn
PUBLIC	?BT_SetCurrentCamera@@YAXK@Z			; BT_SetCurrentCamera
PUBLIC	?BT_UpdateTerrainLOD@@YAXK@Z			; BT_UpdateTerrainLOD
PUBLIC	?BT_UpdateTerrainCull@@YAXK@Z			; BT_UpdateTerrainCull
PUBLIC	?BT_RenderTerrain@@YAXK@Z			; BT_RenderTerrain
PUBLIC	?BT_NoRenderTerrain@@YAXK@Z			; BT_NoRenderTerrain
PUBLIC	?SetTerrainRenderLevel@@YAXH@Z			; SetTerrainRenderLevel
PUBLIC	?BT_Intern_Render@@YAXXZ			; BT_Intern_Render
PUBLIC	?BT_Intern_TerrainExist@@YA_NK@Z		; BT_Intern_TerrainExist
PUBLIC	?BT_GetTerrainInfo@@YAPAXK@Z			; BT_GetTerrainInfo
PUBLIC	?BT_GetLODLevelInfo@@YAPAXKK@Z			; BT_GetLODLevelInfo
PUBLIC	?BT_Intern_Error@@YAXH@Z			; BT_Intern_Error
PUBLIC	?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z ; BT_Intern_GetPointHeight
PUBLIC	?BT_Intern_GetPointNormal@@YA?AUBTVector3@@PAUs_BT_terrain@@MM@Z ; BT_Intern_GetPointNormal
PUBLIC	?BT_Intern_AllocateQuadTree@@YAPAUs_BT_QuadTree@@PAUs_BT_terrain@@@Z ; BT_Intern_AllocateQuadTree
PUBLIC	?BT_Intern_RefreshVB@@YAXPAUs_BT_DrawBuffer@@KKPAUBT_Meshdata_Vertex@@@Z ; BT_Intern_RefreshVB
PUBLIC	?BT_Intern_RefreshIB@@YAXPAUs_BT_DrawBuffer@@KKPAG@Z ; BT_Intern_RefreshIB
PUBLIC	?BT_Intern_RTTMSUpdateHandler@@YAXKKKGGPAM@Z	; BT_Intern_RTTMSUpdateHandler
PUBLIC	?BTReceiveCoreDataPtr@@YAXPAX@Z			; BTReceiveCoreDataPtr
PUBLIC	?BT_UpdateTerrainObjects@@YAXK@Z		; BT_UpdateTerrainObjects
PUBLIC	?BT_GetSectorInfo@@YAPAXKKK@Z			; BT_GetSectorInfo
PUBLIC	?BT_Main@@3Us_BT_main@@A			; BT_Main
PUBLIC	??_C@_08JPMAAECC@POSITION@			; `string'
PUBLIC	??_C@_06IOJAGNKJ@NORMAL@			; `string'
PUBLIC	??_C@_08CMDKBPJM@TEXCOORD@			; `string'
PUBLIC	??_C@_0N@IBEMBBGH@2?402?5R2?5FULL@		; `string'
PUBLIC	??_C@_07CCEABGGJ@Distant@			; `string'
PUBLIC	??_C@_08NIEOOMPE@DepthMap@			; `string'
PUBLIC	??_C@_0L@BCBOCHIC@BT?5Error?3?5@		; `string'
PUBLIC	??_C@_0M@MBHKDPAN@?6Function?3?5@		; `string'
PUBLIC	??_C@_07NBCGADJA@Unknown@			; `string'
PUBLIC	??_C@_0BF@BEMMNHIC@Max?5terrains?5Exceded@	; `string'
PUBLIC	??_C@_0BF@LEDJHPID@Terrain?5doesnt?5exist@	; `string'
PUBLIC	??_C@_0BD@NLJFKIA@Invalid?5LOD?5levels@		; `string'
PUBLIC	??_C@_0BH@BKLEKBKK@Heightmap?5doesnt?5exist@	; `string'
PUBLIC	??_C@_0BH@LBCFMACE@LOD?5level?5doesnt?5exist@	; `string'
PUBLIC	??_C@_0BH@EKIGNGCC@Heightmap?5size?5invalid@	; `string'
PUBLIC	??_C@_0BL@LKCPKLGB@Exclusion?5map?5size?5invalid@ ; `string'
PUBLIC	??_C@_0BB@FDGAMNEG@Already?5building@		; `string'
PUBLIC	??_C@_0BC@GOBLGKKA@Object?5ID?5illegal@		; `string'
PUBLIC	??_C@_0BG@LLCDLBBF@Terrain?5not?5generated@	; `string'
PUBLIC	??_C@_0BM@DIIKHOBA@Cannot?5create?5Vertex?5Buffer@ ; `string'
PUBLIC	??_C@_0BL@GEBOFHBH@Cannot?5Create?5Index?5Buffer@ ; `string'
PUBLIC	??_C@_0BE@HJGMNO@Sector?5doesnt?5exist@		; `string'
PUBLIC	??_C@_0BC@DKJDCILA@Terrain?5not?5built@		; `string'
PUBLIC	??_C@_0N@CHPPFJPE@Invalid?5file@		; `string'
PUBLIC	??_C@_0BB@EGPKFKEF@Cannot?5read?5file@		; `string'
PUBLIC	??_C@_0BG@BDKBOKMN@Terrain?5already?5built@	; `string'
PUBLIC	??_C@_0CJ@GGGGGAOP@Cannot?5use?5function?5with?5a?5buil@ ; `string'
PUBLIC	??_C@_0BG@FHANNEDM@Sector?5already?5locked@	; `string'
PUBLIC	??_C@_0BE@JPDECBH@Sector?5not?5unlocked@	; `string'
PUBLIC	??_C@_0DB@FNMAMBGM@Terrain?5uses?5full?5version?5featu@ ; `string'
PUBLIC	??_C@_0CB@PJCPPDEA@Sectors?5too?5big?4?5Increase?5split@ ; `string'
PUBLIC	??_C@_0BJ@BHNNMBAE@Split?5too?5big?4?5?$CIMax?3?532?$CJ@ ; `string'
PUBLIC	??_C@_0CC@PALJFKLK@This?5sector?5already?5has?5an?5obje@ ; `string'
PUBLIC	??_C@_0CF@KBFJCEFP@This?5LOD?5level?5already?5has?5an?5o@ ; `string'
PUBLIC	??_C@_0BD@KFIPJJHE@Sector?5is?5excluded@	; `string'
PUBLIC	??_C@_0N@OHBPFNDO@Memory?5error@		; `string'
PUBLIC	??_C@_0P@DFBFFKPG@BT?5MakeTerrain@		; `string'
PUBLIC	??_C@_0BH@MGNNNFDA@BT?5SetTerrainHeightmap@	; `string'
PUBLIC	??_C@_0BF@CHKJPLOK@BT?5SetTerrainTexture@	; `string'
PUBLIC	??_C@_0BH@KBLOPLED@BT?5SetTerrainExclusion@	; `string'
PUBLIC	??_C@_0BE@JCPGGGAP@BT?5SetTerrainDetail@	; `string'
PUBLIC	??_C@_0BJ@CPANNGCF@BT?5SetTerrainEnvironment@	; `string'
PUBLIC	??_C@_0BB@JBJNBHDG@BT?5SetTerrainLOD@		; `string'
PUBLIC	??_C@_0BD@LCONNBLK@BT?5SetTerrainSplit@		; `string'
PUBLIC	??_C@_0BI@JKCEGPLD@BT?5SetTerrainDetailTile@	; `string'
PUBLIC	??_C@_0BL@OBIKAFBG@BT?5SetTerrainQuadReduction@	; `string'
PUBLIC	??_C@_0BK@CNOLALLM@BT?5SetTerrainQuadRotation@	; `string'
PUBLIC	??_C@_0BH@HHCKGEI@BT?5SetTerrainSmoothing@	; `string'
PUBLIC	??_C@_0BD@DCNFAFMO@BT?5SetTerrainScale@		; `string'
PUBLIC	??_C@_0BE@EDBFENIB@BT?5SetTerrainYScale@	; `string'
PUBLIC	??_C@_0BK@KICOMPNO@BT?5SetTerrainLODDistances@	; `string'
PUBLIC	??_C@_0BA@BBGHHKO@BT?5BuildTerrain@		; `string'
PUBLIC	??_C@_0BB@EBLJGLKG@BT?5ContinueBuild@		; `string'
PUBLIC	??_C@_0BA@MMODJNLO@BT?5TerrainExist@		; `string'
PUBLIC	__real@00000000
PUBLIC	__real@3b800000
PUBLIC	__real@3c000000
PUBLIC	__real@3c800000
PUBLIC	__real@3ccccccd
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@41200000
PUBLIC	__real@42800000
PUBLIC	__real@42c80000
PUBLIC	__real@43000000
PUBLIC	__real@43800000
PUBLIC	__real@46800000
PUBLIC	__real@4b000000
PUBLIC	__real@80000000
PUBLIC	__real@c0549a78
PUBLIC	__real@c3000000
PUBLIC	__xmm@41f00000000000000000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	_realloc:PROC
EXTRN	??0Vector4@KMaths@@QAE@MMMM@Z:PROC		; KMaths::Vector4::Vector4
EXTRN	??GVector3@KMaths@@QBE?AV01@XZ:PROC		; KMaths::Vector3::operator-
EXTRN	??0Matrix@KMaths@@QAE@ABU01@@Z:PROC		; KMaths::Matrix::Matrix
EXTRN	??DMatrix@KMaths@@QBE?AU01@ABU01@@Z:PROC	; KMaths::Matrix::operator*
EXTRN	?MatrixMultiply@KMaths@@YAPAUMatrix@1@PAU21@PBU21@1@Z:PROC ; KMaths::MatrixMultiply
EXTRN	?MatrixTranslation@KMaths@@YAPAUMatrix@1@PAU21@MMM@Z:PROC ; KMaths::MatrixTranslation
EXTRN	?MatrixInverse@KMaths@@YAPAUMatrix@1@PAU21@PAMPBU21@@Z:PROC ; KMaths::MatrixInverse
EXTRN	?MatrixTranspose@KMaths@@YAPAUMatrix@1@PAU21@PBU21@@Z:PROC ; KMaths::MatrixTranspose
EXTRN	??0GGCOLOR@@QAE@K@Z:PROC			; GGCOLOR::GGCOLOR
EXTRN	??0GGCOLOR@@QAE@MMMM@Z:PROC			; GGCOLOR::GGCOLOR
EXTRN	?BT_RTTMS_AddUpdateHandler@@YAXKP6AXKKKGGPAM@Z@Z:PROC ; BT_RTTMS_AddUpdateHandler
EXTRN	?BT_RTTMS_DeleteUpdateHandlers@@YAXK@Z:PROC	; BT_RTTMS_DeleteUpdateHandlers
EXTRN	?BT_RTTMS_UnlockSectorVertexData@@YAXPAX@Z:PROC	; BT_RTTMS_UnlockSectorVertexData
EXTRN	?BT_RTTMS_UnlockTerrain@@YAXPAUs_BT_terrain@@@Z:PROC ; BT_RTTMS_UnlockTerrain
EXTRN	?Generate@BT_QuadMap@@QAEXUBT_Quadmap_Generator@@@Z:PROC ; BT_QuadMap::Generate
EXTRN	?CalculateNormals@BT_QuadMap@@QAEXXZ:PROC	; BT_QuadMap::CalculateNormals
EXTRN	?GenerateMeshData@BT_QuadMap@@QAEXXZ:PROC	; BT_QuadMap::GenerateMeshData
EXTRN	?UpdateMesh@BT_QuadMap@@QAEXPAUs_BT_DrawBuffer@@_N@Z:PROC ; BT_QuadMap::UpdateMesh
EXTRN	?GeneratePlain@BT_QuadMap@@QAEPAUs_BT_DrawBuffer@@XZ:PROC ; BT_QuadMap::GeneratePlain
EXTRN	?GenerateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z:PROC ; BT_QuadMap::GenerateDBPMesh
EXTRN	?UpdateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z:PROC ; BT_QuadMap::UpdateDBPMesh
EXTRN	?GetPointExcluded@BT_QuadMap@@QAE_NMM@Z:PROC	; BT_QuadMap::GetPointExcluded
EXTRN	?GetPointHeight@BT_QuadMap@@QAEMMM_N@Z:PROC	; BT_QuadMap::GetPointHeight
EXTRN	?SetSideLOD@BT_QuadMap@@QAEXEK@Z:PROC		; BT_QuadMap::SetSideLOD
EXTRN	?DeleteInternalData@BT_QuadMap@@QAEXXZ:PROC	; BT_QuadMap::DeleteInternalData
EXTRN	?ChangeMeshData@BT_QuadMap@@QAEXGGPAM@Z:PROC	; BT_QuadMap::ChangeMeshData
EXTRN	?BT_Intern_StartQuadMapGeneration@@YAXUBT_Quadmap_Generator@@@Z:PROC ; BT_Intern_StartQuadMapGeneration
EXTRN	?BT_Intern_EndQuadMapGeneration@@YAXXZ:PROC	; BT_Intern_EndQuadMapGeneration
EXTRN	?BT_Intern_AddEnvironment@@YAGPAUBT_EnvironmentMap@@K@Z:PROC ; BT_Intern_AddEnvironment
EXTRN	?BT_Intern_CreateEnvironmentMap@@YAXPAUBT_EnvironmentMap@@KKPAK@Z:PROC ; BT_Intern_CreateEnvironmentMap
EXTRN	?BT_Intern_DeleteEnvironmentMap@@YAXPAUBT_EnvironmentMap@@@Z:PROC ; BT_Intern_DeleteEnvironmentMap
EXTRN	?BT_Intern_GetPointEnvironment@@YAGPAUBT_EnvironmentMap@@KK@Z:PROC ; BT_Intern_GetPointEnvironment
EXTRN	?BT_Intern_CreateBlankObject@@YAPAUsObject@@KK@Z:PROC ; BT_Intern_CreateBlankObject
EXTRN	?BT_Intern_SetupMesh@@YAXPAUsMesh@@KKK@Z:PROC	; BT_Intern_SetupMesh
EXTRN	?BT_Intern_FinnishObject@@YAXK@Z:PROC		; BT_Intern_FinnishObject
EXTRN	?RunTimeError@@YAXKPAD@Z:PROC			; RunTimeError
EXTRN	?ImageWidth@@YAHH@Z:PROC			; ImageWidth
EXTRN	?ImageHeight@@YAHH@Z:PROC			; ImageHeight
EXTRN	?GetImageExistEx@@YAHH@Z:PROC			; GetImageExistEx
EXTRN	?GetCameraInternalData@@YAPAXH@Z:PROC		; GetCameraInternalData
EXTRN	?SetAutoCam@@YAXMMMM@Z:PROC			; SetAutoCam
EXTRN	?COMMONSetTransform@@YAXHPAUMatrix@KMaths@@@Z:PROC ; COMMONSetTransform
EXTRN	?COMMONGetTransform@@YAXHPAUMatrix@KMaths@@@Z:PROC ; COMMONGetTransform
EXTRN	?DeleteObject@@YAXH@Z:PROC			; DeleteObject
EXTRN	?SetObjectBlendMap@@YAXHHHHH@Z:PROC		; SetObjectBlendMap
EXTRN	?DeleteMemblock@@YAXH@Z:PROC			; DeleteMemblock
EXTRN	?MemblockExist@@YAHH@Z:PROC			; MemblockExist
EXTRN	?GetMemblockPtr@@YAPADH@Z:PROC			; GetMemblockPtr
EXTRN	?CreateMemblockFromImage@@YAXHH@Z:PROC		; CreateMemblockFromImage
EXTRN	?SetupSetViewport@@YAXHPAUD3D11_VIEWPORT@@PAUID3D11Texture2D@@@Z:PROC ; SetupSetViewport
EXTRN	?update_mesh_light@@YA_NPAUsMesh@@PAUsObject@@PAUsFrame@@@Z:PROC ; update_mesh_light
EXTRN	?AddToRenderList@@YAXPAXH@Z:PROC		; AddToRenderList
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___libm_sse2_log10f:PROC
EXTRN	__ftol3:PROC
EXTRN	_ceil:PROC
EXTRN	_memset:PROC
EXTRN	___do_unsigned_char_lconv_initialization:DWORD
EXTRN	?g_pGlob@@3PAUGlobStruct@@A:DWORD		; g_pGlob
EXTRN	?m_pD3D@@3PAUID3D11Device@@A:DWORD		; m_pD3D
EXTRN	?m_pImmediateContext@@3PAUID3D11DeviceContext@@A:DWORD ; m_pImmediateContext
EXTRN	?m_pDepthStencilState@@3PAUID3D11DepthStencilState@@A:DWORD ; m_pDepthStencilState
EXTRN	?m_pRasterState@@3PAUID3D11RasterizerState@@A:DWORD ; m_pRasterState
EXTRN	?m_pRasterStateTerrainShadow@@3PAUID3D11RasterizerState@@A:DWORD ; m_pRasterStateTerrainShadow
EXTRN	?m_pBlendStateNoAlpha@@3PAUID3D11BlendState@@A:DWORD ; m_pBlendStateNoAlpha
EXTRN	?g_sShaders@@3PAUsShaderGlobalsType@@A:BYTE	; g_sShaders
EXTRN	?g_CascadedShadow@@3VCascadedShadowsManager@@A:BYTE ; g_CascadedShadow
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?BT_Main@@3Us_BT_main@@A DB 0746cH DUP (?)		; BT_Main
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@c3000000
CONST	SEGMENT
__real@c3000000 DD 0c3000000r			; -128
CONST	ENDS
;	COMDAT __real@c0549a78
CONST	SEGMENT
__real@c0549a78 DD 0c0549a78r			; -3.32193
CONST	ENDS
;	COMDAT __real@80000000
CONST	SEGMENT
__real@80000000 DD 080000000r			; -0
CONST	ENDS
;	COMDAT __real@4b000000
CONST	SEGMENT
__real@4b000000 DD 04b000000r			; 8.38861e+06
CONST	ENDS
;	COMDAT __real@46800000
CONST	SEGMENT
__real@46800000 DD 046800000r			; 16384
CONST	ENDS
;	COMDAT __real@43800000
CONST	SEGMENT
__real@43800000 DD 043800000r			; 256
CONST	ENDS
;	COMDAT __real@43000000
CONST	SEGMENT
__real@43000000 DD 043000000r			; 128
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42800000
CONST	SEGMENT
__real@42800000 DD 042800000r			; 64
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3ccccccd
CONST	SEGMENT
__real@3ccccccd DD 03ccccccdr			; 0.025
CONST	ENDS
;	COMDAT __real@3c800000
CONST	SEGMENT
__real@3c800000 DD 03c800000r			; 0.015625
CONST	ENDS
;	COMDAT __real@3c000000
CONST	SEGMENT
__real@3c000000 DD 03c000000r			; 0.0078125
CONST	ENDS
;	COMDAT __real@3b800000
CONST	SEGMENT
__real@3b800000 DD 03b800000r			; 0.00390625
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_0BA@MMODJNLO@BT?5TerrainExist@
CONST	SEGMENT
??_C@_0BA@MMODJNLO@BT?5TerrainExist@ DB 'BT TerrainExist', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EBLJGLKG@BT?5ContinueBuild@
CONST	SEGMENT
??_C@_0BB@EBLJGLKG@BT?5ContinueBuild@ DB 'BT ContinueBuild', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BBGHHKO@BT?5BuildTerrain@
CONST	SEGMENT
??_C@_0BA@BBGHHKO@BT?5BuildTerrain@ DB 'BT BuildTerrain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KICOMPNO@BT?5SetTerrainLODDistances@
CONST	SEGMENT
??_C@_0BK@KICOMPNO@BT?5SetTerrainLODDistances@ DB 'BT SetTerrainLODDistan'
	DB	'ces', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EDBFENIB@BT?5SetTerrainYScale@
CONST	SEGMENT
??_C@_0BE@EDBFENIB@BT?5SetTerrainYScale@ DB 'BT SetTerrainYScale', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DCNFAFMO@BT?5SetTerrainScale@
CONST	SEGMENT
??_C@_0BD@DCNFAFMO@BT?5SetTerrainScale@ DB 'BT SetTerrainScale', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HHCKGEI@BT?5SetTerrainSmoothing@
CONST	SEGMENT
??_C@_0BH@HHCKGEI@BT?5SetTerrainSmoothing@ DB 'BT SetTerrainSmoothing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CNOLALLM@BT?5SetTerrainQuadRotation@
CONST	SEGMENT
??_C@_0BK@CNOLALLM@BT?5SetTerrainQuadRotation@ DB 'BT SetTerrainQuadRotat'
	DB	'ion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OBIKAFBG@BT?5SetTerrainQuadReduction@
CONST	SEGMENT
??_C@_0BL@OBIKAFBG@BT?5SetTerrainQuadReduction@ DB 'BT SetTerrainQuadRedu'
	DB	'ction', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JKCEGPLD@BT?5SetTerrainDetailTile@
CONST	SEGMENT
??_C@_0BI@JKCEGPLD@BT?5SetTerrainDetailTile@ DB 'BT SetTerrainDetailTile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LCONNBLK@BT?5SetTerrainSplit@
CONST	SEGMENT
??_C@_0BD@LCONNBLK@BT?5SetTerrainSplit@ DB 'BT SetTerrainSplit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JBJNBHDG@BT?5SetTerrainLOD@
CONST	SEGMENT
??_C@_0BB@JBJNBHDG@BT?5SetTerrainLOD@ DB 'BT SetTerrainLOD', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CPANNGCF@BT?5SetTerrainEnvironment@
CONST	SEGMENT
??_C@_0BJ@CPANNGCF@BT?5SetTerrainEnvironment@ DB 'BT SetTerrainEnvironmen'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JCPGGGAP@BT?5SetTerrainDetail@
CONST	SEGMENT
??_C@_0BE@JCPGGGAP@BT?5SetTerrainDetail@ DB 'BT SetTerrainDetail', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KBLOPLED@BT?5SetTerrainExclusion@
CONST	SEGMENT
??_C@_0BH@KBLOPLED@BT?5SetTerrainExclusion@ DB 'BT SetTerrainExclusion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CHKJPLOK@BT?5SetTerrainTexture@
CONST	SEGMENT
??_C@_0BF@CHKJPLOK@BT?5SetTerrainTexture@ DB 'BT SetTerrainTexture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MGNNNFDA@BT?5SetTerrainHeightmap@
CONST	SEGMENT
??_C@_0BH@MGNNNFDA@BT?5SetTerrainHeightmap@ DB 'BT SetTerrainHeightmap', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DFBFFKPG@BT?5MakeTerrain@
CONST	SEGMENT
??_C@_0P@DFBFFKPG@BT?5MakeTerrain@ DB 'BT MakeTerrain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OHBPFNDO@Memory?5error@
CONST	SEGMENT
??_C@_0N@OHBPFNDO@Memory?5error@ DB 'Memory error', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KFIPJJHE@Sector?5is?5excluded@
CONST	SEGMENT
??_C@_0BD@KFIPJJHE@Sector?5is?5excluded@ DB 'Sector is excluded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KBFJCEFP@This?5LOD?5level?5already?5has?5an?5o@
CONST	SEGMENT
??_C@_0CF@KBFJCEFP@This?5LOD?5level?5already?5has?5an?5o@ DB 'This LOD le'
	DB	'vel already has an object', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PALJFKLK@This?5sector?5already?5has?5an?5obje@
CONST	SEGMENT
??_C@_0CC@PALJFKLK@This?5sector?5already?5has?5an?5obje@ DB 'This sector '
	DB	'already has an object', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BHNNMBAE@Split?5too?5big?4?5?$CIMax?3?532?$CJ@
CONST	SEGMENT
??_C@_0BJ@BHNNMBAE@Split?5too?5big?4?5?$CIMax?3?532?$CJ@ DB 'Split too bi'
	DB	'g. (Max: 32)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@PJCPPDEA@Sectors?5too?5big?4?5Increase?5split@
CONST	SEGMENT
??_C@_0CB@PJCPPDEA@Sectors?5too?5big?4?5Increase?5split@ DB 'Sectors too '
	DB	'big. Increase split.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@FNMAMBGM@Terrain?5uses?5full?5version?5featu@
CONST	SEGMENT
??_C@_0DB@FNMAMBGM@Terrain?5uses?5full?5version?5featu@ DB 'Terrain uses '
	DB	'full version features. Cannot load.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JPDECBH@Sector?5not?5unlocked@
CONST	SEGMENT
??_C@_0BE@JPDECBH@Sector?5not?5unlocked@ DB 'Sector not unlocked', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FHANNEDM@Sector?5already?5locked@
CONST	SEGMENT
??_C@_0BG@FHANNEDM@Sector?5already?5locked@ DB 'Sector already locked', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GGGGGAOP@Cannot?5use?5function?5with?5a?5buil@
CONST	SEGMENT
??_C@_0CJ@GGGGGAOP@Cannot?5use?5function?5with?5a?5buil@ DB 'Cannot use f'
	DB	'unction with a built terrain', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BDKBOKMN@Terrain?5already?5built@
CONST	SEGMENT
??_C@_0BG@BDKBOKMN@Terrain?5already?5built@ DB 'Terrain already built', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EGPKFKEF@Cannot?5read?5file@
CONST	SEGMENT
??_C@_0BB@EGPKFKEF@Cannot?5read?5file@ DB 'Cannot read file', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CHPPFJPE@Invalid?5file@
CONST	SEGMENT
??_C@_0N@CHPPFJPE@Invalid?5file@ DB 'Invalid file', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DKJDCILA@Terrain?5not?5built@
CONST	SEGMENT
??_C@_0BC@DKJDCILA@Terrain?5not?5built@ DB 'Terrain not built', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HJGMNO@Sector?5doesnt?5exist@
CONST	SEGMENT
??_C@_0BE@HJGMNO@Sector?5doesnt?5exist@ DB 'Sector doesnt exist', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GEBOFHBH@Cannot?5Create?5Index?5Buffer@
CONST	SEGMENT
??_C@_0BL@GEBOFHBH@Cannot?5Create?5Index?5Buffer@ DB 'Cannot Create Index'
	DB	' Buffer', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DIIKHOBA@Cannot?5create?5Vertex?5Buffer@
CONST	SEGMENT
??_C@_0BM@DIIKHOBA@Cannot?5create?5Vertex?5Buffer@ DB 'Cannot create Vert'
	DB	'ex Buffer', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LLCDLBBF@Terrain?5not?5generated@
CONST	SEGMENT
??_C@_0BG@LLCDLBBF@Terrain?5not?5generated@ DB 'Terrain not generated', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GOBLGKKA@Object?5ID?5illegal@
CONST	SEGMENT
??_C@_0BC@GOBLGKKA@Object?5ID?5illegal@ DB 'Object ID illegal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FDGAMNEG@Already?5building@
CONST	SEGMENT
??_C@_0BB@FDGAMNEG@Already?5building@ DB 'Already building', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LKCPKLGB@Exclusion?5map?5size?5invalid@
CONST	SEGMENT
??_C@_0BL@LKCPKLGB@Exclusion?5map?5size?5invalid@ DB 'Exclusion map size '
	DB	'invalid', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EKIGNGCC@Heightmap?5size?5invalid@
CONST	SEGMENT
??_C@_0BH@EKIGNGCC@Heightmap?5size?5invalid@ DB 'Heightmap size invalid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LBCFMACE@LOD?5level?5doesnt?5exist@
CONST	SEGMENT
??_C@_0BH@LBCFMACE@LOD?5level?5doesnt?5exist@ DB 'LOD level doesnt exist', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BKLEKBKK@Heightmap?5doesnt?5exist@
CONST	SEGMENT
??_C@_0BH@BKLEKBKK@Heightmap?5doesnt?5exist@ DB 'Heightmap doesnt exist', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NLJFKIA@Invalid?5LOD?5levels@
CONST	SEGMENT
??_C@_0BD@NLJFKIA@Invalid?5LOD?5levels@ DB 'Invalid LOD levels', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LEDJHPID@Terrain?5doesnt?5exist@
CONST	SEGMENT
??_C@_0BF@LEDJHPID@Terrain?5doesnt?5exist@ DB 'Terrain doesnt exist', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BEMMNHIC@Max?5terrains?5Exceded@
CONST	SEGMENT
??_C@_0BF@BEMMNHIC@Max?5terrains?5Exceded@ DB 'Max terrains Exceded', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NBCGADJA@Unknown@
CONST	SEGMENT
??_C@_07NBCGADJA@Unknown@ DB 'Unknown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MBHKDPAN@?6Function?3?5@
CONST	SEGMENT
??_C@_0M@MBHKDPAN@?6Function?3?5@ DB 0aH, 'Function: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BCBOCHIC@BT?5Error?3?5@
CONST	SEGMENT
??_C@_0L@BCBOCHIC@BT?5Error?3?5@ DB 'BT Error: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NIEOOMPE@DepthMap@
CONST	SEGMENT
??_C@_08NIEOOMPE@DepthMap@ DB 'DepthMap', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CCEABGGJ@Distant@
CONST	SEGMENT
??_C@_07CCEABGGJ@Distant@ DB 'Distant', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IBEMBBGH@2?402?5R2?5FULL@
CONST	SEGMENT
??_C@_0N@IBEMBBGH@2?402?5R2?5FULL@ DB '2.02 R2 FULL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08CMDKBPJM@TEXCOORD@
CONST	SEGMENT
??_C@_08CMDKBPJM@TEXCOORD@ DB 'TEXCOORD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IOJAGNKJ@NORMAL@
CONST	SEGMENT
??_C@_06IOJAGNKJ@NORMAL@ DB 'NORMAL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JPMAAECC@POSITION@
CONST	SEGMENT
??_C@_08JPMAAECC@POSITION@ DB 'POSITION', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?BT_Intern_Render@@YAXXZ$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?BT_Intern_Render@@YAXXZ$0
__unwindtable$?BT_Intern_Render@@YAXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?BT_Intern_Render@@YAXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?BT_Intern_Render@@YAXXZ$2
__ehfuncinfo$?BT_Intern_Render@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?BT_Intern_Render@@YAXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?BT_Intern_Render@@YAXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetSectorInfo@@YAPAXKKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_LODLevelID$ = 12					; size = 4
_SectorID$ = 16						; size = 4
?BT_GetSectorInfo@@YAPAXKKK@Z PROC			; BT_GetSectorInfo, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 2132
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 2133
  00003	6b 4d 08 74	 imul	 ecx, DWORD PTR _terrainid$[ebp], 116
  00007	8b 45 0c	 mov	 eax, DWORD PTR _LODLevelID$[ebp]
  0000a	8d 14 c0	 lea	 edx, DWORD PTR [eax+eax*8]
  0000d	8b 81 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+68]
  00013	69 4d 10 94 00
	00 00		 imul	 ecx, DWORD PTR _SectorID$[ebp], 148
  0001a	8b 44 90 10	 mov	 eax, DWORD PTR [eax+edx*4+16]
  0001e	8b 84 08 90 00
	00 00		 mov	 eax, DWORD PTR [eax+ecx+144]
; Line 2134
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?BT_GetSectorInfo@@YAPAXKKK@Z ENDP			; BT_GetSectorInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_UpdateTerrainObjects@@YAXK@Z
_TEXT	SEGMENT
tv611 = -8						; size = 4
_LODLevel$1$ = -4					; size = 4
tv597 = 8						; size = 4
_terrainid$ = 8						; size = 4
?BT_UpdateTerrainObjects@@YAXK@Z PROC			; BT_UpdateTerrainObjects, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1662
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1662
  00006	83 ec 08	 sub	 esp, 8
; Line 1664
  00009	c7 05 a8 73 00
	00 3f 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 63 ; 0000003fH
; Line 3666
  00013	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
; Line 1662
  00016	57		 push	 edi
; Line 3666
  00017	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  0001c	0f 87 a9 01 00
	00		 ja	 $LN8@BT_UpdateT
; Line 3669
  00022	6b f9 74	 imul	 edi, ecx, 116
; Line 1667
  00025	80 bf 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edi], 0
  0002c	0f 84 99 01 00
	00		 je	 $LN8@BT_UpdateT
; Line 1669
  00032	80 bf 08 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edi+8], 0
  00039	0f 84 96 01 00
	00		 je	 $LN9@BT_UpdateT
; Line 1674
  0003f	33 c9		 xor	 ecx, ecx
  00041	89 4d fc	 mov	 DWORD PTR _LODLevel$1$[ebp], ecx
  00044	38 8f 32 00 00
	00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edi+50], cl
  0004a	0f 86 85 01 00
	00		 jbe	 $LN9@BT_UpdateT
; Line 1671
  00050	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3c000000
  00058	33 c0		 xor	 eax, eax
  0005a	53		 push	 ebx
  0005b	89 45 08	 mov	 DWORD PTR tv597[ebp], eax
  0005e	56		 push	 esi
  0005f	90		 npad	 1
$LL4@BT_UpdateT:
; Line 1676
  00060	8b 97 44 00 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
; Line 1679
  00066	33 db		 xor	 ebx, ebx
  00068	03 d0		 add	 edx, eax
  0006a	33 f6		 xor	 esi, esi
  0006c	66 3b 5a 0a	 cmp	 bx, WORD PTR [edx+10]
  00070	0f 83 32 01 00
	00		 jae	 $LN2@BT_UpdateT
  00076	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL7@BT_UpdateT:
; Line 1681
  00080	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  00083	03 cb		 add	 ecx, ebx
; Line 1684
  00085	83 b9 88 00 00
	00 00		 cmp	 DWORD PTR [ecx+136], 0
  0008c	0f 84 af 00 00
	00		 je	 $LN26@BT_UpdateT
; Line 1686
  00092	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  00097	f3 0f 59 87 34
	00 00 00	 mulss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+52]
  0009f	8b 87 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
  000a5	f3 0f 59 c1	 mulss	 xmm0, xmm1
  000a9	f3 0f 58 80 84
	00 00 00	 addss	 xmm0, DWORD PTR [eax+132]
  000b1	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]
  000b7	f3 0f 11 80 84
	00 00 00	 movss	 DWORD PTR [eax+132], xmm0
; Line 1687
  000bf	f3 0f 10 41 10	 movss	 xmm0, DWORD PTR [ecx+16]
  000c4	f3 0f 59 87 34
	00 00 00	 mulss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+52]
  000cc	8b 87 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
  000d2	f3 0f 59 c1	 mulss	 xmm0, xmm1
  000d6	f3 0f 58 80 88
	00 00 00	 addss	 xmm0, DWORD PTR [eax+136]
  000de	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]
  000e4	f3 0f 11 80 88
	00 00 00	 movss	 DWORD PTR [eax+136], xmm0
; Line 1688
  000ec	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  000f1	f3 0f 59 87 34
	00 00 00	 mulss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+52]
  000f9	8b 87 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
  000ff	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00103	f3 0f 58 80 8c
	00 00 00	 addss	 xmm0, DWORD PTR [eax+140]
  0010b	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]
  00111	f3 0f 11 80 8c
	00 00 00	 movss	 DWORD PTR [eax+140], xmm0
; Line 1689
  00119	8b 87 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
  0011f	8b 89 88 00 00
	00		 mov	 ecx, DWORD PTR [ecx+136]
  00125	f3 0f 7e 80 9c
	00 00 00	 movq	 xmm0, QWORD PTR [eax+156]
  0012d	66 0f d6 81 9c
	00 00 00	 movq	 QWORD PTR [ecx+156], xmm0
  00135	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [eax+164]
  0013b	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax
$LN26@BT_UpdateT:
; Line 1693
  00141	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
  00144	85 c9		 test	 ecx, ecx
  00146	74 47		 je	 SHORT $LN5@BT_UpdateT
; Line 1695
  00148	8b 87 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
  0014e	f3 0f 7e 80 84
	00 00 00	 movq	 xmm0, QWORD PTR [eax+132]
  00156	66 0f d6 81 84
	00 00 00	 movq	 QWORD PTR [ecx+132], xmm0
  0015e	8b 80 8c 00 00
	00		 mov	 eax, DWORD PTR [eax+140]
  00164	89 81 8c 00 00
	00		 mov	 DWORD PTR [ecx+140], eax
; Line 1696
  0016a	8b 87 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
  00170	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
  00173	f3 0f 7e 80 9c
	00 00 00	 movq	 xmm0, QWORD PTR [eax+156]
  0017b	66 0f d6 81 9c
	00 00 00	 movq	 QWORD PTR [ecx+156], xmm0
  00183	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [eax+164]
  00189	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax
$LN5@BT_UpdateT:
; Line 1679
  0018f	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  00193	46		 inc	 esi
  00194	81 c3 94 00 00
	00		 add	 ebx, 148		; 00000094H
  0019a	3b f0		 cmp	 esi, eax
  0019c	0f 82 de fe ff
	ff		 jb	 $LL7@BT_UpdateT
  001a2	8b 4d fc	 mov	 ecx, DWORD PTR _LODLevel$1$[ebp]
  001a5	8b 45 08	 mov	 eax, DWORD PTR tv597[ebp]
$LN2@BT_UpdateT:
; Line 1674
  001a8	83 c0 24	 add	 eax, 36			; 00000024H
  001ab	41		 inc	 ecx
  001ac	89 45 08	 mov	 DWORD PTR tv597[ebp], eax
  001af	0f b6 87 32 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[edi+50]
  001b6	3b c8		 cmp	 ecx, eax
  001b8	89 4d fc	 mov	 DWORD PTR _LODLevel$1$[ebp], ecx
  001bb	8b 45 08	 mov	 eax, DWORD PTR tv597[ebp]
  001be	0f 82 9c fe ff
	ff		 jb	 $LL4@BT_UpdateT
; Line 1701
  001c4	5e		 pop	 esi
  001c5	5b		 pop	 ebx
  001c6	5f		 pop	 edi
; Line 1704
  001c7	8b e5		 mov	 esp, ebp
  001c9	5d		 pop	 ebp
  001ca	c3		 ret	 0
$LN8@BT_UpdateT:
; Line 1702
  001cb	6a 02		 push	 2
  001cd	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  001d2	83 c4 04	 add	 esp, 4
$LN9@BT_UpdateT:
  001d5	5f		 pop	 edi
; Line 1704
  001d6	8b e5		 mov	 esp, ebp
  001d8	5d		 pop	 ebp
  001d9	c3		 ret	 0
?BT_UpdateTerrainObjects@@YAXK@Z ENDP			; BT_UpdateTerrainObjects
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BTReceiveCoreDataPtr@@YAXPAX@Z
_TEXT	SEGMENT
_CorePtr$ = 8						; size = 4
?BTReceiveCoreDataPtr@@YAXPAX@Z PROC			; BTReceiveCoreDataPtr, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 79
  00000	c2 00 00	 ret	 0
?BTReceiveCoreDataPtr@@YAXPAX@Z ENDP			; BTReceiveCoreDataPtr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_RTTMSUpdateHandler@@YAXKKKGGPAM@Z
_TEXT	SEGMENT
_TerrainID$ = 8						; size = 4
_LODLevelID$ = 12					; size = 4
_SectorID$ = 16						; size = 4
_StartVertex$ = 20					; size = 2
_EndVertex$ = 24					; size = 2
_VerticesPtr$ = 28					; size = 4
?BT_Intern_RTTMSUpdateHandler@@YAXKKKGGPAM@Z PROC	; BT_Intern_RTTMSUpdateHandler, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4719
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 4725
  00003	6b 4d 08 74	 imul	 ecx, DWORD PTR _TerrainID$[ebp], 116
  00007	8b 45 0c	 mov	 eax, DWORD PTR _LODLevelID$[ebp]
  0000a	56		 push	 esi
  0000b	69 75 10 94 00
	00 00		 imul	 esi, DWORD PTR _SectorID$[ebp], 148
  00012	8d 14 c0	 lea	 edx, DWORD PTR [eax+eax*8]
  00015	8b 81 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+68]
  0001b	03 74 90 10	 add	 esi, DWORD PTR [eax+edx*4+16]
; Line 4728
  0001f	8b 45 18	 mov	 eax, DWORD PTR _EndVertex$[ebp]
  00022	66 85 c0	 test	 ax, ax
  00025	74 74		 je	 SHORT $LN3@BT_Intern_
; Line 4731
  00027	ff 75 1c	 push	 DWORD PTR _VerticesPtr$[ebp]
  0002a	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0002d	50		 push	 eax
  0002e	ff 75 14	 push	 DWORD PTR _StartVertex$[ebp]
  00031	e8 00 00 00 00	 call	 ?ChangeMeshData@BT_QuadMap@@QAEXGGPAM@Z ; BT_QuadMap::ChangeMeshData
; Line 4741
  00036	8b 86 88 00 00
	00		 mov	 eax, DWORD PTR [esi+136]
  0003c	c6 86 80 00 00
	00 01		 mov	 BYTE PTR [esi+128], 1
  00043	66 c7 46 69 01
	01		 mov	 WORD PTR [esi+105], 257	; 00000101H
  00049	c6 46 68 01	 mov	 BYTE PTR [esi+104], 1
  0004d	c6 46 6b 01	 mov	 BYTE PTR [esi+107], 1
  00051	85 c0		 test	 eax, eax
  00053	74 11		 je	 SHORT $LN6@BT_Intern_
; Line 4742
  00055	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00058	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0005b	ff b0 04 03 00
	00		 push	 DWORD PTR [eax+772]
  00061	e8 00 00 00 00	 call	 ?UpdateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z ; BT_QuadMap::UpdateDBPMesh
$LN6@BT_Intern_:
; Line 4744
  00066	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  00069	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  0006d	74 18		 je	 SHORT $LN8@BT_Intern_
; Line 4746
  0006f	8b 86 8c 00 00
	00		 mov	 eax, DWORD PTR [esi+140]
  00075	85 c0		 test	 eax, eax
  00077	74 0e		 je	 SHORT $LN8@BT_Intern_
; Line 4747
  00079	ff b0 04 03 00
	00		 push	 DWORD PTR [eax+772]
  0007f	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00082	e8 00 00 00 00	 call	 ?UpdateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z ; BT_QuadMap::UpdateDBPMesh
$LN8@BT_Intern_:
; Line 4751
  00087	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  0008a	66 0f 1f 44 00
	00		 npad	 6
$LL4@BT_Intern_:
; Line 4753
  00090	c6 40 32 01	 mov	 BYTE PTR [eax+50], 1
; Line 4754
  00094	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
; Line 4755
  00097	85 c0		 test	 eax, eax
  00099	75 f5		 jne	 SHORT $LL4@BT_Intern_
$LN3@BT_Intern_:
  0009b	5e		 pop	 esi
; Line 4758
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
?BT_Intern_RTTMSUpdateHandler@@YAXKKKGGPAM@Z ENDP	; BT_Intern_RTTMSUpdateHandler
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_CullBox@@YAHPAUs_BT_CullBox@@@Z
_TEXT	SEGMENT
_CullBox$5$ = -24					; size = 4
_CullBox$4$ = -20					; size = 4
_CullBox$1$ = -16					; size = 4
_CullBox$6$ = -12					; size = 4
_CullBox$3$ = -8					; size = 4
_CullBox$2$ = -4					; size = 4
tv1088 = 8						; size = 4
_pCullBox$ = 8						; size = 4
?BT_Intern_CullBox@@YAHPAUs_BT_CullBox@@@Z PROC		; BT_Intern_CullBox, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
; Line 4647
  00006	8b 45 08	 mov	 eax, DWORD PTR _pCullBox$[ebp]
  00009	ff 05 34 74 00
	00		 inc	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29748
; Line 4657
  0000f	33 d2		 xor	 edx, edx
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	f3 0f 10 58 0c	 movss	 xmm3, DWORD PTR [eax+12]
  00018	be d0 73 00 00	 mov	 esi, OFFSET ?BT_Main@@3Us_BT_main@@A+29648
  0001d	f3 0f 59 1d c4
	73 00 00	 mulss	 xmm3, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29636
  00025	8d 5a 01	 lea	 ebx, DWORD PTR [edx+1]
  00028	57		 push	 edi
  00029	f3 0f 10 50 08	 movss	 xmm2, DWORD PTR [eax+8]
  0002e	f3 0f 10 30	 movss	 xmm6, DWORD PTR [eax]
  00032	f3 0f 5c 1d b8
	73 00 00	 subss	 xmm3, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29624
  0003a	f3 0f 10 60 04	 movss	 xmm4, DWORD PTR [eax+4]
  0003f	f3 0f 59 15 c4
	73 00 00	 mulss	 xmm2, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29636
  00047	f3 0f 59 35 cc
	73 00 00	 mulss	 xmm6, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29644
  0004f	f3 0f 59 25 cc
	73 00 00	 mulss	 xmm4, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29644
  00057	f3 0f 5c 15 b8
	73 00 00	 subss	 xmm2, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29624
  0005f	f3 0f 5c 35 c0
	73 00 00	 subss	 xmm6, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29632
  00067	f3 0f 5c 25 c0
	73 00 00	 subss	 xmm4, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29632
  0006f	f3 0f 11 5d fc	 movss	 DWORD PTR _CullBox$2$[ebp], xmm3
  00074	f3 0f 10 58 10	 movss	 xmm3, DWORD PTR [eax+16]
  00079	f3 0f 59 1d c8
	73 00 00	 mulss	 xmm3, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29640
  00081	f3 0f 11 55 f0	 movss	 DWORD PTR _CullBox$1$[ebp], xmm2
  00086	f3 0f 11 75 e8	 movss	 DWORD PTR _CullBox$5$[ebp], xmm6
  0008b	f3 0f 5c 1d bc
	73 00 00	 subss	 xmm3, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29628
  00093	f3 0f 11 65 f4	 movss	 DWORD PTR _CullBox$6$[ebp], xmm4
  00098	f3 0f 11 5d f8	 movss	 DWORD PTR _CullBox$3$[ebp], xmm3
  0009d	f3 0f 10 58 14	 movss	 xmm3, DWORD PTR [eax+20]
  000a2	f3 0f 59 1d c8
	73 00 00	 mulss	 xmm3, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29640
  000aa	f3 0f 5c 1d bc
	73 00 00	 subss	 xmm3, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29628
  000b2	f3 0f 11 5d ec	 movss	 DWORD PTR _CullBox$4$[ebp], xmm3
  000b7	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL4@BT_Intern_:
; Line 4663
  000c0	f3 0f 10 66 04	 movss	 xmm4, DWORD PTR [esi+4]
  000c5	33 c0		 xor	 eax, eax
  000c7	0f 28 cc	 movaps	 xmm1, xmm4
  000ca	8b fa		 mov	 edi, edx
  000cc	f3 0f 59 cb	 mulss	 xmm1, xmm3
  000d0	f3 0f 10 1e	 movss	 xmm3, DWORD PTR [esi]
  000d4	0f 28 fb	 movaps	 xmm7, xmm3
; Line 4667
  000d7	f3 0f 59 65 f8	 mulss	 xmm4, DWORD PTR _CullBox$3$[ebp]
  000dc	f3 0f 59 5d fc	 mulss	 xmm3, DWORD PTR _CullBox$2$[ebp]
  000e1	f3 0f 59 fa	 mulss	 xmm7, xmm2
  000e5	f3 0f 10 56 08	 movss	 xmm2, DWORD PTR [esi+8]
  000ea	f3 0f 59 d6	 mulss	 xmm2, xmm6
  000ee	f3 0f 10 76 0c	 movss	 xmm6, DWORD PTR [esi+12]
  000f3	0f 28 ef	 movaps	 xmm5, xmm7
  000f6	f3 0f 58 e9	 addss	 xmm5, xmm1
  000fa	f3 0f 11 5d 08	 movss	 DWORD PTR tv1088[ebp], xmm3
  000ff	0f 28 c2	 movaps	 xmm0, xmm2
  00102	f3 0f 58 d9	 addss	 xmm3, xmm1
  00106	0f 57 c9	 xorps	 xmm1, xmm1
  00109	f3 0f 58 fc	 addss	 xmm7, xmm4
  0010d	f3 0f 58 c5	 addss	 xmm0, xmm5
  00111	f3 0f 58 c6	 addss	 xmm0, xmm6
  00115	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  0011c	0f 28 c3	 movaps	 xmm0, xmm3
  0011f	f3 0f 58 c2	 addss	 xmm0, xmm2
  00123	0f 47 c3	 cmova	 eax, ebx
  00126	f3 0f 58 c6	 addss	 xmm0, xmm6
  0012a	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  0012d	0f 2f c1	 comiss	 xmm0, xmm1
  00130	0f 28 c7	 movaps	 xmm0, xmm7
  00133	f3 0f 58 c2	 addss	 xmm0, xmm2
  00137	0f 46 c8	 cmovbe	 ecx, eax
  0013a	f3 0f 58 c6	 addss	 xmm0, xmm6
; Line 4669
  0013e	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00141	0f 2f c1	 comiss	 xmm0, xmm1
  00144	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR tv1088[ebp]
; Line 4671
  00149	f3 0f 10 4e 08	 movss	 xmm1, DWORD PTR [esi+8]
  0014e	f3 0f 58 c4	 addss	 xmm0, xmm4
  00152	f3 0f 59 4d f4	 mulss	 xmm1, DWORD PTR _CullBox$6$[ebp]
  00157	0f 46 c1	 cmovbe	 eax, ecx
  0015a	f3 0f 11 45 08	 movss	 DWORD PTR tv1088[ebp], xmm0
  0015f	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  00162	f3 0f 58 c2	 addss	 xmm0, xmm2
  00166	0f 57 d2	 xorps	 xmm2, xmm2
  00169	f3 0f 58 c6	 addss	 xmm0, xmm6
  0016d	0f 2f c2	 comiss	 xmm0, xmm2
  00170	0f 28 c1	 movaps	 xmm0, xmm1
  00173	f3 0f 58 c5	 addss	 xmm0, xmm5
  00177	0f 46 c8	 cmovbe	 ecx, eax
  0017a	f3 0f 58 c6	 addss	 xmm0, xmm6
; Line 4673
  0017e	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00181	0f 2f c2	 comiss	 xmm0, xmm2
  00184	0f 28 c1	 movaps	 xmm0, xmm1
  00187	f3 0f 58 c3	 addss	 xmm0, xmm3
  0018b	0f 46 c1	 cmovbe	 eax, ecx
  0018e	f3 0f 58 c6	 addss	 xmm0, xmm6
; Line 4675
  00192	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  00195	0f 2f c2	 comiss	 xmm0, xmm2
  00198	0f 28 c1	 movaps	 xmm0, xmm1
; Line 4677
  0019b	f3 0f 58 4d 08	 addss	 xmm1, DWORD PTR tv1088[ebp]
  001a0	f3 0f 58 c7	 addss	 xmm0, xmm7
  001a4	0f 46 c8	 cmovbe	 ecx, eax
  001a7	f3 0f 58 ce	 addss	 xmm1, xmm6
  001ab	f3 0f 58 c6	 addss	 xmm0, xmm6
  001af	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  001b2	0f 2f c2	 comiss	 xmm0, xmm2
  001b5	0f 46 c1	 cmovbe	 eax, ecx
; Line 4679
  001b8	0f 2f ca	 comiss	 xmm1, xmm2
  001bb	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  001be	0f 46 c8	 cmovbe	 ecx, eax
  001c1	85 c9		 test	 ecx, ecx
  001c3	74 35		 je	 SHORT $LN17@BT_Intern_
; Line 4660
  001c5	f3 0f 10 55 f0	 movss	 xmm2, DWORD PTR _CullBox$1$[ebp]
  001ca	42		 inc	 edx
  001cb	f3 0f 10 5d ec	 movss	 xmm3, DWORD PTR _CullBox$4$[ebp]
  001d0	83 f9 08	 cmp	 ecx, 8
  001d3	f3 0f 10 75 e8	 movss	 xmm6, DWORD PTR _CullBox$5$[ebp]
  001d8	0f 45 d7	 cmovne	 edx, edi
  001db	83 c6 10	 add	 esi, 16			; 00000010H
  001de	81 fe 20 74 00
	00		 cmp	 esi, OFFSET ?BT_Main@@3Us_BT_main@@A+29728
  001e4	0f 8c d6 fe ff
	ff		 jl	 $LL4@BT_Intern_
; Line 4684
  001ea	33 c0		 xor	 eax, eax
  001ec	83 fa 04	 cmp	 edx, 4
  001ef	5f		 pop	 edi
  001f0	0f 94 c0	 sete	 al
; Line 4685
  001f3	5e		 pop	 esi
  001f4	40		 inc	 eax
  001f5	5b		 pop	 ebx
  001f6	8b e5		 mov	 esp, ebp
  001f8	5d		 pop	 ebp
  001f9	c3		 ret	 0
$LN17@BT_Intern_:
  001fa	5f		 pop	 edi
  001fb	5e		 pop	 esi
  001fc	33 c0		 xor	 eax, eax
  001fe	5b		 pop	 ebx
  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c3		 ret	 0
?BT_Intern_CullBox@@YAHPAUs_BT_CullBox@@@Z ENDP		; BT_Intern_CullBox
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_RefreshIB@@YAXPAUs_BT_DrawBuffer@@KKPAG@Z
_TEXT	SEGMENT
_box$1 = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_DrawBuffer$ = 8					; size = 4
_FirstIndex$ = 12					; size = 4
_LastIndex$ = 16					; size = 4
_Index$ = 20						; size = 4
?BT_Intern_RefreshIB@@YAXPAUs_BT_DrawBuffer@@KKPAG@Z PROC ; BT_Intern_RefreshIB, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4549
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _FirstIndex$[ebp]
  00013	8b 55 14	 mov	 edx, DWORD PTR _Index$[ebp]
; Line 4566
  00016	03 c0		 add	 eax, eax
  00018	56		 push	 esi
  00019	8b 75 08	 mov	 esi, DWORD PTR _DrawBuffer$[ebp]
; Line 4572
  0001c	6a 00		 push	 0
  0001e	89 45 e4	 mov	 DWORD PTR _box$1[ebp], eax
  00021	8b 45 10	 mov	 eax, DWORD PTR _LastIndex$[ebp]
  00024	6a 00		 push	 0
  00026	52		 push	 edx
  00027	03 c0		 add	 eax, eax
  00029	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _box$1[ebp+4], 0
  00030	89 45 f0	 mov	 DWORD PTR _box$1[ebp+12], eax
  00033	8d 55 e4	 lea	 edx, DWORD PTR _box$1[ebp]
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  0003b	52		 push	 edx
  0003c	6a 00		 push	 0
  0003e	ff 76 04	 push	 DWORD PTR [esi+4]
  00041	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _box$1[ebp+16], 1
  00048	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _box$1[ebp+8], 0
  0004f	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _box$1[ebp+20], 1
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	50		 push	 eax
  00059	ff 91 c0 00 00
	00		 call	 DWORD PTR [ecx+192]
; Line 4586
  0005f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00062	33 cd		 xor	 ecx, ebp
  00064	5e		 pop	 esi
  00065	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
?BT_Intern_RefreshIB@@YAXPAUs_BT_DrawBuffer@@KKPAG@Z ENDP ; BT_Intern_RefreshIB
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_RefreshVB@@YAXPAUs_BT_DrawBuffer@@KKPAUBT_Meshdata_Vertex@@@Z
_TEXT	SEGMENT
_box$1 = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_DrawBuffer$ = 8					; size = 4
_FirstVertex$ = 12					; size = 4
_LastVertex$ = 16					; size = 4
_Vertex$ = 20						; size = 4
?BT_Intern_RefreshVB@@YAXPAUs_BT_DrawBuffer@@KKPAUBT_Meshdata_Vertex@@@Z PROC ; BT_Intern_RefreshVB, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4501
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _FirstVertex$[ebp]
  00013	8b 55 14	 mov	 edx, DWORD PTR _Vertex$[ebp]
  00016	56		 push	 esi
  00017	8b 75 08	 mov	 esi, DWORD PTR _DrawBuffer$[ebp]
; Line 4533
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	52		 push	 edx
  0001f	0f b6 46 1c	 movzx	 eax, BYTE PTR [esi+28]
  00023	8d 55 e4	 lea	 edx, DWORD PTR _box$1[ebp]
  00026	0f af c8	 imul	 ecx, eax
  00029	0f af 45 10	 imul	 eax, DWORD PTR _LastVertex$[ebp]
  0002d	52		 push	 edx
  0002e	6a 00		 push	 0
  00030	ff 36		 push	 DWORD PTR [esi]
  00032	89 4d e4	 mov	 DWORD PTR _box$1[ebp], ecx
  00035	89 45 f0	 mov	 DWORD PTR _box$1[ebp+12], eax
  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  0003d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _box$1[ebp+4], 0
  00044	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _box$1[ebp+16], 1
  0004b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _box$1[ebp+8], 0
  00052	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _box$1[ebp+20], 1
  00059	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005b	50		 push	 eax
  0005c	ff 91 c0 00 00
	00		 call	 DWORD PTR [ecx+192]
; Line 4546
  00062	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00065	33 cd		 xor	 ecx, ebp
  00067	5e		 pop	 esi
  00068	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?BT_Intern_RefreshVB@@YAXPAUs_BT_DrawBuffer@@KKPAUBT_Meshdata_Vertex@@@Z ENDP ; BT_Intern_RefreshVB
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_DeAllocateQuadTreeRec@@YAXPAUs_BT_QuadTree@@@Z
_TEXT	SEGMENT
_Quadtree$ = 8						; size = 4
?BT_Intern_DeAllocateQuadTreeRec@@YAXPAUs_BT_QuadTree@@@Z PROC ; BT_Intern_DeAllocateQuadTreeRec, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4470
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 4472
  00004	8b 75 08	 mov	 esi, DWORD PTR _Quadtree$[ebp]
  00007	8b 06		 mov	 eax, DWORD PTR [esi]
  00009	85 c0		 test	 eax, eax
  0000b	74 10		 je	 SHORT $LN2@BT_Intern_
; Line 4473
  0000d	50		 push	 eax
  0000e	e8 00 00 00 00	 call	 ?BT_Intern_DeAllocateQuadTreeRec@@YAXPAUs_BT_QuadTree@@@Z ; BT_Intern_DeAllocateQuadTreeRec
; Line 4474
  00013	ff 36		 push	 DWORD PTR [esi]
  00015	e8 00 00 00 00	 call	 _free
  0001a	83 c4 08	 add	 esp, 8
$LN2@BT_Intern_:
; Line 4477
  0001d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00020	85 c0		 test	 eax, eax
  00022	74 11		 je	 SHORT $LN3@BT_Intern_
; Line 4478
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?BT_Intern_DeAllocateQuadTreeRec@@YAXPAUs_BT_QuadTree@@@Z ; BT_Intern_DeAllocateQuadTreeRec
; Line 4479
  0002a	ff 76 04	 push	 DWORD PTR [esi+4]
  0002d	e8 00 00 00 00	 call	 _free
  00032	83 c4 08	 add	 esp, 8
$LN3@BT_Intern_:
; Line 4482
  00035	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00038	85 c0		 test	 eax, eax
  0003a	74 11		 je	 SHORT $LN4@BT_Intern_
; Line 4483
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?BT_Intern_DeAllocateQuadTreeRec@@YAXPAUs_BT_QuadTree@@@Z ; BT_Intern_DeAllocateQuadTreeRec
; Line 4484
  00042	ff 76 08	 push	 DWORD PTR [esi+8]
  00045	e8 00 00 00 00	 call	 _free
  0004a	83 c4 08	 add	 esp, 8
$LN4@BT_Intern_:
; Line 4487
  0004d	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00050	85 c0		 test	 eax, eax
  00052	74 09		 je	 SHORT $LN5@BT_Intern_
; Line 4488
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 ?BT_Intern_DeAllocateQuadTreeRec@@YAXPAUs_BT_QuadTree@@@Z ; BT_Intern_DeAllocateQuadTreeRec
  0005a	83 c4 04	 add	 esp, 4
$LN5@BT_Intern_:
; Line 4493
  0005d	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00060	5e		 pop	 esi
  00061	85 c0		 test	 eax, eax
  00063	74 09		 je	 SHORT $LN6@BT_Intern_
; Line 4494
  00065	89 45 08	 mov	 DWORD PTR _Quadtree$[ebp], eax
; Line 4495
  00068	5d		 pop	 ebp
; Line 4494
  00069	e9 00 00 00 00	 jmp	 _free
$LN6@BT_Intern_:
; Line 4495
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
?BT_Intern_DeAllocateQuadTreeRec@@YAXPAUs_BT_QuadTree@@@Z ENDP ; BT_Intern_DeAllocateQuadTreeRec
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_AllocateQuadTreeRec@@YAPAUs_BT_QuadTree@@PAUs_BT_terrain@@EPAU1@EE@Z
_TEXT	SEGMENT
_QHasSector$1$ = -1					; size = 1
_Terrain$ = 8						; size = 4
_Levels$ = 12						; size = 1
_Parent$ = 16						; size = 4
tv1023 = 20						; size = 4
_row$ = 20						; size = 1
tv1022 = 24						; size = 4
_collumn$ = 24						; size = 1
?BT_Intern_AllocateQuadTreeRec@@YAPAUs_BT_QuadTree@@PAUs_BT_terrain@@EPAU1@EE@Z PROC ; BT_Intern_AllocateQuadTreeRec, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4347
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
; Line 4353
  00007	6a 34		 push	 52			; 00000034H
  00009	c6 45 ff 00	 mov	 BYTE PTR _QHasSector$1$[ebp], 0
  0000d	e8 00 00 00 00	 call	 _malloc
  00012	8b f8		 mov	 edi, eax
  00014	83 c4 04	 add	 esp, 4
; Line 4354
  00017	85 ff		 test	 edi, edi
  00019	75 0a		 jne	 SHORT $LN2@BT_Intern_
; Line 4355
  0001b	6a 1b		 push	 27			; 0000001bH
  0001d	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00022	83 c4 04	 add	 esp, 4
$LN2@BT_Intern_:
; Line 4356
  00025	6a 34		 push	 52			; 00000034H
  00027	6a 00		 push	 0
  00029	57		 push	 edi
  0002a	e8 00 00 00 00	 call	 _memset
; Line 4361
  0002f	8a 45 18	 mov	 al, BYTE PTR _collumn$[ebp]
  00032	8a 5d 0c	 mov	 bl, BYTE PTR _Levels$[ebp]
  00035	8a 7d 14	 mov	 bh, BYTE PTR _row$[ebp]
  00038	88 47 16	 mov	 BYTE PTR [edi+22], al
; Line 4362
  0003b	8b 45 10	 mov	 eax, DWORD PTR _Parent$[ebp]
; Line 4367
  0003e	6a 18		 push	 24			; 00000018H
  00040	88 5f 14	 mov	 BYTE PTR [edi+20], bl
  00043	88 7f 15	 mov	 BYTE PTR [edi+21], bh
  00046	89 47 10	 mov	 DWORD PTR [edi+16], eax
  00049	c6 47 1c 00	 mov	 BYTE PTR [edi+28], 0
  0004d	c6 47 31 00	 mov	 BYTE PTR [edi+49], 0
  00051	e8 00 00 00 00	 call	 _malloc
  00056	83 c4 10	 add	 esp, 16			; 00000010H
  00059	89 47 20	 mov	 DWORD PTR [edi+32], eax
; Line 4368
  0005c	85 c0		 test	 eax, eax
  0005e	75 0a		 jne	 SHORT $LN3@BT_Intern_
; Line 4369
  00060	6a 1b		 push	 27			; 0000001bH
  00062	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00067	83 c4 04	 add	 esp, 4
$LN3@BT_Intern_:
; Line 4372
  0006a	8b 55 08	 mov	 edx, DWORD PTR _Terrain$[ebp]
  0006d	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f000000
  00075	3a 5a 32	 cmp	 bl, BYTE PTR [edx+50]
  00078	0f 83 ef 00 00
	00		 jae	 $LN4@BT_Intern_
; Line 4375
  0007e	8b 52 44	 mov	 edx, DWORD PTR [edx+68]
  00081	0f b6 c3	 movzx	 eax, bl
  00084	8d 34 c0	 lea	 esi, DWORD PTR [eax+eax*8]
  00087	0f b6 45 18	 movzx	 eax, BYTE PTR _collumn$[ebp]
  0008b	0f b7 4c b2 14	 movzx	 ecx, WORD PTR [edx+esi*4+20]
  00090	0f af c8	 imul	 ecx, eax
  00093	0f b6 c7	 movzx	 eax, bh
  00096	03 c8		 add	 ecx, eax
  00098	69 c1 94 00 00
	00		 imul	 eax, ecx, 148
  0009e	03 44 b2 10	 add	 eax, DWORD PTR [edx+esi*4+16]
; Line 4379
  000a2	8b 55 08	 mov	 edx, DWORD PTR _Terrain$[ebp]
  000a5	89 47 18	 mov	 DWORD PTR [edi+24], eax
  000a8	89 78 7c	 mov	 DWORD PTR [eax+124], edi
  000ab	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  000ae	80 39 00	 cmp	 BYTE PTR [ecx], 0
  000b1	0f 85 a8 00 00
	00		 jne	 $LN6@BT_Intern_
; Line 4381
  000b7	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  000ba	f3 0f 10 49 0c	 movss	 xmm1, DWORD PTR [ecx+12]
  000bf	f3 0f 10 44 b0
	04		 movss	 xmm0, DWORD PTR [eax+esi*4+4]
  000c5	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  000c8	f3 0f 59 c2	 mulss	 xmm0, xmm2
  000cc	f3 0f 5c c8	 subss	 xmm1, xmm0
  000d0	f3 0f 11 48 08	 movss	 DWORD PTR [eax+8], xmm1
; Line 4382
  000d5	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  000d8	f3 0f 10 44 b0
	04		 movss	 xmm0, DWORD PTR [eax+esi*4+4]
  000de	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  000e1	f3 0f 59 c2	 mulss	 xmm0, xmm2
  000e5	f3 0f 58 40 0c	 addss	 xmm0, DWORD PTR [eax+12]
  000ea	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  000ed	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0
; Line 4383
  000f2	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  000f5	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  000f8	f3 0f 10 44 b0
	04		 movss	 xmm0, DWORD PTR [eax+esi*4+4]
  000fe	f3 0f 10 49 14	 movss	 xmm1, DWORD PTR [ecx+20]
  00103	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00106	f3 0f 59 c2	 mulss	 xmm0, xmm2
  0010a	f3 0f 5c c8	 subss	 xmm1, xmm0
  0010e	f3 0f 11 08	 movss	 DWORD PTR [eax], xmm1
; Line 4384
  00112	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00115	f3 0f 10 44 b0
	04		 movss	 xmm0, DWORD PTR [eax+esi*4+4]
  0011b	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  0011e	f3 0f 59 c2	 mulss	 xmm0, xmm2
  00122	f3 0f 58 40 14	 addss	 xmm0, DWORD PTR [eax+20]
  00127	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  0012a	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
; Line 4385
  0012f	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00132	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00135	f3 0f 10 40 48	 movss	 xmm0, DWORD PTR [eax+72]
  0013a	f3 0f 58 41 10	 addss	 xmm0, DWORD PTR [ecx+16]
  0013f	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00142	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0
; Line 4386
  00147	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  0014a	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0014d	f3 0f 10 40 4c	 movss	 xmm0, DWORD PTR [eax+76]
  00152	f3 0f 58 41 10	 addss	 xmm0, DWORD PTR [ecx+16]
  00157	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  0015a	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
$LN6@BT_Intern_:
; Line 4390
  0015f	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00162	c6 45 ff 01	 mov	 BYTE PTR _QHasSector$1$[ebp], 1
  00166	8a 00		 mov	 al, BYTE PTR [eax]
  00168	88 47 1c	 mov	 BYTE PTR [edi+28], al
; Line 4391
  0016b	eb 07		 jmp	 SHORT $LN5@BT_Intern_
$LN4@BT_Intern_:
; Line 4392
  0016d	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
$LN5@BT_Intern_:
; Line 4396
  00174	84 db		 test	 bl, bl
  00176	0f 84 91 01 00
	00		 je	 $LN7@BT_Intern_
; Line 4399
  0017c	8a 45 18	 mov	 al, BYTE PTR _collumn$[ebp]
  0017f	fe cb		 dec	 bl
  00181	02 c0		 add	 al, al
  00183	88 5d 0c	 mov	 BYTE PTR _Levels$[ebp], bl
  00186	8b 75 0c	 mov	 esi, DWORD PTR _Levels$[ebp]
  00189	02 ff		 add	 bh, bh
  0018b	50		 push	 eax
  0018c	8a df		 mov	 bl, bh
  0018e	89 45 18	 mov	 DWORD PTR tv1022[ebp], eax
  00191	53		 push	 ebx
  00192	57		 push	 edi
  00193	56		 push	 esi
  00194	52		 push	 edx
  00195	e8 00 00 00 00	 call	 ?BT_Intern_AllocateQuadTreeRec@@YAPAUs_BT_QuadTree@@PAUs_BT_terrain@@EPAU1@EE@Z ; BT_Intern_AllocateQuadTreeRec
  0019a	89 07		 mov	 DWORD PTR [edi], eax
; Line 4400
  0019c	8a 45 18	 mov	 al, BYTE PTR tv1022[ebp]
  0019f	fe c0		 inc	 al
  001a1	50		 push	 eax
  001a2	53		 push	 ebx
  001a3	57		 push	 edi
  001a4	56		 push	 esi
  001a5	ff 75 08	 push	 DWORD PTR _Terrain$[ebp]
  001a8	89 45 14	 mov	 DWORD PTR tv1023[ebp], eax
  001ab	e8 00 00 00 00	 call	 ?BT_Intern_AllocateQuadTreeRec@@YAPAUs_BT_QuadTree@@PAUs_BT_terrain@@EPAU1@EE@Z ; BT_Intern_AllocateQuadTreeRec
; Line 4401
  001b0	ff 75 18	 push	 DWORD PTR tv1022[ebp]
  001b3	fe c3		 inc	 bl
  001b5	89 47 04	 mov	 DWORD PTR [edi+4], eax
  001b8	53		 push	 ebx
  001b9	57		 push	 edi
  001ba	56		 push	 esi
  001bb	ff 75 08	 push	 DWORD PTR _Terrain$[ebp]
  001be	e8 00 00 00 00	 call	 ?BT_Intern_AllocateQuadTreeRec@@YAPAUs_BT_QuadTree@@PAUs_BT_terrain@@EPAU1@EE@Z ; BT_Intern_AllocateQuadTreeRec
; Line 4402
  001c3	ff 75 14	 push	 DWORD PTR tv1023[ebp]
  001c6	89 47 08	 mov	 DWORD PTR [edi+8], eax
  001c9	53		 push	 ebx
  001ca	57		 push	 edi
  001cb	56		 push	 esi
  001cc	ff 75 08	 push	 DWORD PTR _Terrain$[ebp]
  001cf	e8 00 00 00 00	 call	 ?BT_Intern_AllocateQuadTreeRec@@YAPAUs_BT_QuadTree@@PAUs_BT_terrain@@EPAU1@EE@Z ; BT_Intern_AllocateQuadTreeRec
; Line 4404
  001d4	8b 37		 mov	 esi, DWORD PTR [edi]
  001d6	8b d0		 mov	 edx, eax
  001d8	83 c4 50	 add	 esp, 80			; 00000050H
  001db	89 57 0c	 mov	 DWORD PTR [edi+12], edx
  001de	80 7e 1c 00	 cmp	 BYTE PTR [esi+28], 0
  001e2	74 1c		 je	 SHORT $LN17@BT_Intern_
  001e4	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  001e7	80 79 1c 00	 cmp	 BYTE PTR [ecx+28], 0
  001eb	74 13		 je	 SHORT $LN17@BT_Intern_
  001ed	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  001f0	80 78 1c 00	 cmp	 BYTE PTR [eax+28], 0
  001f4	74 0a		 je	 SHORT $LN17@BT_Intern_
  001f6	80 7a 1c 00	 cmp	 BYTE PTR [edx+28], 0
  001fa	74 04		 je	 SHORT $LN17@BT_Intern_
  001fc	b0 01		 mov	 al, 1
  001fe	eb 02		 jmp	 SHORT $LN18@BT_Intern_
$LN17@BT_Intern_:
  00200	32 c0		 xor	 al, al
$LN18@BT_Intern_:
; Line 4406
  00202	80 7d ff 00	 cmp	 BYTE PTR _QHasSector$1$[ebp], 0
  00206	88 47 1c	 mov	 BYTE PTR [edi+28], al
  00209	0f 85 1b 01 00
	00		 jne	 $LN19@BT_Intern_
; Line 4408
  0020f	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00212	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  00215	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00218	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 4409
  0021b	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0021e	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  00221	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  00224	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00227	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 4410
  0022a	8b 07		 mov	 eax, DWORD PTR [edi]
  0022c	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  0022f	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  00232	8b 00		 mov	 eax, DWORD PTR [eax]
  00234	89 01		 mov	 DWORD PTR [ecx], eax
; Line 4411
  00236	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00239	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  0023c	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  0023f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00242	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 4413
  00245	8b 07		 mov	 eax, DWORD PTR [edi]
  00247	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  0024a	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  0024d	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00250	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; Line 4414
  00253	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00256	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  00259	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  0025c	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00261	0f 2f 41 10	 comiss	 xmm0, DWORD PTR [ecx+16]
  00265	76 05		 jbe	 SHORT $LN10@BT_Intern_
; Line 4415
  00267	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0
$LN10@BT_Intern_:
; Line 4416
  0026c	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0026f	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  00272	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  00275	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  0027a	0f 2f 41 10	 comiss	 xmm0, DWORD PTR [ecx+16]
  0027e	76 05		 jbe	 SHORT $LN11@BT_Intern_
; Line 4417
  00280	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0
$LN11@BT_Intern_:
; Line 4418
  00285	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00288	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  0028b	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  0028e	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00293	0f 2f 41 10	 comiss	 xmm0, DWORD PTR [ecx+16]
  00297	76 05		 jbe	 SHORT $LN12@BT_Intern_
; Line 4419
  00299	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0
$LN12@BT_Intern_:
; Line 4421
  0029e	8b 07		 mov	 eax, DWORD PTR [edi]
  002a0	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  002a3	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  002a6	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  002a9	89 41 14	 mov	 DWORD PTR [ecx+20], eax
; Line 4422
  002ac	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  002af	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  002b2	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  002b5	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  002ba	f3 0f 10 48 14	 movss	 xmm1, DWORD PTR [eax+20]
  002bf	0f 2f c1	 comiss	 xmm0, xmm1
  002c2	76 05		 jbe	 SHORT $LN13@BT_Intern_
; Line 4423
  002c4	f3 0f 11 49 14	 movss	 DWORD PTR [ecx+20], xmm1
$LN13@BT_Intern_:
; Line 4424
  002c9	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  002cc	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  002cf	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  002d2	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  002d7	f3 0f 10 48 14	 movss	 xmm1, DWORD PTR [eax+20]
  002dc	0f 2f c1	 comiss	 xmm0, xmm1
  002df	76 05		 jbe	 SHORT $LN14@BT_Intern_
; Line 4425
  002e1	f3 0f 11 49 14	 movss	 DWORD PTR [ecx+20], xmm1
$LN14@BT_Intern_:
; Line 4426
  002e6	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  002e9	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  002ec	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f000000
  002f4	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  002f7	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  002fc	f3 0f 10 48 14	 movss	 xmm1, DWORD PTR [eax+20]
  00301	0f 2f c1	 comiss	 xmm0, xmm1
  00304	76 2c		 jbe	 SHORT $LN8@BT_Intern_
; Line 4427
  00306	f3 0f 11 49 14	 movss	 DWORD PTR [ecx+20], xmm1
; Line 4429
  0030b	eb 25		 jmp	 SHORT $LN8@BT_Intern_
$LN7@BT_Intern_:
; Line 4430
  0030d	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; Line 4431
  00313	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
; Line 4432
  0031a	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
; Line 4433
  00321	c7 47 0c 00 00
	00 00		 mov	 DWORD PTR [edi+12], 0
  00328	eb 08		 jmp	 SHORT $LN8@BT_Intern_
$LN19@BT_Intern_:
; Line 4406
  0032a	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f000000
$LN8@BT_Intern_:
; Line 4437
  00332	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00335	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0033a	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  0033f	f3 0f 59 c2	 mulss	 xmm0, xmm2
  00343	f3 0f 11 47 24	 movss	 DWORD PTR [edi+36], xmm0
; Line 4438
  00348	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  0034d	f3 0f 58 40 10	 addss	 xmm0, DWORD PTR [eax+16]
  00352	f3 0f 59 c2	 mulss	 xmm0, xmm2
  00356	f3 0f 11 47 28	 movss	 DWORD PTR [edi+40], xmm0
; Line 4439
  0035b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00360	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
; Line 4442
  00364	8b c7		 mov	 eax, edi
  00366	f3 0f 59 c2	 mulss	 xmm0, xmm2
  0036a	f3 0f 11 47 2c	 movss	 DWORD PTR [edi+44], xmm0
  0036f	5f		 pop	 edi
  00370	5e		 pop	 esi
  00371	5b		 pop	 ebx
; Line 4443
  00372	8b e5		 mov	 esp, ebp
  00374	5d		 pop	 ebp
  00375	c3		 ret	 0
?BT_Intern_AllocateQuadTreeRec@@YAPAUs_BT_QuadTree@@PAUs_BT_terrain@@EPAU1@EE@Z ENDP ; BT_Intern_AllocateQuadTreeRec
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_AllocateQuadTree@@YAPAUs_BT_QuadTree@@PAUs_BT_terrain@@@Z
_TEXT	SEGMENT
_i$ = -4						; size = 1
_Terrain$ = 8						; size = 4
?BT_Intern_AllocateQuadTree@@YAPAUs_BT_QuadTree@@PAUs_BT_terrain@@@Z PROC ; BT_Intern_AllocateQuadTree, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4321
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
; Line 4328
  00005	8b 75 08	 mov	 esi, DWORD PTR _Terrain$[ebp]
  00008	b1 01		 mov	 cl, 1
  0000a	88 4d fc	 mov	 BYTE PTR _i$[ebp], cl
  0000d	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00010	0f b7 50 14	 movzx	 edx, WORD PTR [eax+20]
  00014	f6 c2 02	 test	 dl, 2
  00017	75 15		 jne	 SHORT $LN3@BT_Intern_
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL2@BT_Intern_:
; Line 4329
  00020	fe c1		 inc	 cl
  00022	8b c2		 mov	 eax, edx
  00024	66 d3 e8	 shr	 ax, cl
  00027	88 4d fc	 mov	 BYTE PTR _i$[ebp], cl
  0002a	a8 01		 test	 al, 1
  0002c	74 f2		 je	 SHORT $LL2@BT_Intern_
$LN3@BT_Intern_:
; Line 4335
  0002e	6a 00		 push	 0
  00030	6a 00		 push	 0
  00032	6a 00		 push	 0
  00034	ff 75 fc	 push	 DWORD PTR _i$[ebp]
  00037	88 4e 54	 mov	 BYTE PTR [esi+84], cl
  0003a	56		 push	 esi
  0003b	e8 00 00 00 00	 call	 ?BT_Intern_AllocateQuadTreeRec@@YAPAUs_BT_QuadTree@@PAUs_BT_terrain@@EPAU1@EE@Z ; BT_Intern_AllocateQuadTreeRec
  00040	83 c4 14	 add	 esp, 20			; 00000014H
; Line 4337
  00043	5e		 pop	 esi
; Line 4338
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
?BT_Intern_AllocateQuadTree@@YAPAUs_BT_QuadTree@@PAUs_BT_terrain@@@Z ENDP ; BT_Intern_AllocateQuadTree
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_GetPointNormal@@YA?AUBTVector3@@PAUs_BT_terrain@@MM@Z
_TEXT	SEGMENT
_Left$ = -12						; size = 4
_Top$ = -8						; size = 4
_Right$ = -4						; size = 4
__$ReturnAddress$ = 8					; size = 4
_Bottom$ = 12						; size = 4
_Terrain$ = 12						; size = 4
_Px$ = 16						; size = 4
tv251 = 20						; size = 4
_Pz$ = 20						; size = 4
?BT_Intern_GetPointNormal@@YA?AUBTVector3@@PAUs_BT_terrain@@MM@Z PROC ; BT_Intern_GetPointNormal, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4202
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
; Line 4218
  00006	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _Pz$[ebp]
  0000b	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@42800000
  00013	56		 push	 esi
  00014	8b 75 0c	 mov	 esi, DWORD PTR _Terrain$[ebp]
  00017	6a 00		 push	 0
  00019	6a 00		 push	 0
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00024	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _Px$[ebp]
  00029	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 ?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z ; BT_Intern_GetPointHeight
; Line 4219
  00034	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _Pz$[ebp]
  00039	83 c4 14	 add	 esp, 20			; 00000014H
  0003c	d9 5d f8	 fstp	 DWORD PTR _Top$[ebp]
  0003f	6a 00		 push	 0
  00041	6a 00		 push	 0
  00043	83 ec 08	 sub	 esp, 8
  00046	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0004c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _Px$[ebp]
  00051	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@42800000
  00059	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005e	56		 push	 esi
  0005f	e8 00 00 00 00	 call	 ?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z ; BT_Intern_GetPointHeight
; Line 4220
  00064	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _Pz$[ebp]
  00069	83 c4 14	 add	 esp, 20			; 00000014H
  0006c	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@42800000
  00074	d9 5d f4	 fstp	 DWORD PTR _Left$[ebp]
  00077	6a 00		 push	 0
  00079	6a 00		 push	 0
  0007b	83 ec 08	 sub	 esp, 8
  0007e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00084	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _Px$[ebp]
  00089	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008e	56		 push	 esi
  0008f	e8 00 00 00 00	 call	 ?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z ; BT_Intern_GetPointHeight
; Line 4221
  00094	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _Pz$[ebp]
  00099	83 c4 14	 add	 esp, 20			; 00000014H
  0009c	d9 5d 0c	 fstp	 DWORD PTR _Bottom$[ebp]
  0009f	6a 00		 push	 0
  000a1	6a 00		 push	 0
  000a3	83 ec 08	 sub	 esp, 8
  000a6	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000ac	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _Px$[ebp]
  000b1	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@42800000
  000b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000be	56		 push	 esi
  000bf	e8 00 00 00 00	 call	 ?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z ; BT_Intern_GetPointHeight
; Line 4224
  000c4	f3 0f 10 75 f8	 movss	 xmm6, DWORD PTR _Top$[ebp]
  000c9	83 c4 14	 add	 esp, 20			; 00000014H
  000cc	f3 0f 10 6d f4	 movss	 xmm5, DWORD PTR _Left$[ebp]
  000d1	0f 57 c0	 xorps	 xmm0, xmm0
  000d4	f3 0f 10 65 0c	 movss	 xmm4, DWORD PTR _Bottom$[ebp]
  000d9	0f 2e f0	 ucomiss xmm6, xmm0
  000dc	d9 5d fc	 fstp	 DWORD PTR _Right$[ebp]
  000df	f3 0f 10 5d fc	 movss	 xmm3, DWORD PTR _Right$[ebp]
  000e4	9f		 lahf
  000e5	f6 c4 44	 test	 ah, 68			; 00000044H
  000e8	7b 1f		 jnp	 SHORT $LN3@BT_Intern_
  000ea	0f 2e e8	 ucomiss xmm5, xmm0
  000ed	9f		 lahf
  000ee	f6 c4 44	 test	 ah, 68			; 00000044H
  000f1	7b 16		 jnp	 SHORT $LN3@BT_Intern_
  000f3	0f 2e e0	 ucomiss xmm4, xmm0
  000f6	9f		 lahf
  000f7	f6 c4 44	 test	 ah, 68			; 00000044H
  000fa	7b 0d		 jnp	 SHORT $LN3@BT_Intern_
  000fc	0f 2e d8	 ucomiss xmm3, xmm0
  000ff	9f		 lahf
  00100	f6 c4 44	 test	 ah, 68			; 00000044H
  00103	0f 8a 88 00 00
	00		 jp	 $LN7@BT_Intern_
$LN3@BT_Intern_:
; Line 4226
  00109	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _Pz$[ebp]
  0010e	6a 00		 push	 0
  00110	6a 00		 push	 0
  00112	83 ec 08	 sub	 esp, 8
  00115	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0011b	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _Px$[ebp]
  00120	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00125	56		 push	 esi
  00126	e8 00 00 00 00	 call	 ?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z ; BT_Intern_GetPointHeight
; Line 4227
  0012b	f3 0f 10 75 f8	 movss	 xmm6, DWORD PTR _Top$[ebp]
  00130	83 c4 14	 add	 esp, 20			; 00000014H
  00133	f3 0f 10 65 0c	 movss	 xmm4, DWORD PTR _Bottom$[ebp]
  00138	0f 57 c9	 xorps	 xmm1, xmm1
  0013b	0f 2e f1	 ucomiss xmm6, xmm1
  0013e	d9 5d 14	 fstp	 DWORD PTR tv251[ebp]
  00141	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR tv251[ebp]
  00146	9f		 lahf
  00147	f3 0f 58 c0	 addss	 xmm0, xmm0
  0014b	f6 c4 44	 test	 ah, 68			; 00000044H
  0014e	7a 07		 jp	 SHORT $LN9@BT_Intern_
; Line 4228
  00150	0f 28 f0	 movaps	 xmm6, xmm0
  00153	f3 0f 5c f4	 subss	 xmm6, xmm4
$LN9@BT_Intern_:
; Line 4229
  00157	f3 0f 10 6d f4	 movss	 xmm5, DWORD PTR _Left$[ebp]
  0015c	f3 0f 10 5d fc	 movss	 xmm3, DWORD PTR _Right$[ebp]
  00161	0f 2e e9	 ucomiss xmm5, xmm1
  00164	9f		 lahf
  00165	f6 c4 44	 test	 ah, 68			; 00000044H
  00168	7a 07		 jp	 SHORT $LN5@BT_Intern_
; Line 4230
  0016a	0f 28 e8	 movaps	 xmm5, xmm0
  0016d	f3 0f 5c eb	 subss	 xmm5, xmm3
$LN5@BT_Intern_:
; Line 4231
  00171	0f 2e e1	 ucomiss xmm4, xmm1
  00174	9f		 lahf
  00175	f6 c4 44	 test	 ah, 68			; 00000044H
  00178	7a 07		 jp	 SHORT $LN6@BT_Intern_
; Line 4232
  0017a	0f 28 e0	 movaps	 xmm4, xmm0
  0017d	f3 0f 5c e6	 subss	 xmm4, xmm6
$LN6@BT_Intern_:
; Line 4233
  00181	0f 2e d9	 ucomiss xmm3, xmm1
  00184	9f		 lahf
  00185	f6 c4 44	 test	 ah, 68			; 00000044H
  00188	7a 07		 jp	 SHORT $LN7@BT_Intern_
; Line 4234
  0018a	0f 28 d8	 movaps	 xmm3, xmm0
  0018d	f3 0f 5c dd	 subss	 xmm3, xmm5
$LN7@BT_Intern_:
; Line 4240
  00191	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00199	f3 0f 5c e6	 subss	 xmm4, xmm6
  0019d	f3 0f 5e 4e 34	 divss	 xmm1, DWORD PTR [esi+52]
; Line 4245
  001a2	8b 45 08	 mov	 eax, DWORD PTR __$ReturnAddress$[ebp]
; Line 4249
  001a5	5e		 pop	 esi
  001a6	f3 0f 59 25 00
	00 00 00	 mulss	 xmm4, DWORD PTR __real@3c800000
  001ae	f3 0f 5c dd	 subss	 xmm3, xmm5
  001b2	f3 0f 59 e1	 mulss	 xmm4, xmm1
  001b6	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR __real@3c800000
  001be	0f 28 c4	 movaps	 xmm0, xmm4
  001c1	f3 0f 59 c4	 mulss	 xmm0, xmm4
  001c5	f3 0f 59 d9	 mulss	 xmm3, xmm1
  001c9	0f 28 cb	 movaps	 xmm1, xmm3
  001cc	f3 0f 59 cb	 mulss	 xmm1, xmm3
  001d0	f3 0f 58 c8	 addss	 xmm1, xmm0
  001d4	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@46800000
  001dc	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@3f800000
  001e4	0f 5a c1	 cvtps2pd xmm0, xmm1
  001e7	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  001ef	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  001f3	f2 0f 5e c8	 divsd	 xmm1, xmm0
  001f7	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  001fb	0f 28 c1	 movaps	 xmm0, xmm1
  001fe	f3 0f 11 48 04	 movss	 DWORD PTR [eax+4], xmm1
  00203	f3 0f 59 c3	 mulss	 xmm0, xmm3
  00207	f3 0f 59 cc	 mulss	 xmm1, xmm4
  0020b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@c3000000
  00213	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@43000000
  0021b	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  0021f	f3 0f 11 48 08	 movss	 DWORD PTR [eax+8], xmm1
; Line 4250
  00224	8b e5		 mov	 esp, ebp
  00226	5d		 pop	 ebp
  00227	c3		 ret	 0
?BT_Intern_GetPointNormal@@YA?AUBTVector3@@PAUs_BT_terrain@@MM@Z ENDP ; BT_Intern_GetPointNormal
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z
_TEXT	SEGMENT
tv129 = -12						; size = 4
tv154 = -8						; size = 4
tv259 = -4						; size = 4
_Terrain$ = 8						; size = 4
_Px$ = 12						; size = 4
_Pz$ = 16						; size = 4
_LODLevel$ = 20						; size = 1
_Round$ = 24						; size = 1
?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z PROC ; BT_Intern_GetPointHeight, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4135
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 4145
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _Terrain$[ebp]
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _Px$[ebp]
  0000e	f3 0f 10 51 4c	 movss	 xmm2, DWORD PTR [ecx+76]
  00013	0f 2f ca	 comiss	 xmm1, xmm2
  00016	0f 87 67 01 00
	00		 ja	 $LN8@BT_Intern_
; Line 4148
  0001c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _Pz$[ebp]
  00021	0f 2f c2	 comiss	 xmm0, xmm2
  00024	0f 87 59 01 00
	00		 ja	 $LN8@BT_Intern_
; Line 4151
  0002a	0f 57 d2	 xorps	 xmm2, xmm2
  0002d	0f 2f d1	 comiss	 xmm2, xmm1
  00030	0f 87 4d 01 00
	00		 ja	 $LN8@BT_Intern_
; Line 4154
  00036	0f 2f d0	 comiss	 xmm2, xmm0
  00039	0f 87 44 01 00
	00		 ja	 $LN8@BT_Intern_
; Line 4158
  0003f	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  00042	0f b6 45 14	 movzx	 eax, BYTE PTR _LODLevel$[ebp]
  00046	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f800000
  0004e	53		 push	 ebx
  0004f	56		 push	 esi
  00050	8d 34 c0	 lea	 esi, DWORD PTR [eax+eax*8]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  00053	f3 0f 10 35 00
	00 00 00	 movss	 xmm6, DWORD PTR __real@80000000
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4158
  0005b	f3 0f 5e 7c b2
	04		 divss	 xmm7, DWORD PTR [edx+esi*4+4]
  00061	89 75 f4	 mov	 DWORD PTR tv129[ebp], esi
; Line 4162
  00064	0f b7 74 b2 14	 movzx	 esi, WORD PTR [edx+esi*4+20]
  00069	57		 push	 edi
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  0006a	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@4b000000
  00072	0f 28 de	 movaps	 xmm3, xmm6
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4158
  00075	0f 28 e7	 movaps	 xmm4, xmm7
  00078	f3 0f 59 e1	 mulss	 xmm4, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  0007c	0f 28 cd	 movaps	 xmm1, xmm5
  0007f	0f 54 dc	 andps	 xmm3, xmm4
  00082	0f 28 c4	 movaps	 xmm0, xmm4
  00085	0f 57 c3	 xorps	 xmm0, xmm3
  00088	0f 28 d4	 movaps	 xmm2, xmm4
  0008b	f3 0f c2 c5 01	 cmpltss xmm0, xmm5
  00090	0f 54 c8	 andps	 xmm1, xmm0
  00093	0f 56 cb	 orps	 xmm1, xmm3
  00096	f3 0f 58 d1	 addss	 xmm2, xmm1
  0009a	f3 0f 5c d1	 subss	 xmm2, xmm1
  0009e	0f 28 c2	 movaps	 xmm0, xmm2
  000a1	f3 0f 5c c4	 subss	 xmm0, xmm4
  000a5	f3 0f c2 c3 06	 cmpnless xmm0, xmm3
  000aa	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f800000
  000b2	0f 54 c3	 andps	 xmm0, xmm3
  000b5	f3 0f 5c d0	 subss	 xmm2, xmm0
  000b9	f3 0f 2c c2	 cvttss2si eax, xmm2
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4159
  000bd	f3 0f 10 55 10	 movss	 xmm2, DWORD PTR _Pz$[ebp]
  000c2	f3 0f 59 fa	 mulss	 xmm7, xmm2
  000c6	0f b7 c8	 movzx	 ecx, ax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  000c9	89 45 f8	 mov	 DWORD PTR tv154[ebp], eax
  000cc	0f 54 f7	 andps	 xmm6, xmm7
  000cf	0f 28 c7	 movaps	 xmm0, xmm7
  000d2	0f 57 c6	 xorps	 xmm0, xmm6
  000d5	0f 28 cf	 movaps	 xmm1, xmm7
  000d8	f3 0f c2 c5 01	 cmpltss xmm0, xmm5
  000dd	0f 54 e8	 andps	 xmm5, xmm0
  000e0	0f 56 ee	 orps	 xmm5, xmm6
  000e3	f3 0f 58 cd	 addss	 xmm1, xmm5
  000e7	f3 0f 5c cd	 subss	 xmm1, xmm5
  000eb	0f 28 c1	 movaps	 xmm0, xmm1
  000ee	f3 0f 5c c7	 subss	 xmm0, xmm7
  000f2	f3 0f c2 c6 06	 cmpnless xmm0, xmm6
  000f7	0f 54 c3	 andps	 xmm0, xmm3
  000fa	f3 0f 5c c8	 subss	 xmm1, xmm0
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4174
  000fe	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _Px$[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  00103	f3 0f 2c c1	 cvttss2si eax, xmm1
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4159
  00107	0f b7 d8	 movzx	 ebx, ax
; Line 4162
  0010a	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  0010d	89 45 fc	 mov	 DWORD PTR tv259[ebp], eax
  00110	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
; Line 4165
  00113	3b 4d fc	 cmp	 ecx, DWORD PTR tv259[ebp]
  00116	0f b7 f8	 movzx	 edi, ax
  00119	8b 45 f8	 mov	 eax, DWORD PTR tv154[ebp]
  0011c	8b d7		 mov	 edx, edi
  0011e	0f b7 c0	 movzx	 eax, ax
  00121	0f 46 d0	 cmovbe	 edx, eax
; Line 4168
  00124	8b c6		 mov	 eax, esi
  00126	0f b7 f2	 movzx	 esi, dx
  00129	8b d7		 mov	 edx, edi
  0012b	0f af f0	 imul	 esi, eax
  0012e	3b 5d fc	 cmp	 ebx, DWORD PTR tv259[ebp]
  00131	f3 0f 2c c1	 cvttss2si eax, xmm1
; Line 4175
  00135	5f		 pop	 edi
  00136	0f b7 c0	 movzx	 eax, ax
  00139	0f 46 d0	 cmovbe	 edx, eax
  0013c	66 03 f2	 add	 si, dx
  0013f	8b 55 f4	 mov	 edx, DWORD PTR tv129[ebp]
  00142	0f b7 c6	 movzx	 eax, si
  00145	8b 75 08	 mov	 esi, DWORD PTR _Terrain$[ebp]
  00148	69 c0 94 00 00
	00		 imul	 eax, eax, 148
  0014e	8b 4e 44	 mov	 ecx, DWORD PTR [esi+68]
  00151	5e		 pop	 esi
  00152	03 44 91 10	 add	 eax, DWORD PTR [ecx+edx*4+16]
  00156	f3 0f 5c 40 0c	 subss	 xmm0, DWORD PTR [eax+12]
  0015b	f3 0f 5c 50 14	 subss	 xmm2, DWORD PTR [eax+20]
; Line 4181
  00160	80 38 00	 cmp	 BYTE PTR [eax], 0
  00163	5b		 pop	 ebx
  00164	75 1d		 jne	 SHORT $LN8@BT_Intern_
; Line 4184
  00166	ff 75 18	 push	 DWORD PTR _Round$[ebp]
  00169	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0016c	83 ec 08	 sub	 esp, 8
  0016f	f3 0f 11 54 24
	04		 movss	 DWORD PTR [esp+4], xmm2
  00175	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017a	e8 00 00 00 00	 call	 ?GetPointHeight@BT_QuadMap@@QAEMMM_N@Z ; BT_QuadMap::GetPointHeight
; Line 4193
  0017f	8b e5		 mov	 esp, ebp
  00181	5d		 pop	 ebp
  00182	c3		 ret	 0
$LN8@BT_Intern_:
; Line 4191
  00183	d9 ee		 fldz
; Line 4193
  00185	8b e5		 mov	 esp, ebp
  00187	5d		 pop	 ebp
  00188	c3		 ret	 0
?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z ENDP ; BT_Intern_GetPointHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_DeleteTerrain@@YAXK_N@Z
_TEXT	SEGMENT
_LODLevel$1$ = -8					; size = 4
_Sector$1$ = -4						; size = 4
_TerrainID$ = 8						; size = 4
_DeleteObjectFlag$ = 12					; size = 1
?BT_Intern_DeleteTerrain@@YAXK_N@Z PROC			; BT_Intern_DeleteTerrain, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4054
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 4056
  00003	6b 45 08 74	 imul	 eax, DWORD PTR _TerrainID$[ebp], 116
  00007	83 ec 08	 sub	 esp, 8
  0000a	53		 push	 ebx
  0000b	80 b8 08 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[eax+8], 1
  00012	8d 98 00 00 00
	00		 lea	 ebx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[eax]
  00018	0f 85 67 01 00
	00		 jne	 $LN11@BT_Intern_
; Line 4063
  0001e	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  00021	33 c9		 xor	 ecx, ecx
  00023	56		 push	 esi
  00024	33 f6		 xor	 esi, esi
  00026	57		 push	 edi
  00027	66 3b 48 14	 cmp	 cx, WORD PTR [eax+20]
  0002b	73 1d		 jae	 SHORT $LN30@BT_Intern_
  0002d	0f 1f 00	 npad	 3
$LL4@BT_Intern_:
; Line 4064
  00030	8b 43 58	 mov	 eax, DWORD PTR [ebx+88]
  00033	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  00036	e8 00 00 00 00	 call	 _free
  0003b	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  0003e	46		 inc	 esi
  0003f	83 c4 04	 add	 esp, 4
  00042	0f b7 40 14	 movzx	 eax, WORD PTR [eax+20]
  00046	3b f0		 cmp	 esi, eax
  00048	72 e6		 jb	 SHORT $LL4@BT_Intern_
$LN30@BT_Intern_:
; Line 4065
  0004a	ff 73 58	 push	 DWORD PTR [ebx+88]
  0004d	e8 00 00 00 00	 call	 _free
; Line 4068
  00052	33 ff		 xor	 edi, edi
  00054	83 c4 04	 add	 esp, 4
  00057	80 7b 32 00	 cmp	 BYTE PTR [ebx+50], 0
  0005b	89 7d f8	 mov	 DWORD PTR _LODLevel$1$[ebp], edi
  0005e	0f 86 c2 00 00
	00		 jbe	 $LN6@BT_Intern_
; Line 4065
  00064	33 f6		 xor	 esi, esi
$LL7@BT_Intern_:
; Line 4072
  00066	8b 4b 44	 mov	 ecx, DWORD PTR [ebx+68]
  00069	33 d2		 xor	 edx, edx
  0006b	33 c0		 xor	 eax, eax
  0006d	89 55 fc	 mov	 DWORD PTR _Sector$1$[ebp], edx
  00070	66 3b 44 0e 0a	 cmp	 ax, WORD PTR [esi+ecx+10]
  00075	0f 83 80 00 00
	00		 jae	 $LN9@BT_Intern_
  0007b	33 ff		 xor	 edi, edi
  0007d	0f 1f 00	 npad	 3
$LL10@BT_Intern_:
; Line 4075
  00080	8b 44 0e 10	 mov	 eax, DWORD PTR [esi+ecx+16]
  00084	80 3c 38 00	 cmp	 BYTE PTR [eax+edi], 0
  00088	75 58		 jne	 SHORT $LN8@BT_Intern_
; Line 4085
  0008a	ff 74 38 1c	 push	 DWORD PTR [eax+edi+28]
  0008e	e8 00 00 00 00	 call	 _free
; Line 4088
  00093	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  00096	83 c4 04	 add	 esp, 4
  00099	8b 4c 30 10	 mov	 ecx, DWORD PTR [eax+esi+16]
  0009d	8b 4c 39 18	 mov	 ecx, DWORD PTR [ecx+edi+24]
  000a1	e8 00 00 00 00	 call	 ?DeleteInternalData@BT_QuadMap@@QAEXXZ ; BT_QuadMap::DeleteInternalData
; Line 4089
  000a6	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  000a9	8b 44 30 10	 mov	 eax, DWORD PTR [eax+esi+16]
  000ad	ff 74 38 18	 push	 DWORD PTR [eax+edi+24]
  000b1	e8 00 00 00 00	 call	 _free
; Line 4092
  000b6	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  000b9	8b 44 30 10	 mov	 eax, DWORD PTR [eax+esi+16]
  000bd	ff b4 38 84 00
	00 00		 push	 DWORD PTR [eax+edi+132]
  000c4	e8 00 00 00 00	 call	 _free
; Line 4095
  000c9	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  000cc	8b 44 30 10	 mov	 eax, DWORD PTR [eax+esi+16]
  000d0	ff b4 38 90 00
	00 00		 push	 DWORD PTR [eax+edi+144]
  000d7	e8 00 00 00 00	 call	 _free
  000dc	8b 55 fc	 mov	 edx, DWORD PTR _Sector$1$[ebp]
  000df	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@BT_Intern_:
; Line 4072
  000e2	8b 4b 44	 mov	 ecx, DWORD PTR [ebx+68]
  000e5	42		 inc	 edx
  000e6	81 c7 94 00 00
	00		 add	 edi, 148		; 00000094H
  000ec	89 55 fc	 mov	 DWORD PTR _Sector$1$[ebp], edx
  000ef	0f b7 44 0e 0a	 movzx	 eax, WORD PTR [esi+ecx+10]
  000f4	3b d0		 cmp	 edx, eax
  000f6	72 88		 jb	 SHORT $LL10@BT_Intern_
  000f8	8b 7d f8	 mov	 edi, DWORD PTR _LODLevel$1$[ebp]
$LN9@BT_Intern_:
; Line 4098
  000fb	ff 74 0e 10	 push	 DWORD PTR [esi+ecx+16]
  000ff	e8 00 00 00 00	 call	 _free
; Line 4101
  00104	8b 43 44	 mov	 eax, DWORD PTR [ebx+68]
  00107	ff 74 30 20	 push	 DWORD PTR [eax+esi+32]
  0010b	e8 00 00 00 00	 call	 _free
  00110	0f b6 43 32	 movzx	 eax, BYTE PTR [ebx+50]
  00114	47		 inc	 edi
  00115	83 c4 08	 add	 esp, 8
  00118	89 7d f8	 mov	 DWORD PTR _LODLevel$1$[ebp], edi
  0011b	83 c6 24	 add	 esi, 36			; 00000024H
  0011e	3b f8		 cmp	 edi, eax
  00120	0f 82 40 ff ff
	ff		 jb	 $LL7@BT_Intern_
$LN6@BT_Intern_:
; Line 4103
  00126	ff 73 44	 push	 DWORD PTR [ebx+68]
  00129	e8 00 00 00 00	 call	 _free
; Line 4106
  0012e	8b 73 50	 mov	 esi, DWORD PTR [ebx+80]
; Line 4459
  00131	56		 push	 esi
  00132	e8 00 00 00 00	 call	 ?BT_Intern_DeAllocateQuadTreeRec@@YAXPAUs_BT_QuadTree@@@Z ; BT_Intern_DeAllocateQuadTreeRec
; Line 4460
  00137	56		 push	 esi
  00138	e8 00 00 00 00	 call	 _free
; Line 4109
  0013d	ff 73 64	 push	 DWORD PTR [ebx+100]
  00140	e8 00 00 00 00	 call	 ?BT_Intern_DeleteEnvironmentMap@@YAXPAUBT_EnvironmentMap@@@Z ; BT_Intern_DeleteEnvironmentMap
; Line 4110
  00145	ff 73 64	 push	 DWORD PTR [ebx+100]
  00148	e8 00 00 00 00	 call	 _free
  0014d	83 c4 14	 add	 esp, 20			; 00000014H
; Line 4113
  00150	80 7d 0c 01	 cmp	 BYTE PTR _DeleteObjectFlag$[ebp], 1
  00154	5f		 pop	 edi
  00155	5e		 pop	 esi
  00156	75 0b		 jne	 SHORT $LN14@BT_Intern_
; Line 4114
  00158	ff 73 14	 push	 DWORD PTR [ebx+20]
  0015b	e8 00 00 00 00	 call	 ?DeleteObject@@YAXH@Z	; DeleteObject
  00160	83 c4 04	 add	 esp, 4
$LN14@BT_Intern_:
; Line 4117
  00163	ff 75 08	 push	 DWORD PTR _TerrainID$[ebp]
  00166	e8 00 00 00 00	 call	 ?BT_RTTMS_DeleteUpdateHandlers@@YAXK@Z ; BT_RTTMS_DeleteUpdateHandlers
; Line 4120
  0016b	ff 73 70	 push	 DWORD PTR [ebx+112]
  0016e	e8 00 00 00 00	 call	 _free
; Line 4123
  00173	6a 74		 push	 116			; 00000074H
  00175	6a 00		 push	 0
  00177	53		 push	 ebx
  00178	e8 00 00 00 00	 call	 _memset
  0017d	83 c4 14	 add	 esp, 20			; 00000014H
  00180	5b		 pop	 ebx
; Line 4128
  00181	8b e5		 mov	 esp, ebp
  00183	5d		 pop	 ebp
  00184	c3		 ret	 0
$LN11@BT_Intern_:
; Line 4126
  00185	6a 74		 push	 116			; 00000074H
  00187	6a 00		 push	 0
  00189	53		 push	 ebx
  0018a	e8 00 00 00 00	 call	 _memset
  0018f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00192	5b		 pop	 ebx
; Line 4128
  00193	8b e5		 mov	 esp, ebp
  00195	5d		 pop	 ebp
  00196	c3		 ret	 0
?BT_Intern_DeleteTerrain@@YAXK_N@Z ENDP			; BT_Intern_DeleteTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_BuildSector@@YAXPAUs_BT_Sector@@@Z
_TEXT	SEGMENT
_Sector$ = 8						; size = 4
?BT_Intern_BuildSector@@YAXPAUs_BT_Sector@@@Z PROC	; BT_Intern_BuildSector, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4036
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 4038
  00004	8b 75 08	 mov	 esi, DWORD PTR _Sector$[ebp]
  00007	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0000a	e8 00 00 00 00	 call	 ?GenerateMeshData@BT_QuadMap@@QAEXXZ ; BT_QuadMap::GenerateMeshData
; Line 4041
  0000f	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00012	e8 00 00 00 00	 call	 ?GeneratePlain@BT_QuadMap@@QAEPAUs_BT_DrawBuffer@@XZ ; BT_QuadMap::GeneratePlain
  00017	89 46 1c	 mov	 DWORD PTR [esi+28], eax
; Line 4044
  0001a	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001d	8b 46 64	 mov	 eax, DWORD PTR [esi+100]
  00020	f3 0f 10 50 34	 movss	 xmm2, DWORD PTR [eax+52]
  00025	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  00028	0f 28 c2	 movaps	 xmm0, xmm2
  0002b	f3 0f 59 56 0c	 mulss	 xmm2, DWORD PTR [esi+12]
  00030	f3 0f 59 46 14	 mulss	 xmm0, DWORD PTR [esi+20]
  00035	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@3c000000
  0003d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c000000
  00045	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  0004b	f3 0f 10 46 10	 movss	 xmm0, DWORD PTR [esi+16]
  00050	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00056	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?MatrixTranslation@KMaths@@YAPAUMatrix@1@PAU21@MMM@Z ; KMaths::MatrixTranslation
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	5e		 pop	 esi
; Line 4045
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?BT_Intern_BuildSector@@YAXPAUs_BT_Sector@@@Z ENDP	; BT_Intern_BuildSector
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_GetErrorString@@YAPADH@Z
_TEXT	SEGMENT
_number$ = 8						; size = 4
?BT_Intern_GetErrorString@@YAPADH@Z PROC		; BT_Intern_GetErrorString, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 3722
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3727
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _number$[ebp]
  00006	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_07NBCGADJA@Unknown@
  0000b	83 f9 01	 cmp	 ecx, 1
  0000e	75 07		 jne	 SHORT $LN2@BT_Intern_
; Line 3728
  00010	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BF@BEMMNHIC@Max?5terrains?5Exceded@
; Line 3785
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
$LN2@BT_Intern_:
; Line 3729
  00017	83 f9 02	 cmp	 ecx, 2
  0001a	75 07		 jne	 SHORT $LN4@BT_Intern_
; Line 3730
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BF@LEDJHPID@Terrain?5doesnt?5exist@
; Line 3785
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
$LN4@BT_Intern_:
; Line 3731
  00023	83 f9 03	 cmp	 ecx, 3
  00026	75 07		 jne	 SHORT $LN6@BT_Intern_
; Line 3732
  00028	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BD@NLJFKIA@Invalid?5LOD?5levels@
; Line 3785
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
$LN6@BT_Intern_:
; Line 3733
  0002f	83 f9 04	 cmp	 ecx, 4
  00032	75 07		 jne	 SHORT $LN8@BT_Intern_
; Line 3734
  00034	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BH@BKLEKBKK@Heightmap?5doesnt?5exist@
; Line 3785
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
$LN8@BT_Intern_:
; Line 3735
  0003b	83 f9 05	 cmp	 ecx, 5
  0003e	75 07		 jne	 SHORT $LN10@BT_Intern_
; Line 3736
  00040	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BH@LBCFMACE@LOD?5level?5doesnt?5exist@
; Line 3785
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
$LN10@BT_Intern_:
; Line 3737
  00047	83 f9 06	 cmp	 ecx, 6
  0004a	75 07		 jne	 SHORT $LN12@BT_Intern_
; Line 3738
  0004c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BH@EKIGNGCC@Heightmap?5size?5invalid@
; Line 3785
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
$LN12@BT_Intern_:
; Line 3739
  00053	83 f9 07	 cmp	 ecx, 7
  00056	75 07		 jne	 SHORT $LN14@BT_Intern_
; Line 3740
  00058	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BL@LKCPKLGB@Exclusion?5map?5size?5invalid@
; Line 3785
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
$LN14@BT_Intern_:
; Line 3741
  0005f	83 f9 08	 cmp	 ecx, 8
  00062	75 07		 jne	 SHORT $LN16@BT_Intern_
; Line 3742
  00064	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BB@FDGAMNEG@Already?5building@
; Line 3785
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
$LN16@BT_Intern_:
; Line 3743
  0006b	83 f9 09	 cmp	 ecx, 9
  0006e	75 07		 jne	 SHORT $LN18@BT_Intern_
; Line 3744
  00070	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@GOBLGKKA@Object?5ID?5illegal@
; Line 3785
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
$LN18@BT_Intern_:
; Line 3745
  00077	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  0007a	75 07		 jne	 SHORT $LN20@BT_Intern_
; Line 3746
  0007c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BG@LLCDLBBF@Terrain?5not?5generated@
; Line 3785
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
$LN20@BT_Intern_:
; Line 3747
  00083	83 f9 0b	 cmp	 ecx, 11			; 0000000bH
  00086	75 07		 jne	 SHORT $LN22@BT_Intern_
; Line 3748
  00088	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BM@DIIKHOBA@Cannot?5create?5Vertex?5Buffer@
; Line 3785
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
$LN22@BT_Intern_:
; Line 3749
  0008f	83 f9 0c	 cmp	 ecx, 12			; 0000000cH
  00092	75 07		 jne	 SHORT $LN24@BT_Intern_
; Line 3750
  00094	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BL@GEBOFHBH@Cannot?5Create?5Index?5Buffer@
; Line 3785
  00099	5d		 pop	 ebp
  0009a	c3		 ret	 0
$LN24@BT_Intern_:
; Line 3751
  0009b	83 f9 0d	 cmp	 ecx, 13			; 0000000dH
  0009e	75 07		 jne	 SHORT $LN26@BT_Intern_
; Line 3752
  000a0	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BE@HJGMNO@Sector?5doesnt?5exist@
; Line 3785
  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
$LN26@BT_Intern_:
; Line 3753
  000a7	83 f9 0e	 cmp	 ecx, 14			; 0000000eH
  000aa	75 07		 jne	 SHORT $LN28@BT_Intern_
; Line 3754
  000ac	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BC@DKJDCILA@Terrain?5not?5built@
; Line 3785
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
$LN28@BT_Intern_:
; Line 3755
  000b3	83 f9 0f	 cmp	 ecx, 15			; 0000000fH
  000b6	75 07		 jne	 SHORT $LN30@BT_Intern_
; Line 3756
  000b8	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0N@CHPPFJPE@Invalid?5file@
; Line 3785
  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
$LN30@BT_Intern_:
; Line 3757
  000bf	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000c2	75 07		 jne	 SHORT $LN32@BT_Intern_
; Line 3758
  000c4	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BB@EGPKFKEF@Cannot?5read?5file@
; Line 3785
  000c9	5d		 pop	 ebp
  000ca	c3		 ret	 0
$LN32@BT_Intern_:
; Line 3759
  000cb	83 f9 11	 cmp	 ecx, 17			; 00000011H
  000ce	75 07		 jne	 SHORT $LN34@BT_Intern_
; Line 3760
  000d0	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BG@BDKBOKMN@Terrain?5already?5built@
; Line 3785
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
$LN34@BT_Intern_:
; Line 3761
  000d7	83 f9 12	 cmp	 ecx, 18			; 00000012H
  000da	75 07		 jne	 SHORT $LN36@BT_Intern_
; Line 3762
  000dc	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CJ@GGGGGAOP@Cannot?5use?5function?5with?5a?5buil@
; Line 3785
  000e1	5d		 pop	 ebp
  000e2	c3		 ret	 0
$LN36@BT_Intern_:
; Line 3763
  000e3	83 f9 13	 cmp	 ecx, 19			; 00000013H
  000e6	75 07		 jne	 SHORT $LN38@BT_Intern_
; Line 3764
  000e8	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BG@FHANNEDM@Sector?5already?5locked@
; Line 3785
  000ed	5d		 pop	 ebp
  000ee	c3		 ret	 0
$LN38@BT_Intern_:
; Line 3765
  000ef	83 f9 14	 cmp	 ecx, 20			; 00000014H
  000f2	75 07		 jne	 SHORT $LN40@BT_Intern_
; Line 3766
  000f4	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BE@JPDECBH@Sector?5not?5unlocked@
; Line 3785
  000f9	5d		 pop	 ebp
  000fa	c3		 ret	 0
$LN40@BT_Intern_:
; Line 3767
  000fb	83 f9 15	 cmp	 ecx, 21			; 00000015H
  000fe	75 07		 jne	 SHORT $LN42@BT_Intern_
; Line 3768
  00100	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0DB@FNMAMBGM@Terrain?5uses?5full?5version?5featu@
; Line 3785
  00105	5d		 pop	 ebp
  00106	c3		 ret	 0
$LN42@BT_Intern_:
; Line 3769
  00107	83 f9 16	 cmp	 ecx, 22			; 00000016H
  0010a	75 07		 jne	 SHORT $LN44@BT_Intern_
; Line 3770
  0010c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CB@PJCPPDEA@Sectors?5too?5big?4?5Increase?5split@
; Line 3785
  00111	5d		 pop	 ebp
  00112	c3		 ret	 0
$LN44@BT_Intern_:
; Line 3771
  00113	83 f9 17	 cmp	 ecx, 23			; 00000017H
  00116	75 07		 jne	 SHORT $LN46@BT_Intern_
; Line 3772
  00118	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BJ@BHNNMBAE@Split?5too?5big?4?5?$CIMax?3?532?$CJ@
; Line 3785
  0011d	5d		 pop	 ebp
  0011e	c3		 ret	 0
$LN46@BT_Intern_:
; Line 3773
  0011f	83 f9 18	 cmp	 ecx, 24			; 00000018H
  00122	75 07		 jne	 SHORT $LN48@BT_Intern_
; Line 3774
  00124	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CC@PALJFKLK@This?5sector?5already?5has?5an?5obje@
; Line 3785
  00129	5d		 pop	 ebp
  0012a	c3		 ret	 0
$LN48@BT_Intern_:
; Line 3775
  0012b	83 f9 19	 cmp	 ecx, 25			; 00000019H
  0012e	75 07		 jne	 SHORT $LN50@BT_Intern_
; Line 3776
  00130	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0CF@KBFJCEFP@This?5LOD?5level?5already?5has?5an?5o@
; Line 3785
  00135	5d		 pop	 ebp
  00136	c3		 ret	 0
$LN50@BT_Intern_:
; Line 3777
  00137	83 f9 1a	 cmp	 ecx, 26			; 0000001aH
  0013a	75 07		 jne	 SHORT $LN52@BT_Intern_
; Line 3778
  0013c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BD@KFIPJJHE@Sector?5is?5excluded@
; Line 3785
  00141	5d		 pop	 ebp
  00142	c3		 ret	 0
$LN52@BT_Intern_:
; Line 3779
  00143	83 f9 1b	 cmp	 ecx, 27			; 0000001bH
  00146	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0N@OHBPFNDO@Memory?5error@
  0014b	0f 45 c2	 cmovne	 eax, edx
; Line 3785
  0014e	5d		 pop	 ebp
  0014f	c3		 ret	 0
?BT_Intern_GetErrorString@@YAPADH@Z ENDP		; BT_Intern_GetErrorString
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_Error@@YAXH@Z
_TEXT	SEGMENT
_Message$ = -104					; size = 100
__$ArrayPad$ = -4					; size = 4
_number$ = 8						; size = 4
?BT_Intern_Error@@YAXH@Z PROC				; BT_Intern_Error, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 3698
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 55 08	 mov	 edx, DWORD PTR _number$[ebp]
; Line 3704
  00013	8d 4d 98	 lea	 ecx, DWORD PTR _Message$[ebp]
  00016	c6 45 98 00	 mov	 BYTE PTR _Message$[ebp], 0
  0001a	49		 dec	 ecx
  0001b	0f 1f 44 00 00	 npad	 5
$LL120@BT_Intern_:
  00020	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00023	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00026	84 c0		 test	 al, al
  00028	75 f6		 jne	 SHORT $LL120@BT_Intern_
  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_0L@BCBOCHIC@BT?5Error?3?5@
  0002f	89 01		 mov	 DWORD PTR [ecx], eax
  00031	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_0L@BCBOCHIC@BT?5Error?3?5@+4
  00036	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00039	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0L@BCBOCHIC@BT?5Error?3?5@+8
  0003f	56		 push	 esi
  00040	66 89 41 08	 mov	 WORD PTR [ecx+8], ax
  00044	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0L@BCBOCHIC@BT?5Error?3?5@+10
  00049	57		 push	 edi
; Line 3705
  0004a	52		 push	 edx
  0004b	88 41 0a	 mov	 BYTE PTR [ecx+10], al
  0004e	e8 00 00 00 00	 call	 ?BT_Intern_GetErrorString@@YAPADH@Z ; BT_Intern_GetErrorString
  00053	8b d0		 mov	 edx, eax
  00055	83 c4 04	 add	 esp, 4
  00058	8b f2		 mov	 esi, edx
  0005a	66 0f 1f 44 00
	00		 npad	 6
$LL121@BT_Intern_:
  00060	8a 02		 mov	 al, BYTE PTR [edx]
  00062	42		 inc	 edx
  00063	84 c0		 test	 al, al
  00065	75 f9		 jne	 SHORT $LL121@BT_Intern_
  00067	8d 7d 98	 lea	 edi, DWORD PTR _Message$[ebp]
  0006a	2b d6		 sub	 edx, esi
  0006c	4f		 dec	 edi
  0006d	0f 1f 00	 npad	 3
$LL122@BT_Intern_:
  00070	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00073	47		 inc	 edi
  00074	84 c0		 test	 al, al
  00076	75 f8		 jne	 SHORT $LL122@BT_Intern_
  00078	8b ca		 mov	 ecx, edx
  0007a	c1 e9 02	 shr	 ecx, 2
  0007d	f3 a5		 rep movsd
  0007f	8b ca		 mov	 ecx, edx
  00081	83 e1 03	 and	 ecx, 3
  00084	f3 a4		 rep movsb
; Line 3706
  00086	8d 4d 98	 lea	 ecx, DWORD PTR _Message$[ebp]
  00089	49		 dec	 ecx
  0008a	66 0f 1f 44 00
	00		 npad	 6
$LL123@BT_Intern_:
  00090	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  00093	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00096	84 c0		 test	 al, al
  00098	75 f6		 jne	 SHORT $LL123@BT_Intern_
  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_0M@MBHKDPAN@?6Function?3?5@
  0009f	89 01		 mov	 DWORD PTR [ecx], eax
  000a1	a1 04 00 00 00	 mov	 eax, DWORD PTR ??_C@_0M@MBHKDPAN@?6Function?3?5@+4
  000a6	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  000a9	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0M@MBHKDPAN@?6Function?3?5@+8
  000ae	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 3799
  000b1	a1 a8 73 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608
  000b6	83 f8 01	 cmp	 eax, 1
  000b9	75 0a		 jne	 SHORT $LN6@BT_Intern_
; Line 3800
  000bb	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0P@DFBFFKPG@BT?5MakeTerrain@
  000c0	e9 d3 00 00 00	 jmp	 $LN38@BT_Intern_
$LN6@BT_Intern_:
; Line 3801
  000c5	83 f8 02	 cmp	 eax, 2
  000c8	75 0a		 jne	 SHORT $LN8@BT_Intern_
; Line 3802
  000ca	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BH@MGNNNFDA@BT?5SetTerrainHeightmap@
  000cf	e9 c4 00 00 00	 jmp	 $LN38@BT_Intern_
$LN8@BT_Intern_:
; Line 3803
  000d4	83 f8 04	 cmp	 eax, 4
  000d7	75 0a		 jne	 SHORT $LN10@BT_Intern_
; Line 3804
  000d9	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BF@CHKJPLOK@BT?5SetTerrainTexture@
  000de	e9 b5 00 00 00	 jmp	 $LN38@BT_Intern_
$LN10@BT_Intern_:
; Line 3805
  000e3	83 f8 05	 cmp	 eax, 5
  000e6	75 0a		 jne	 SHORT $LN12@BT_Intern_
; Line 3806
  000e8	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BH@KBLOPLED@BT?5SetTerrainExclusion@
  000ed	e9 a6 00 00 00	 jmp	 $LN38@BT_Intern_
$LN12@BT_Intern_:
; Line 3807
  000f2	83 f8 06	 cmp	 eax, 6
  000f5	75 0a		 jne	 SHORT $LN14@BT_Intern_
; Line 3808
  000f7	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BE@JCPGGGAP@BT?5SetTerrainDetail@
  000fc	e9 97 00 00 00	 jmp	 $LN38@BT_Intern_
$LN14@BT_Intern_:
; Line 3809
  00101	83 f8 07	 cmp	 eax, 7
  00104	75 0a		 jne	 SHORT $LN16@BT_Intern_
; Line 3810
  00106	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BJ@CPANNGCF@BT?5SetTerrainEnvironment@
  0010b	e9 88 00 00 00	 jmp	 $LN38@BT_Intern_
$LN16@BT_Intern_:
; Line 3811
  00110	83 f8 08	 cmp	 eax, 8
  00113	75 07		 jne	 SHORT $LN18@BT_Intern_
; Line 3812
  00115	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BB@JBJNBHDG@BT?5SetTerrainLOD@
  0011a	eb 7c		 jmp	 SHORT $LN38@BT_Intern_
$LN18@BT_Intern_:
; Line 3813
  0011c	83 f8 09	 cmp	 eax, 9
  0011f	75 07		 jne	 SHORT $LN20@BT_Intern_
; Line 3814
  00121	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BD@LCONNBLK@BT?5SetTerrainSplit@
  00126	eb 70		 jmp	 SHORT $LN38@BT_Intern_
$LN20@BT_Intern_:
; Line 3815
  00128	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0012b	75 07		 jne	 SHORT $LN22@BT_Intern_
; Line 3816
  0012d	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BI@JKCEGPLD@BT?5SetTerrainDetailTile@
  00132	eb 64		 jmp	 SHORT $LN38@BT_Intern_
$LN22@BT_Intern_:
; Line 3817
  00134	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00137	75 07		 jne	 SHORT $LN24@BT_Intern_
; Line 3818
  00139	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BL@OBIKAFBG@BT?5SetTerrainQuadReduction@
  0013e	eb 58		 jmp	 SHORT $LN38@BT_Intern_
$LN24@BT_Intern_:
; Line 3819
  00140	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  00143	75 07		 jne	 SHORT $LN26@BT_Intern_
; Line 3820
  00145	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BK@CNOLALLM@BT?5SetTerrainQuadRotation@
  0014a	eb 4c		 jmp	 SHORT $LN38@BT_Intern_
$LN26@BT_Intern_:
; Line 3821
  0014c	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  0014f	75 07		 jne	 SHORT $LN28@BT_Intern_
; Line 3822
  00151	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BH@HHCKGEI@BT?5SetTerrainSmoothing@
  00156	eb 40		 jmp	 SHORT $LN38@BT_Intern_
$LN28@BT_Intern_:
; Line 3823
  00158	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  0015b	75 07		 jne	 SHORT $LN30@BT_Intern_
; Line 3824
  0015d	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BD@DCNFAFMO@BT?5SetTerrainScale@
  00162	eb 34		 jmp	 SHORT $LN38@BT_Intern_
$LN30@BT_Intern_:
; Line 3825
  00164	83 f8 10	 cmp	 eax, 16			; 00000010H
  00167	75 07		 jne	 SHORT $LN32@BT_Intern_
; Line 3826
  00169	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BE@EDBFENIB@BT?5SetTerrainYScale@
  0016e	eb 28		 jmp	 SHORT $LN38@BT_Intern_
$LN32@BT_Intern_:
; Line 3827
  00170	83 f8 11	 cmp	 eax, 17			; 00000011H
  00173	75 07		 jne	 SHORT $LN34@BT_Intern_
; Line 3828
  00175	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BK@KICOMPNO@BT?5SetTerrainLODDistances@
  0017a	eb 1c		 jmp	 SHORT $LN38@BT_Intern_
$LN34@BT_Intern_:
; Line 3829
  0017c	83 f8 12	 cmp	 eax, 18			; 00000012H
  0017f	75 07		 jne	 SHORT $LN36@BT_Intern_
; Line 3830
  00181	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BA@BBGHHKO@BT?5BuildTerrain@
  00186	eb 10		 jmp	 SHORT $LN38@BT_Intern_
$LN36@BT_Intern_:
; Line 3831
  00188	83 f8 13	 cmp	 eax, 19			; 00000013H
  0018b	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BB@EBLJGLKG@BT?5ContinueBuild@
  00190	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0BA@MMODJNLO@BT?5TerrainExist@
  00195	0f 45 d1	 cmovne	 edx, ecx
$LN38@BT_Intern_:
; Line 3707
  00198	8b f2		 mov	 esi, edx
  0019a	66 0f 1f 44 00
	00		 npad	 6
$LL124@BT_Intern_:
  001a0	8a 02		 mov	 al, BYTE PTR [edx]
  001a2	42		 inc	 edx
  001a3	84 c0		 test	 al, al
  001a5	75 f9		 jne	 SHORT $LL124@BT_Intern_
  001a7	8d 7d 98	 lea	 edi, DWORD PTR _Message$[ebp]
  001aa	2b d6		 sub	 edx, esi
  001ac	4f		 dec	 edi
  001ad	0f 1f 00	 npad	 3
$LL125@BT_Intern_:
  001b0	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  001b3	47		 inc	 edi
  001b4	84 c0		 test	 al, al
  001b6	75 f8		 jne	 SHORT $LL125@BT_Intern_
  001b8	8b ca		 mov	 ecx, edx
; Line 3711
  001ba	8d 45 98	 lea	 eax, DWORD PTR _Message$[ebp]
  001bd	c1 e9 02	 shr	 ecx, 2
  001c0	f3 a5		 rep movsd
  001c2	8b ca		 mov	 ecx, edx
  001c4	83 e1 03	 and	 ecx, 3
  001c7	50		 push	 eax
  001c8	f3 a4		 rep movsb
  001ca	6a 00		 push	 0
  001cc	e8 00 00 00 00	 call	 ?RunTimeError@@YAXKPAD@Z ; RunTimeError
; Line 3713
  001d1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d4	83 c4 08	 add	 esp, 8
  001d7	33 cd		 xor	 ecx, ebp
  001d9	5f		 pop	 edi
  001da	5e		 pop	 esi
  001db	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e0	8b e5		 mov	 esp, ebp
  001e2	5d		 pop	 ebp
  001e3	c3		 ret	 0
?BT_Intern_Error@@YAXH@Z ENDP				; BT_Intern_Error
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_RenderTerrain@@YAXPAUs_BT_terrain@@@Z
_TEXT	SEGMENT
$T1 = -168						; size = 16
_vec$2 = -152						; size = 16
_Terrain$GSCopy$1$ = -136				; size = 4
_hdepthHandle6$1$ = -132				; size = 4
_hdepthHandle5$1$ = -128				; size = 4
_hdepthHandle4$1$ = -124				; size = 4
_hdepthHandle3$1$ = -120				; size = 4
_hDistantTechnique$1$ = -116				; size = 4
_hNearTechnique$1$ = -112				; size = 4
_hdepthHandle7$1$ = -108				; size = 4
_lpTexture$3 = -108					; size = 4
_hdepthHandle2$1$ = -104				; size = 4
_lpTexture$4 = -104					; size = 4
_iQualityPass$1$ = -100					; size = 4
_iQualityPassCount$1$ = -96				; size = 4
_matWorld$5 = -92					; size = 64
_vp$6 = -28						; size = 24
_bdChangePerTerrsainChunkBuffer$7 = -28			; size = 24
_bdChangePerTerrsainChunkBuffer$8 = -28			; size = 24
$T9 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_Terrain$ = 8						; size = 4
?BT_Intern_RenderTerrain@@YAXPAUs_BT_terrain@@@Z PROC	; BT_Intern_RenderTerrain, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 2376
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a8 00 00
	00		 sub	 esp, 168		; 000000a8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 2384
  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pCBChangePerTerrsainChunk@@3PAUID3D11Buffer@@A, 0 ; m_pCBChangePerTerrsainChunk
  0001a	53		 push	 ebx
  0001b	8b 5d 08	 mov	 ebx, DWORD PTR _Terrain$[ebp]
  0001e	56		 push	 esi
  0001f	8b 35 b0 73 00
	00		 mov	 esi, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29616
  00025	57		 push	 edi
  00026	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00029	89 9d 78 ff ff
	ff		 mov	 DWORD PTR _Terrain$GSCopy$1$[ebp], ebx
  0002f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00032	8b b8 04 03 00
	00		 mov	 edi, DWORD PTR [eax+772]
  00038	75 42		 jne	 SHORT $LN12@BT_Intern_
; Line 2392
  0003a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pD3D@@3PAUID3D11Device@@A ; m_pD3D
  0003f	8d 55 e4	 lea	 edx, DWORD PTR _bdChangePerTerrsainChunkBuffer$8[ebp]
  00042	68 00 00 00 00	 push	 OFFSET ?m_pCBChangePerTerrsainChunk@@3PAUID3D11Buffer@@A ; m_pCBChangePerTerrsainChunk
  00047	0f 57 c0	 xorps	 xmm0, xmm0
  0004a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$8[ebp+4], 0
  00051	6a 00		 push	 0
  00053	66 0f 13 45 f4	 movlpd	 QWORD PTR _bdChangePerTerrsainChunkBuffer$8[ebp+16], xmm0
  00058	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$8[ebp+8], 4
  0005f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$8[ebp+12], 0
  00066	c7 45 e4 c0 00
	00 00		 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$8[ebp], 192 ; 000000c0H
  0006d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006f	52		 push	 edx
  00070	50		 push	 eax
  00071	ff 51 0c	 call	 DWORD PTR [ecx+12]
  00074	85 c0		 test	 eax, eax
  00076	0f 88 f8 05 00
	00		 js	 $LN1@BT_Intern_
$LN12@BT_Intern_:
; Line 2395
  0007c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pCBChangePerTerrsainChunkPS@@3PAUID3D11Buffer@@A, 0 ; m_pCBChangePerTerrsainChunkPS
  00083	75 42		 jne	 SHORT $LN14@BT_Intern_
; Line 2403
  00085	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pD3D@@3PAUID3D11Device@@A ; m_pD3D
  0008a	8d 55 e4	 lea	 edx, DWORD PTR _bdChangePerTerrsainChunkBuffer$7[ebp]
  0008d	68 00 00 00 00	 push	 OFFSET ?m_pCBChangePerTerrsainChunkPS@@3PAUID3D11Buffer@@A ; m_pCBChangePerTerrsainChunkPS
  00092	0f 57 c0	 xorps	 xmm0, xmm0
  00095	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$7[ebp+4], 0
  0009c	6a 00		 push	 0
  0009e	66 0f 13 45 f4	 movlpd	 QWORD PTR _bdChangePerTerrsainChunkBuffer$7[ebp+16], xmm0
  000a3	c7 45 ec 04 00
	00 00		 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$7[ebp+8], 4
  000aa	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$7[ebp+12], 0
  000b1	c7 45 e4 e0 00
	00 00		 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$7[ebp], 224 ; 000000e0H
  000b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ba	52		 push	 edx
  000bb	50		 push	 eax
  000bc	ff 51 0c	 call	 DWORD PTR [ecx+12]
  000bf	85 c0		 test	 eax, eax
  000c1	0f 88 ad 05 00
	00		 js	 $LN1@BT_Intern_
$LN14@BT_Intern_:
; Line 2408
  000c7	a0 00 00 00 00	 mov	 al, BYTE PTR ?g_bRenderTerrainForShadowMap@@3_NA ; g_bRenderTerrainForShadowMap
  000cc	84 c0		 test	 al, al
  000ce	75 1b		 jne	 SHORT $LN15@BT_Intern_
; Line 2411
  000d0	56		 push	 esi
  000d1	6a 03		 push	 3
  000d3	e8 00 00 00 00	 call	 ?COMMONSetTransform@@YAXHPAUMatrix@KMaths@@@Z ; COMMONSetTransform
; Line 2412
  000d8	8d 46 40	 lea	 eax, DWORD PTR [esi+64]
  000db	50		 push	 eax
  000dc	6a 02		 push	 2
  000de	e8 00 00 00 00	 call	 ?COMMONSetTransform@@YAXHPAUMatrix@KMaths@@@Z ; COMMONSetTransform
  000e3	a0 00 00 00 00	 mov	 al, BYTE PTR ?g_bRenderTerrainForShadowMap@@3_NA ; g_bRenderTerrainForShadowMap
  000e8	83 c4 10	 add	 esp, 16			; 00000010H
$LN15@BT_Intern_:
; Line 2416
  000eb	3c 01		 cmp	 al, 1
  000ed	0f 84 bf 00 00
	00		 je	 $LN17@BT_Intern_
; Line 2424
  000f3	8b 86 c8 00 00
	00		 mov	 eax, DWORD PTR [esi+200]
; Line 2430
  000f9	6a 00		 push	 0
  000fb	66 0f 6e c0	 movd	 xmm0, eax
  000ff	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00103	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00106	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  0010f	8b 86 cc 00 00
	00		 mov	 eax, DWORD PTR [esi+204]
  00115	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00119	f3 0f 11 45 e4	 movss	 DWORD PTR _vp$6[ebp], xmm0
  0011e	66 0f 6e c0	 movd	 xmm0, eax
  00122	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00126	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00129	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00132	8b 86 d0 00 00
	00		 mov	 eax, DWORD PTR [esi+208]
  00138	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0013c	f3 0f 11 45 e8	 movss	 DWORD PTR _vp$6[ebp+4], xmm0
  00141	66 0f 6e c0	 movd	 xmm0, eax
  00145	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00149	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0014c	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00155	8b 86 d4 00 00
	00		 mov	 eax, DWORD PTR [esi+212]
  0015b	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0015f	f3 0f 11 45 ec	 movss	 DWORD PTR _vp$6[ebp+8], xmm0
  00164	66 0f 6e c0	 movd	 xmm0, eax
  00168	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0016c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0016f	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00178	8d 45 e4	 lea	 eax, DWORD PTR _vp$6[ebp]
  0017b	50		 push	 eax
  0017c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGlob@@3PAUGlobStruct@@A ; g_pGlob
  00181	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00185	f3 0f 11 45 f0	 movss	 DWORD PTR _vp$6[ebp+12], xmm0
  0018a	f3 0f 10 86 d8
	00 00 00	 movss	 xmm0, DWORD PTR [esi+216]
  00192	f3 0f 11 45 f4	 movss	 DWORD PTR _vp$6[ebp+16], xmm0
  00197	f3 0f 10 86 dc
	00 00 00	 movss	 xmm0, DWORD PTR [esi+220]
  0019f	f3 0f 11 45 f8	 movss	 DWORD PTR _vp$6[ebp+20], xmm0
  001a4	ff b0 1c 03 00
	00		 push	 DWORD PTR [eax+796]
  001aa	e8 00 00 00 00	 call	 ?SetupSetViewport@@YAXHPAUD3D11_VIEWPORT@@PAUID3D11Texture2D@@@Z ; SetupSetViewport
  001af	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN17@BT_Intern_:
; Line 2434
  001b2	89 1d 38 74 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29752, ebx
; Line 2437
  001b8	0f b6 43 54	 movzx	 eax, BYTE PTR [ebx+84]
  001bc	50		 push	 eax
  001bd	ff 73 50	 push	 DWORD PTR [ebx+80]
  001c0	53		 push	 ebx
  001c1	e8 00 00 00 00	 call	 ?BT_Intern_UnlockSectorsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z ; BT_Intern_UnlockSectorsRec
  001c6	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2440
  001c9	83 bf 58 02 00
	00 00		 cmp	 DWORD PTR [edi+600], 0
  001d0	0f 84 94 04 00
	00		 je	 $LN3@BT_Intern_
; Line 2443
  001d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  001db	ff 73 60	 push	 DWORD PTR [ebx+96]
  001de	50		 push	 eax
  001df	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e1	ff 51 44	 call	 DWORD PTR [ecx+68]
; Line 2446
  001e4	8b 87 58 02 00
	00		 mov	 eax, DWORD PTR [edi+600]
; Line 2450
  001ea	68 00 00 00 00	 push	 OFFSET ??_C@_07CCEABGGJ@Distant@
  001ef	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  001f2	8b 80 10 04 00
	00		 mov	 eax, DWORD PTR [eax+1040]
  001f8	89 45 90	 mov	 DWORD PTR _hNearTechnique$1$[ebp], eax
  001fb	56		 push	 esi
  001fc	8b 06		 mov	 eax, DWORD PTR [esi]
  001fe	ff 50 38	 call	 DWORD PTR [eax+56]
; Line 2454
  00201	80 3d 00 00 00
	00 01		 cmp	 BYTE PTR ?g_bRenderTerrainForShadowMap@@3_NA, 1 ; g_bRenderTerrainForShadowMap
  00208	8b d0		 mov	 edx, eax
  0020a	bb 02 00 00 00	 mov	 ebx, 2
  0020f	89 55 8c	 mov	 DWORD PTR _hDistantTechnique$1$[ebp], edx
  00212	89 5d a0	 mov	 DWORD PTR _iQualityPassCount$1$[ebp], ebx
  00215	75 26		 jne	 SHORT $LN20@BT_Intern_
; Line 2457
  00217	8b 06		 mov	 eax, DWORD PTR [esi]
  00219	bb 01 00 00 00	 mov	 ebx, 1
  0021e	68 00 00 00 00	 push	 OFFSET ??_C@_08NIEOOMPE@DepthMap@
  00223	56		 push	 esi
  00224	89 5d a0	 mov	 DWORD PTR _iQualityPassCount$1$[ebp], ebx
  00227	ff 50 38	 call	 DWORD PTR [eax+56]
; Line 2458
  0022a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_08NIEOOMPE@DepthMap@
  00231	56		 push	 esi
  00232	89 45 90	 mov	 DWORD PTR _hNearTechnique$1$[ebp], eax
  00235	ff 51 38	 call	 DWORD PTR [ecx+56]
  00238	8b d0		 mov	 edx, eax
  0023a	89 45 8c	 mov	 DWORD PTR _hDistantTechnique$1$[ebp], eax
$LN20@BT_Intern_:
; Line 2461
  0023d	8b 8f 58 02 00
	00		 mov	 ecx, DWORD PTR [edi+600]
  00243	89 0d 64 74 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29796, ecx
  00249	33 c9		 xor	 ecx, ecx
  0024b	89 4d 9c	 mov	 DWORD PTR _iQualityPass$1$[ebp], ecx
  0024e	66 90		 npad	 2
$LL4@BT_Intern_:
; Line 2470
  00250	8b 45 90	 mov	 eax, DWORD PTR _hNearTechnique$1$[ebp]
  00253	33 f6		 xor	 esi, esi
  00255	85 c9		 test	 ecx, ecx
  00257	0f 45 c6	 cmovne	 eax, esi
; Line 2480
  0025a	83 f9 01	 cmp	 ecx, 1
  0025d	8b f2		 mov	 esi, edx
  0025f	0f 45 f0	 cmovne	 esi, eax
  00262	56		 push	 esi
  00263	8b 06		 mov	 eax, DWORD PTR [esi]
  00265	ff 50 0c	 call	 DWORD PTR [eax+12]
  00268	84 c0		 test	 al, al
  0026a	0f 84 e8 03 00
	00		 je	 $LN2@BT_Intern_
; Line 2482
  00270	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  00275	6a 04		 push	 4
  00277	50		 push	 eax
  00278	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027a	ff 51 60	 call	 DWORD PTR [ecx+96]
; Line 2484
  0027d	80 3d 00 00 00
	00 01		 cmp	 BYTE PTR ?g_bRenderTerrainForShadowMap@@3_NA, 1 ; g_bRenderTerrainForShadowMap
  00284	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  00289	8b 08		 mov	 ecx, DWORD PTR [eax]
  0028b	75 08		 jne	 SHORT $LN24@BT_Intern_
; Line 2486
  0028d	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_pRasterStateTerrainShadow@@3PAUID3D11RasterizerState@@A ; m_pRasterStateTerrainShadow
; Line 2489
  00293	eb 06		 jmp	 SHORT $LN119@BT_Intern_
$LN24@BT_Intern_:
; Line 2493
  00295	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_pRasterState@@3PAUID3D11RasterizerState@@A ; m_pRasterState
$LN119@BT_Intern_:
; Line 2500
  0029b	50		 push	 eax
  0029c	ff 91 ac 00 00
	00		 call	 DWORD PTR [ecx+172]
  002a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  002a7	6a ff		 push	 -1
  002a9	6a 00		 push	 0
  002ab	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_pBlendStateNoAlpha@@3PAUID3D11BlendState@@A ; m_pBlendStateNoAlpha
  002b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b3	50		 push	 eax
  002b4	ff 91 8c 00 00
	00		 call	 DWORD PTR [ecx+140]
  002ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  002bf	6a 00		 push	 0
  002c1	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_pDepthStencilState@@3PAUID3D11DepthStencilState@@A ; m_pDepthStencilState
  002c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c9	50		 push	 eax
  002ca	ff 91 90 00 00
	00		 call	 DWORD PTR [ecx+144]
  002d0	83 7d 9c 00	 cmp	 DWORD PTR _iQualityPass$1$[ebp], 0
  002d4	0f 85 85 01 00
	00		 jne	 $LN36@BT_Intern_
  002da	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?g_bRenderTerrainForShadowMap@@3_NA, 0 ; g_bRenderTerrainForShadowMap
  002e1	0f 85 78 01 00
	00		 jne	 $LN36@BT_Intern_
; Line 2502
  002e7	8b 87 58 02 00
	00		 mov	 eax, DWORD PTR [edi+600]
  002ed	8b 80 f8 03 00
	00		 mov	 eax, DWORD PTR [eax+1016]
; Line 2503
  002f3	3d 14 05 00 00	 cmp	 eax, 1300		; 00000514H
  002f8	0f 83 61 01 00
	00		 jae	 $LN36@BT_Intern_
; Line 2505
  002fe	8b 04 85 6c 00
	00 00		 mov	 eax, DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A[eax*4+108]
  00305	85 c0		 test	 eax, eax
  00307	0f 84 52 01 00
	00		 je	 $LN36@BT_Intern_
; Line 2509
  0030d	8b 50 38	 mov	 edx, DWORD PTR [eax+56]
  00310	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00313	8b 58 34	 mov	 ebx, DWORD PTR [eax+52]
  00316	89 55 98	 mov	 DWORD PTR _hdepthHandle2$1$[ebp], edx
; Line 2510
  00319	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  0031c	89 55 88	 mov	 DWORD PTR _hdepthHandle3$1$[ebp], edx
; Line 2511
  0031f	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  00322	89 55 84	 mov	 DWORD PTR _hdepthHandle4$1$[ebp], edx
; Line 2512
  00325	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  00328	89 55 80	 mov	 DWORD PTR _hdepthHandle5$1$[ebp], edx
; Line 2513
  0032b	8b 50 48	 mov	 edx, DWORD PTR [eax+72]
; Line 2514
  0032e	8b 40 4c	 mov	 eax, DWORD PTR [eax+76]
  00331	89 95 7c ff ff
	ff		 mov	 DWORD PTR _hdepthHandle6$1$[ebp], edx
  00337	89 45 94	 mov	 DWORD PTR _hdepthHandle7$1$[ebp], eax
; Line 2515
  0033a	85 c9		 test	 ecx, ecx
  0033c	74 1e		 je	 SHORT $LN29@BT_Intern_
  0033e	83 3d 90 17 00
	00 00		 cmp	 DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6032, 0
  00345	74 15		 je	 SHORT $LN29@BT_Intern_
  00347	8b 01		 mov	 eax, DWORD PTR [ecx]
  00349	51		 push	 ecx
  0034a	ff 50 4c	 call	 DWORD PTR [eax+76]
  0034d	8b 0d 90 17 00
	00		 mov	 ecx, DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6032
  00353	8b 10		 mov	 edx, DWORD PTR [eax]
  00355	ff 71 10	 push	 DWORD PTR [ecx+16]
  00358	50		 push	 eax
  00359	ff 52 7c	 call	 DWORD PTR [edx+124]
$LN29@BT_Intern_:
; Line 2516
  0035c	85 db		 test	 ebx, ebx
  0035e	74 1e		 je	 SHORT $LN30@BT_Intern_
  00360	83 3d 94 17 00
	00 00		 cmp	 DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6036, 0
  00367	74 15		 je	 SHORT $LN30@BT_Intern_
  00369	8b 03		 mov	 eax, DWORD PTR [ebx]
  0036b	53		 push	 ebx
  0036c	ff 50 4c	 call	 DWORD PTR [eax+76]
  0036f	8b 0d 94 17 00
	00		 mov	 ecx, DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6036
  00375	8b 10		 mov	 edx, DWORD PTR [eax]
  00377	ff 71 10	 push	 DWORD PTR [ecx+16]
  0037a	50		 push	 eax
  0037b	ff 52 7c	 call	 DWORD PTR [edx+124]
$LN30@BT_Intern_:
; Line 2517
  0037e	8b 4d 98	 mov	 ecx, DWORD PTR _hdepthHandle2$1$[ebp]
  00381	85 c9		 test	 ecx, ecx
  00383	74 1e		 je	 SHORT $LN31@BT_Intern_
  00385	83 3d 98 17 00
	00 00		 cmp	 DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6040, 0
  0038c	74 15		 je	 SHORT $LN31@BT_Intern_
  0038e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00390	51		 push	 ecx
  00391	ff 50 4c	 call	 DWORD PTR [eax+76]
  00394	8b 0d 98 17 00
	00		 mov	 ecx, DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6040
  0039a	8b 10		 mov	 edx, DWORD PTR [eax]
  0039c	ff 71 10	 push	 DWORD PTR [ecx+16]
  0039f	50		 push	 eax
  003a0	ff 52 7c	 call	 DWORD PTR [edx+124]
$LN31@BT_Intern_:
; Line 2518
  003a3	8b 4d 88	 mov	 ecx, DWORD PTR _hdepthHandle3$1$[ebp]
  003a6	85 c9		 test	 ecx, ecx
  003a8	74 1e		 je	 SHORT $LN32@BT_Intern_
  003aa	83 3d 9c 17 00
	00 00		 cmp	 DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6044, 0
  003b1	74 15		 je	 SHORT $LN32@BT_Intern_
  003b3	8b 01		 mov	 eax, DWORD PTR [ecx]
  003b5	51		 push	 ecx
  003b6	ff 50 4c	 call	 DWORD PTR [eax+76]
  003b9	8b 0d 9c 17 00
	00		 mov	 ecx, DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6044
  003bf	8b 10		 mov	 edx, DWORD PTR [eax]
  003c1	ff 71 10	 push	 DWORD PTR [ecx+16]
  003c4	50		 push	 eax
  003c5	ff 52 7c	 call	 DWORD PTR [edx+124]
$LN32@BT_Intern_:
; Line 2519
  003c8	8b 4d 84	 mov	 ecx, DWORD PTR _hdepthHandle4$1$[ebp]
  003cb	85 c9		 test	 ecx, ecx
  003cd	74 1e		 je	 SHORT $LN33@BT_Intern_
  003cf	83 3d a0 17 00
	00 00		 cmp	 DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6048, 0
  003d6	74 15		 je	 SHORT $LN33@BT_Intern_
  003d8	8b 01		 mov	 eax, DWORD PTR [ecx]
  003da	51		 push	 ecx
  003db	ff 50 4c	 call	 DWORD PTR [eax+76]
  003de	8b 0d a0 17 00
	00		 mov	 ecx, DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6048
  003e4	8b 10		 mov	 edx, DWORD PTR [eax]
  003e6	ff 71 10	 push	 DWORD PTR [ecx+16]
  003e9	50		 push	 eax
  003ea	ff 52 7c	 call	 DWORD PTR [edx+124]
$LN33@BT_Intern_:
; Line 2520
  003ed	8b 4d 80	 mov	 ecx, DWORD PTR _hdepthHandle5$1$[ebp]
  003f0	85 c9		 test	 ecx, ecx
  003f2	74 1e		 je	 SHORT $LN34@BT_Intern_
  003f4	83 3d a4 17 00
	00 00		 cmp	 DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6052, 0
  003fb	74 15		 je	 SHORT $LN34@BT_Intern_
  003fd	8b 01		 mov	 eax, DWORD PTR [ecx]
  003ff	51		 push	 ecx
  00400	ff 50 4c	 call	 DWORD PTR [eax+76]
  00403	8b 0d a4 17 00
	00		 mov	 ecx, DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6052
  00409	8b 10		 mov	 edx, DWORD PTR [eax]
  0040b	ff 71 10	 push	 DWORD PTR [ecx+16]
  0040e	50		 push	 eax
  0040f	ff 52 7c	 call	 DWORD PTR [edx+124]
$LN34@BT_Intern_:
; Line 2521
  00412	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _hdepthHandle6$1$[ebp]
  00418	85 c9		 test	 ecx, ecx
  0041a	74 1e		 je	 SHORT $LN35@BT_Intern_
  0041c	83 3d a8 17 00
	00 00		 cmp	 DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6056, 0
  00423	74 15		 je	 SHORT $LN35@BT_Intern_
  00425	8b 01		 mov	 eax, DWORD PTR [ecx]
  00427	51		 push	 ecx
  00428	ff 50 4c	 call	 DWORD PTR [eax+76]
  0042b	8b 0d a8 17 00
	00		 mov	 ecx, DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6056
  00431	8b 10		 mov	 edx, DWORD PTR [eax]
  00433	ff 71 10	 push	 DWORD PTR [ecx+16]
  00436	50		 push	 eax
  00437	ff 52 7c	 call	 DWORD PTR [edx+124]
$LN35@BT_Intern_:
; Line 2522
  0043a	8b 4d 94	 mov	 ecx, DWORD PTR _hdepthHandle7$1$[ebp]
  0043d	85 c9		 test	 ecx, ecx
  0043f	74 1e		 je	 SHORT $LN36@BT_Intern_
  00441	83 3d ac 17 00
	00 00		 cmp	 DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6060, 0
  00448	74 15		 je	 SHORT $LN36@BT_Intern_
  0044a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0044c	51		 push	 ecx
  0044d	ff 50 4c	 call	 DWORD PTR [eax+76]
  00450	8b 0d ac 17 00
	00		 mov	 ecx, DWORD PTR ?g_CascadedShadow@@3VCascadedShadowsManager@@A+6060
  00456	8b 10		 mov	 edx, DWORD PTR [eax]
  00458	ff 71 10	 push	 DWORD PTR [ecx+16]
  0045b	50		 push	 eax
  0045c	ff 52 7c	 call	 DWORD PTR [edx+124]
$LN36@BT_Intern_:
; Line 2528
  0045f	8b 87 58 02 00
	00		 mov	 eax, DWORD PTR [edi+600]
  00465	83 b8 90 01 00
	00 00		 cmp	 DWORD PTR [eax+400], 0
  0046c	0f 84 c0 00 00
	00		 je	 $LN37@BT_Intern_
; Line 2531
  00472	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGlob@@3PAUGlobStruct@@A ; g_pGlob
  00477	ff b0 1c 03 00
	00		 push	 DWORD PTR [eax+796]
  0047d	e8 00 00 00 00	 call	 ?GetCameraInternalData@@YAPAXH@Z ; GetCameraInternalData
  00482	83 c4 04	 add	 esp, 4
; Line 2532
  00485	85 c0		 test	 eax, eax
  00487	74 53		 je	 SHORT $LN38@BT_Intern_
; Line 2534
  00489	83 b8 20 02 00
	00 01		 cmp	 DWORD PTR [eax+544], 1
  00490	75 42		 jne	 SHORT $LN40@BT_Intern_
; Line 2538
  00492	f3 0f 10 80 24
	02 00 00	 movss	 xmm0, DWORD PTR [eax+548]
  0049a	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _vec$2[ebp], xmm0
; Line 2539
  004a2	f3 0f 10 80 28
	02 00 00	 movss	 xmm0, DWORD PTR [eax+552]
  004aa	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR _vec$2[ebp+4], xmm0
; Line 2540
  004b2	f3 0f 10 80 2c
	02 00 00	 movss	 xmm0, DWORD PTR [eax+556]
  004ba	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _vec$2[ebp+8], xmm0
; Line 2541
  004c2	f3 0f 10 80 30
	02 00 00	 movss	 xmm0, DWORD PTR [eax+560]
  004ca	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _vec$2[ebp+12], xmm0
; Line 2542
  004d2	eb 3c		 jmp	 SHORT $LN39@BT_Intern_
$LN40@BT_Intern_:
; Line 2546
  004d4	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
; Line 2548
  004da	eb 03		 jmp	 SHORT $LN120@BT_Intern_
$LN38@BT_Intern_:
; Line 2552
  004dc	8d 4d ec	 lea	 ecx, DWORD PTR $T9[ebp]
$LN120@BT_Intern_:
; Line 2554
  004df	83 ec 10	 sub	 esp, 16			; 00000010H
  004e2	c7 44 24 0c 80
	4f c3 47	 mov	 DWORD PTR [esp+12], 1203982208 ; 47c34f80H
  004ea	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  004f2	c7 44 24 04 00
	00 80 3f	 mov	 DWORD PTR [esp+4], 1065353216 ; 3f800000H
  004fa	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  00501	e8 00 00 00 00	 call	 ??0Vector4@KMaths@@QAE@MMMM@Z ; KMaths::Vector4::Vector4
  00506	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00509	0f 11 85 68 ff
	ff ff		 movups	 XMMWORD PTR _vec$2[ebp], xmm0
$LN39@BT_Intern_:
  00510	8b 87 58 02 00
	00		 mov	 eax, DWORD PTR [edi+600]
  00516	8b 80 90 01 00
	00		 mov	 eax, DWORD PTR [eax+400]
  0051c	50		 push	 eax
  0051d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0051f	ff 51 38	 call	 DWORD PTR [ecx+56]
  00522	8d 95 68 ff ff
	ff		 lea	 edx, DWORD PTR _vec$2[ebp]
  00528	52		 push	 edx
  00529	50		 push	 eax
  0052a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0052c	ff 91 84 00 00
	00		 call	 DWORD PTR [ecx+132]
$LN37@BT_Intern_:
; Line 2571
  00532	8b 06		 mov	 eax, DWORD PTR [esi]
  00534	6a 00		 push	 0
  00536	56		 push	 esi
  00537	ff 50 1c	 call	 DWORD PTR [eax+28]
  0053a	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  00540	6a 00		 push	 0
  00542	8b 08		 mov	 ecx, DWORD PTR [eax]
  00544	50		 push	 eax
  00545	ff 51 34	 call	 DWORD PTR [ecx+52]
; Line 2574
  00548	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?g_bRenderTerrainForShadowMap@@3_NA, 0 ; g_bRenderTerrainForShadowMap
  0054f	75 5c		 jne	 SHORT $LN6@BT_Intern_
; Line 2576
  00551	8b 87 80 03 00
	00		 mov	 eax, DWORD PTR [edi+896]
  00557	33 f6		 xor	 esi, esi
  00559	85 c0		 test	 eax, eax
  0055b	74 50		 je	 SHORT $LN6@BT_Intern_
  0055d	33 db		 xor	 ebx, ebx
  0055f	90		 npad	 1
$LL7@BT_Intern_:
; Line 2578
  00560	83 fe 01	 cmp	 esi, 1
  00563	74 37		 je	 SHORT $LN5@BT_Intern_
  00565	83 fe 05	 cmp	 esi, 5
  00568	74 32		 je	 SHORT $LN5@BT_Intern_
  0056a	83 fe 07	 cmp	 esi, 7
  0056d	74 2d		 je	 SHORT $LN5@BT_Intern_
; Line 2581
  0056f	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _lpTexture$4[ebp], 0
; Line 2582
  00576	3b c6		 cmp	 eax, esi
  00578	76 10		 jbe	 SHORT $LN44@BT_Intern_
  0057a	8b 87 8c 03 00
	00		 mov	 eax, DWORD PTR [edi+908]
  00580	8b 84 18 44 01
	00 00		 mov	 eax, DWORD PTR [eax+ebx+324]
  00587	89 45 98	 mov	 DWORD PTR _lpTexture$4[ebp], eax
$LN44@BT_Intern_:
; Line 2583
  0058a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  0058f	8d 55 98	 lea	 edx, DWORD PTR _lpTexture$4[ebp]
  00592	52		 push	 edx
  00593	6a 01		 push	 1
  00595	56		 push	 esi
  00596	8b 08		 mov	 ecx, DWORD PTR [eax]
  00598	50		 push	 eax
  00599	ff 51 20	 call	 DWORD PTR [ecx+32]
$LN5@BT_Intern_:
; Line 2576
  0059c	8b 87 80 03 00
	00		 mov	 eax, DWORD PTR [edi+896]
  005a2	46		 inc	 esi
  005a3	81 c3 50 01 00
	00		 add	 ebx, 336		; 00000150H
  005a9	3b f0		 cmp	 esi, eax
  005ab	72 b3		 jb	 SHORT $LL7@BT_Intern_
$LN6@BT_Intern_:
; Line 2590
  005ad	8d 45 a4	 lea	 eax, DWORD PTR _matWorld$5[ebp]
  005b0	50		 push	 eax
  005b1	68 00 01 00 00	 push	 256			; 00000100H
  005b6	e8 00 00 00 00	 call	 ?COMMONGetTransform@@YAXHPAUMatrix@KMaths@@@Z ; COMMONGetTransform
; Line 2591
  005bb	8b b7 58 02 00
	00		 mov	 esi, DWORD PTR [edi+600]
  005c1	8d 45 a4	 lea	 eax, DWORD PTR _matWorld$5[ebp]
  005c4	83 ec 38	 sub	 esp, 56			; 00000038H
  005c7	8b cc		 mov	 ecx, esp
  005c9	50		 push	 eax
  005ca	e8 00 00 00 00	 call	 ??0Matrix@KMaths@@QAE@ABU01@@Z ; KMaths::Matrix::Matrix
  005cf	8b 06		 mov	 eax, DWORD PTR [esi]
  005d1	8b ce		 mov	 ecx, esi
  005d3	57		 push	 edi
  005d4	ff 50 10	 call	 DWORD PTR [eax+16]
; Line 2594
  005d7	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?g_bRenderTerrainForShadowMap@@3_NA, 0 ; g_bRenderTerrainForShadowMap
  005de	75 0d		 jne	 SHORT $LN45@BT_Intern_
; Line 2595
  005e0	6a 00		 push	 0
  005e2	6a 00		 push	 0
  005e4	57		 push	 edi
  005e5	e8 00 00 00 00	 call	 ?update_mesh_light@@YA_NPAUsMesh@@PAUsObject@@PAUsFrame@@@Z ; update_mesh_light
  005ea	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN45@BT_Intern_:
; Line 2598
  005ed	8b 9d 78 ff ff
	ff		 mov	 ebx, DWORD PTR _Terrain$GSCopy$1$[ebp]
  005f3	ff 75 9c	 push	 DWORD PTR _iQualityPass$1$[ebp]
  005f6	0f b6 43 54	 movzx	 eax, BYTE PTR [ebx+84]
  005fa	50		 push	 eax
  005fb	ff 73 50	 push	 DWORD PTR [ebx+80]
  005fe	53		 push	 ebx
  005ff	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ; BT_Intern_RenderTerrainRec
  00604	83 c4 10	 add	 esp, 16			; 00000010H
; Line 2601
  00607	c7 05 64 74 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29796, 0
; Line 2604
  00611	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?g_bRenderTerrainForShadowMap@@3_NA, 0 ; g_bRenderTerrainForShadowMap
  00618	75 3b		 jne	 SHORT $LN74@BT_Intern_
; Line 2606
  0061a	33 f6		 xor	 esi, esi
  0061c	39 b7 80 03 00
	00		 cmp	 DWORD PTR [edi+896], esi
  00622	76 31		 jbe	 SHORT $LN74@BT_Intern_
$LL118@BT_Intern_:
; Line 2608
  00624	83 fe 01	 cmp	 esi, 1
  00627	74 23		 je	 SHORT $LN8@BT_Intern_
  00629	83 fe 05	 cmp	 esi, 5
  0062c	74 1e		 je	 SHORT $LN8@BT_Intern_
  0062e	83 fe 07	 cmp	 esi, 7
  00631	74 19		 je	 SHORT $LN8@BT_Intern_
; Line 2612
  00633	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  00638	8d 55 94	 lea	 edx, DWORD PTR _lpTexture$3[ebp]
  0063b	52		 push	 edx
  0063c	6a 01		 push	 1
  0063e	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _lpTexture$3[ebp], 0
  00645	8b 08		 mov	 ecx, DWORD PTR [eax]
  00647	56		 push	 esi
  00648	50		 push	 eax
  00649	ff 51 20	 call	 DWORD PTR [ecx+32]
$LN8@BT_Intern_:
; Line 2606
  0064c	46		 inc	 esi
  0064d	3b b7 80 03 00
	00		 cmp	 esi, DWORD PTR [edi+896]
  00653	72 cf		 jb	 SHORT $LL118@BT_Intern_
$LN74@BT_Intern_:
; Line 2462
  00655	8b 5d a0	 mov	 ebx, DWORD PTR _iQualityPassCount$1$[ebp]
$LN2@BT_Intern_:
  00658	8b 4d 9c	 mov	 ecx, DWORD PTR _iQualityPass$1$[ebp]
  0065b	8b 55 8c	 mov	 edx, DWORD PTR _hDistantTechnique$1$[ebp]
  0065e	41		 inc	 ecx
  0065f	89 4d 9c	 mov	 DWORD PTR _iQualityPass$1$[ebp], ecx
  00662	3b cb		 cmp	 ecx, ebx
  00664	0f 8c e6 fb ff
	ff		 jl	 $LL4@BT_Intern_
$LN3@BT_Intern_:
; Line 2625
  0066a	c7 05 38 74 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29752, 0
$LN1@BT_Intern_:
; Line 2793
  00674	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00677	5f		 pop	 edi
  00678	5e		 pop	 esi
  00679	33 cd		 xor	 ecx, ebp
  0067b	5b		 pop	 ebx
  0067c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00681	8b e5		 mov	 esp, ebp
  00683	5d		 pop	 ebp
  00684	c3		 ret	 0
?BT_Intern_RenderTerrain@@YAXPAUs_BT_terrain@@@Z ENDP	; BT_Intern_RenderTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_RenderSector@@YAXPAUs_BT_Sector@@@Z
_TEXT	SEGMENT
$T1 = -384						; size = 16
_stride$2 = -368					; size = 4
_offset$3 = -364					; size = 4
_fDet$4 = -360						; size = 4
$T5 = -356						; size = 64
_cbps$6 = -292						; size = 224
_cb$7 = -260						; size = 192
_World$8 = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_Sector$ = 8						; size = 4
?BT_Intern_RenderSector@@YAXPAUs_BT_Sector@@@Z PROC	; BT_Intern_RenderSector, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 3435
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 01 00
	00		 sub	 esp, 384		; 00000180H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _Sector$[ebp]
; Line 3437
  00017	80 3e 00	 cmp	 BYTE PTR [esi], 0
  0001a	0f 85 24 03 00
	00		 jne	 $LN3@BT_Intern_
; Line 3147
  00020	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  00023	85 c0		 test	 eax, eax
  00025	0f 84 a3 00 00
	00		 je	 $LN15@BT_Intern_
; Line 3149
  0002b	80 78 31 00	 cmp	 BYTE PTR [eax+49], 0
  0002f	0f 85 99 00 00
	00		 jne	 $LN15@BT_Intern_
  00035	80 78 30 01	 cmp	 BYTE PTR [eax+48], 1
  00039	0f 85 8f 00 00
	00		 jne	 $LN15@BT_Intern_
; Line 4707
  0003f	80 be 81 00 00
	00 01		 cmp	 BYTE PTR [esi+129], 1
  00046	75 0e		 jne	 SHORT $LN18@BT_Intern_
; Line 4709
  00048	ff b6 84 00 00
	00		 push	 DWORD PTR [esi+132]
  0004e	e8 00 00 00 00	 call	 ?BT_RTTMS_UnlockSectorVertexData@@YAXPAX@Z ; BT_RTTMS_UnlockSectorVertexData
  00053	83 c4 04	 add	 esp, 4
$LN18@BT_Intern_:
; Line 3156
  00056	80 7e 68 00	 cmp	 BYTE PTR [esi+104], 0
  0005a	74 18		 je	 SHORT $LN21@BT_Intern_
; Line 3157
  0005c	ff 76 6c	 push	 DWORD PTR [esi+108]
  0005f	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00062	6a 00		 push	 0
  00064	e8 00 00 00 00	 call	 ?SetSideLOD@BT_QuadMap@@QAEXEK@Z ; BT_QuadMap::SetSideLOD
; Line 3158
  00069	c6 46 68 00	 mov	 BYTE PTR [esi+104], 0
; Line 3159
  0006d	c6 86 80 00 00
	00 01		 mov	 BYTE PTR [esi+128], 1
$LN21@BT_Intern_:
; Line 3163
  00074	80 7e 6a 00	 cmp	 BYTE PTR [esi+106], 0
  00078	74 18		 je	 SHORT $LN22@BT_Intern_
; Line 3164
  0007a	ff 76 74	 push	 DWORD PTR [esi+116]
  0007d	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00080	6a 01		 push	 1
  00082	e8 00 00 00 00	 call	 ?SetSideLOD@BT_QuadMap@@QAEXEK@Z ; BT_QuadMap::SetSideLOD
; Line 3165
  00087	c6 46 6a 00	 mov	 BYTE PTR [esi+106], 0
; Line 3166
  0008b	c6 86 80 00 00
	00 01		 mov	 BYTE PTR [esi+128], 1
$LN22@BT_Intern_:
; Line 3170
  00092	80 7e 6b 00	 cmp	 BYTE PTR [esi+107], 0
  00096	74 18		 je	 SHORT $LN23@BT_Intern_
; Line 3171
  00098	ff 76 78	 push	 DWORD PTR [esi+120]
  0009b	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0009e	6a 02		 push	 2
  000a0	e8 00 00 00 00	 call	 ?SetSideLOD@BT_QuadMap@@QAEXEK@Z ; BT_QuadMap::SetSideLOD
; Line 3172
  000a5	c6 46 6b 00	 mov	 BYTE PTR [esi+107], 0
; Line 3173
  000a9	c6 86 80 00 00
	00 01		 mov	 BYTE PTR [esi+128], 1
$LN23@BT_Intern_:
; Line 3177
  000b0	80 7e 69 00	 cmp	 BYTE PTR [esi+105], 0
  000b4	74 18		 je	 SHORT $LN15@BT_Intern_
; Line 3178
  000b6	ff 76 70	 push	 DWORD PTR [esi+112]
  000b9	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  000bc	6a 03		 push	 3
  000be	e8 00 00 00 00	 call	 ?SetSideLOD@BT_QuadMap@@QAEXEK@Z ; BT_QuadMap::SetSideLOD
; Line 3179
  000c3	c6 46 69 00	 mov	 BYTE PTR [esi+105], 0
; Line 3180
  000c7	c6 86 80 00 00
	00 01		 mov	 BYTE PTR [esi+128], 1
$LN15@BT_Intern_:
; Line 3448
  000ce	80 be 80 00 00
	00 01		 cmp	 BYTE PTR [esi+128], 1
  000d5	75 14		 jne	 SHORT $LN24@BT_Intern_
; Line 3451
  000d7	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  000da	6a 01		 push	 1
  000dc	ff 76 1c	 push	 DWORD PTR [esi+28]
  000df	e8 00 00 00 00	 call	 ?UpdateMesh@BT_QuadMap@@QAEXPAUs_BT_DrawBuffer@@_N@Z ; BT_QuadMap::UpdateMesh
; Line 3452
  000e4	c6 86 80 00 00
	00 00		 mov	 BYTE PTR [esi+128], 0
$LN24@BT_Intern_:
; Line 3459
  000eb	a1 38 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29752
  000f0	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000f3	8d 81 48 01 00
	00		 lea	 eax, DWORD PTR [ecx+328]
  000f9	50		 push	 eax
  000fa	8d 45 bc	 lea	 eax, DWORD PTR _World$8[ebp]
  000fd	50		 push	 eax
  000fe	8d 81 88 02 00
	00		 lea	 eax, DWORD PTR [ecx+648]
  00104	50		 push	 eax
  00105	8d 85 9c fe ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  0010b	50		 push	 eax
  0010c	8d 4e 20	 lea	 ecx, DWORD PTR [esi+32]
  0010f	e8 00 00 00 00	 call	 ??DMatrix@KMaths@@QBE?AU01@ABU01@@Z ; KMaths::Matrix::operator*
  00114	8b c8		 mov	 ecx, eax
  00116	e8 00 00 00 00	 call	 ??DMatrix@KMaths@@QBE?AU01@ABU01@@Z ; KMaths::Matrix::operator*
; Line 3460
  0011b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pCBChangePerTerrsainChunk@@3PAUID3D11Buffer@@A, 0 ; m_pCBChangePerTerrsainChunk
  00122	0f 84 d8 00 00
	00		 je	 $LN5@BT_Intern_
; Line 3463
  00128	80 3d 00 00 00
	00 01		 cmp	 BYTE PTR ?g_bRenderTerrainForShadowMap@@3_NA, 1 ; g_bRenderTerrainForShadowMap
  0012f	75 12		 jne	 SHORT $LN6@BT_Intern_
; Line 3466
  00131	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _World$8[ebp+52]
  00136	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@41200000
  0013e	f3 0f 11 45 f0	 movss	 DWORD PTR _World$8[ebp+52], xmm0
$LN6@BT_Intern_:
; Line 3470
  00143	0f 10 45 bc	 movups	 xmm0, XMMWORD PTR _World$8[ebp]
; Line 3471
  00147	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _cb$7[ebp]
  0014d	50		 push	 eax
  0014e	0f 11 85 fc fe
	ff ff		 movups	 XMMWORD PTR _cb$7[ebp], xmm0
  00155	50		 push	 eax
  00156	0f 10 45 cc	 movups	 xmm0, XMMWORD PTR _World$8[ebp+16]
  0015a	0f 11 85 0c ff
	ff ff		 movups	 XMMWORD PTR _cb$7[ebp+16], xmm0
  00161	0f 10 45 dc	 movups	 xmm0, XMMWORD PTR _World$8[ebp+32]
  00165	0f 11 85 1c ff
	ff ff		 movups	 XMMWORD PTR _cb$7[ebp+32], xmm0
  0016c	0f 10 45 ec	 movups	 xmm0, XMMWORD PTR _World$8[ebp+48]
  00170	0f 11 85 2c ff
	ff ff		 movups	 XMMWORD PTR _cb$7[ebp+48], xmm0
  00177	e8 00 00 00 00	 call	 ?MatrixTranspose@KMaths@@YAPAUMatrix@1@PAU21@PBU21@@Z ; KMaths::MatrixTranspose
; Line 3472
  0017c	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _cb$7[ebp+64]
  00182	50		 push	 eax
  00183	6a 02		 push	 2
  00185	e8 00 00 00 00	 call	 ?COMMONGetTransform@@YAXHPAUMatrix@KMaths@@@Z ; COMMONGetTransform
; Line 3473
  0018a	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _cb$7[ebp+128]
  00190	50		 push	 eax
  00191	6a 03		 push	 3
  00193	e8 00 00 00 00	 call	 ?COMMONGetTransform@@YAXHPAUMatrix@KMaths@@@Z ; COMMONGetTransform
; Line 3474
  00198	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _cb$7[ebp+64]
  0019e	50		 push	 eax
  0019f	50		 push	 eax
  001a0	e8 00 00 00 00	 call	 ?MatrixTranspose@KMaths@@YAPAUMatrix@1@PAU21@PBU21@@Z ; KMaths::MatrixTranspose
; Line 3475
  001a5	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _cb$7[ebp+128]
  001ab	50		 push	 eax
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?MatrixTranspose@KMaths@@YAPAUMatrix@1@PAU21@PBU21@@Z ; KMaths::MatrixTranspose
; Line 3476
  001b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  001b7	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _cb$7[ebp]
  001bd	83 c4 28	 add	 esp, 40			; 00000028H
  001c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c2	6a 00		 push	 0
  001c4	6a 00		 push	 0
  001c6	52		 push	 edx
  001c7	6a 00		 push	 0
  001c9	6a 00		 push	 0
  001cb	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_pCBChangePerTerrsainChunk@@3PAUID3D11Buffer@@A ; m_pCBChangePerTerrsainChunk
  001d1	50		 push	 eax
  001d2	ff 91 c0 00 00
	00		 call	 DWORD PTR [ecx+192]
; Line 3477
  001d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  001dd	68 00 00 00 00	 push	 OFFSET ?m_pCBChangePerTerrsainChunk@@3PAUID3D11Buffer@@A ; m_pCBChangePerTerrsainChunk
  001e2	6a 01		 push	 1
  001e4	6a 00		 push	 0
  001e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e8	50		 push	 eax
  001e9	ff 51 1c	 call	 DWORD PTR [ecx+28]
; Line 3478
  001ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  001f1	68 00 00 00 00	 push	 OFFSET ?m_pCBChangePerTerrsainChunk@@3PAUID3D11Buffer@@A ; m_pCBChangePerTerrsainChunk
  001f6	6a 01		 push	 1
  001f8	6a 00		 push	 0
  001fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  001fc	50		 push	 eax
  001fd	ff 51 40	 call	 DWORD PTR [ecx+64]
$LN5@BT_Intern_:
; Line 3488
  00200	57		 push	 edi
  00201	83 ec 10	 sub	 esp, 16			; 00000010H
  00204	8d 8d 80 fe ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0020a	c7 44 24 0c 00
	00 00 00	 mov	 DWORD PTR [esp+12], 0
  00212	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  0021a	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR [esp+4], 0
  00222	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  00229	e8 00 00 00 00	 call	 ??0GGCOLOR@@QAE@MMMM@Z	; GGCOLOR::GGCOLOR
; Line 3492
  0022e	6a 00		 push	 0
  00230	0f 10 00	 movups	 xmm0, XMMWORD PTR [eax]
  00233	c7 85 ec fe ff
	ff 00 00 80 3f	 mov	 DWORD PTR _cbps$6[ebp+16], 1065353216 ; 3f800000H
  0023d	0f 11 85 dc fe
	ff ff		 movups	 XMMWORD PTR _cbps$6[ebp], xmm0
  00244	e8 00 00 00 00	 call	 ?GetCameraInternalData@@YAPAXH@Z ; GetCameraInternalData
; Line 3494
  00249	83 c0 40	 add	 eax, 64			; 00000040H
  0024c	c7 85 98 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _fDet$4[ebp], 0
  00256	50		 push	 eax
  00257	8d 85 98 fe ff
	ff		 lea	 eax, DWORD PTR _fDet$4[ebp]
  0025d	50		 push	 eax
  0025e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _cbps$6[ebp+32]
  00264	50		 push	 eax
  00265	e8 00 00 00 00	 call	 ?MatrixInverse@KMaths@@YAPAUMatrix@1@PAU21@PAMPBU21@@Z ; KMaths::MatrixInverse
; Line 3495
  0026a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _cbps$6[ebp+32]
  00270	50		 push	 eax
  00271	50		 push	 eax
  00272	e8 00 00 00 00	 call	 ?MatrixTranspose@KMaths@@YAPAUMatrix@1@PAU21@PBU21@@Z ; KMaths::MatrixTranspose
; Line 3500
  00277	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  0027c	8d 95 dc fe ff
	ff		 lea	 edx, DWORD PTR _cbps$6[ebp]
  00282	83 c4 18	 add	 esp, 24			; 00000018H
  00285	8b 08		 mov	 ecx, DWORD PTR [eax]
  00287	6a 00		 push	 0
  00289	6a 00		 push	 0
  0028b	52		 push	 edx
  0028c	6a 00		 push	 0
  0028e	6a 00		 push	 0
  00290	ff 35 00 00 00
	00		 push	 DWORD PTR ?m_pCBChangePerTerrsainChunkPS@@3PAUID3D11Buffer@@A ; m_pCBChangePerTerrsainChunkPS
  00296	50		 push	 eax
  00297	ff 91 c0 00 00
	00		 call	 DWORD PTR [ecx+192]
; Line 3501
  0029d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  002a2	68 00 00 00 00	 push	 OFFSET ?m_pCBChangePerTerrsainChunkPS@@3PAUID3D11Buffer@@A ; m_pCBChangePerTerrsainChunkPS
  002a7	6a 01		 push	 1
  002a9	6a 01		 push	 1
  002ab	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ad	50		 push	 eax
  002ae	ff 51 40	 call	 DWORD PTR [ecx+64]
; Line 3506
  002b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  002b7	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  002ba	6a 00		 push	 0
  002bc	6a 39		 push	 57			; 00000039H
  002be	8b 11		 mov	 edx, DWORD PTR [ecx]
  002c0	ff 70 04	 push	 DWORD PTR [eax+4]
  002c3	51		 push	 ecx
  002c4	ff 52 4c	 call	 DWORD PTR [edx+76]
; Line 3511
  002c7	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
; Line 3513
  002ca	8d bd 94 fe ff
	ff		 lea	 edi, DWORD PTR _offset$3[ebp]
  002d0	57		 push	 edi
  002d1	8d bd 90 fe ff
	ff		 lea	 edi, DWORD PTR _stride$2[ebp]
  002d7	57		 push	 edi
  002d8	0f b6 42 1c	 movzx	 eax, BYTE PTR [edx+28]
  002dc	89 85 90 fe ff
	ff		 mov	 DWORD PTR _stride$2[ebp], eax
  002e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  002e7	52		 push	 edx
  002e8	6a 01		 push	 1
  002ea	c7 85 94 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _offset$3[ebp], 0
  002f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f6	6a 00		 push	 0
  002f8	50		 push	 eax
  002f9	ff 51 48	 call	 DWORD PTR [ecx+72]
; Line 3516
  002fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pImmediateContext@@3PAUID3D11DeviceContext@@A ; m_pImmediateContext
  00302	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00305	6a 00		 push	 0
  00307	6a 00		 push	 0
  00309	8b 11		 mov	 edx, DWORD PTR [ecx]
  0030b	ff 70 10	 push	 DWORD PTR [eax+16]
  0030e	51		 push	 ecx
  0030f	ff 52 30	 call	 DWORD PTR [edx+48]
; Line 3544
  00312	ff 05 30 74 00
	00		 inc	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29744
; Line 3545
  00318	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0031b	0f b7 40 1e	 movzx	 eax, WORD PTR [eax+30]
  0031f	01 05 2c 74 00
	00		 add	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29740, eax
; Line 3546
  00325	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGlob@@3PAUGlobStruct@@A ; g_pGlob
  0032a	ff 80 6c 03 00
	00		 inc	 DWORD PTR [eax+876]
; Line 3547
  00330	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00333	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_pGlob@@3PAUGlobStruct@@A ; g_pGlob
  00339	5f		 pop	 edi
  0033a	0f b7 40 1e	 movzx	 eax, WORD PTR [eax+30]
  0033e	01 81 68 03 00
	00		 add	 DWORD PTR [ecx+872], eax
$LN3@BT_Intern_:
; Line 3550
  00344	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00347	33 cd		 xor	 ecx, ebp
  00349	5e		 pop	 esi
  0034a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0034f	8b e5		 mov	 esp, ebp
  00351	5d		 pop	 ebp
  00352	c3		 ret	 0
?BT_Intern_RenderSector@@YAXPAUs_BT_Sector@@@Z ENDP	; BT_Intern_RenderSector
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_UnlockSectorsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z
_TEXT	SEGMENT
_Terrain$ = 8						; size = 4
_Quadtree$ = 12						; size = 4
tv408 = 16						; size = 4
_Level$ = 16						; size = 4
?BT_Intern_UnlockSectorsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z PROC ; BT_Intern_UnlockSectorsRec, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 3396
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 3398
  00005	8b 75 0c	 mov	 esi, DWORD PTR _Quadtree$[ebp]
  00008	57		 push	 edi
  00009	8b 7d 10	 mov	 edi, DWORD PTR _Level$[ebp]
  0000c	85 ff		 test	 edi, edi
  0000e	74 77		 je	 SHORT $LN24@BT_Intern_
  00010	8b 5d 08	 mov	 ebx, DWORD PTR _Terrain$[ebp]
  00013	4f		 dec	 edi
$LL18@BT_Intern_:
; Line 3400
  00014	80 7e 30 00	 cmp	 BYTE PTR [esi+48], 0
  00018	89 7d 10	 mov	 DWORD PTR tv408[ebp], edi
  0001b	74 07		 je	 SHORT $LN4@BT_Intern_
  0001d	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00020	85 c0		 test	 eax, eax
  00022	75 6a		 jne	 SHORT $LN20@BT_Intern_
$LN4@BT_Intern_:
; Line 3405
  00024	8b 06		 mov	 eax, DWORD PTR [esi]
  00026	80 78 1c 00	 cmp	 BYTE PTR [eax+28], 0
  0002a	75 11		 jne	 SHORT $LN6@BT_Intern_
  0002c	80 78 31 00	 cmp	 BYTE PTR [eax+49], 0
  00030	75 0b		 jne	 SHORT $LN6@BT_Intern_
; Line 3406
  00032	57		 push	 edi
  00033	50		 push	 eax
  00034	53		 push	 ebx
  00035	e8 00 00 00 00	 call	 ?BT_Intern_UnlockSectorsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z ; BT_Intern_UnlockSectorsRec
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@BT_Intern_:
; Line 3409
  0003d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00040	80 78 1c 00	 cmp	 BYTE PTR [eax+28], 0
  00044	75 11		 jne	 SHORT $LN7@BT_Intern_
  00046	80 78 31 00	 cmp	 BYTE PTR [eax+49], 0
  0004a	75 0b		 jne	 SHORT $LN7@BT_Intern_
; Line 3410
  0004c	57		 push	 edi
  0004d	50		 push	 eax
  0004e	53		 push	 ebx
  0004f	e8 00 00 00 00	 call	 ?BT_Intern_UnlockSectorsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z ; BT_Intern_UnlockSectorsRec
  00054	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@BT_Intern_:
; Line 3413
  00057	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005a	80 78 1c 00	 cmp	 BYTE PTR [eax+28], 0
  0005e	75 11		 jne	 SHORT $LN8@BT_Intern_
  00060	80 78 31 00	 cmp	 BYTE PTR [eax+49], 0
  00064	75 0b		 jne	 SHORT $LN8@BT_Intern_
; Line 3414
  00066	57		 push	 edi
  00067	50		 push	 eax
  00068	53		 push	 ebx
  00069	e8 00 00 00 00	 call	 ?BT_Intern_UnlockSectorsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z ; BT_Intern_UnlockSectorsRec
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@BT_Intern_:
; Line 3417
  00071	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]
  00074	80 7e 1c 00	 cmp	 BYTE PTR [esi+28], 0
  00078	75 2b		 jne	 SHORT $LN16@BT_Intern_
  0007a	80 7e 31 00	 cmp	 BYTE PTR [esi+49], 0
  0007e	75 25		 jne	 SHORT $LN16@BT_Intern_
; Line 3418
  00080	4f		 dec	 edi
  00081	83 7d 10 00	 cmp	 DWORD PTR tv408[ebp], 0
  00085	77 8d		 ja	 SHORT $LL18@BT_Intern_
$LN24@BT_Intern_:
; Line 3421
  00087	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0008a	85 c0		 test	 eax, eax
  0008c	74 17		 je	 SHORT $LN16@BT_Intern_
$LN20@BT_Intern_:
; Line 3425
  0008e	80 b8 81 00 00
	00 01		 cmp	 BYTE PTR [eax+129], 1
  00095	75 0e		 jne	 SHORT $LN16@BT_Intern_
  00097	ff b0 84 00 00
	00		 push	 DWORD PTR [eax+132]
  0009d	e8 00 00 00 00	 call	 ?BT_RTTMS_UnlockSectorVertexData@@YAXPAX@Z ; BT_RTTMS_UnlockSectorVertexData
  000a2	83 c4 04	 add	 esp, 4
$LN16@BT_Intern_:
  000a5	5f		 pop	 edi
  000a6	5e		 pop	 esi
  000a7	5b		 pop	 ebx
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
?BT_Intern_UnlockSectorsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z ENDP ; BT_Intern_UnlockSectorsRec
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z
_TEXT	SEGMENT
_Terrain$ = 8						; size = 4
_Quadtree$ = 12						; size = 4
_Level$ = 16						; size = 4
_iQualityPass$ = 20					; size = 4
?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z PROC ; BT_Intern_RenderTerrainRec, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 3285
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3287
  00003	8b 45 10	 mov	 eax, DWORD PTR _Level$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 14	 mov	 ebx, DWORD PTR _iQualityPass$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 0c	 mov	 esi, DWORD PTR _Quadtree$[ebp]
  0000e	57		 push	 edi
  0000f	85 c0		 test	 eax, eax
  00011	0f 84 ec 01 00
	00		 je	 $LN39@BT_Intern_
  00017	8d 78 ff	 lea	 edi, DWORD PTR [eax-1]
$LN86@BT_Intern_:
; Line 3290
  0001a	80 7e 30 00	 cmp	 BYTE PTR [esi+48], 0
  0001e	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@43000000
  00026	74 0b		 je	 SHORT $LN4@BT_Intern_
  00028	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0002b	85 c9		 test	 ecx, ecx
  0002d	0f 85 e9 01 00
	00		 jne	 $LN35@BT_Intern_
$LN4@BT_Intern_:
; Line 3301
  00033	8b 45 08	 mov	 eax, DWORD PTR _Terrain$[ebp]
  00036	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
  0003e	f3 0f 10 46 2c	 movss	 xmm0, DWORD PTR [esi+44]
  00043	f3 0f 5e 50 34	 divss	 xmm2, DWORD PTR [eax+52]
  00048	0f 28 ca	 movaps	 xmm1, xmm2
  0004b	f3 0f 59 15 20
	74 00 00	 mulss	 xmm2, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29728
  00053	f3 0f 59 0d 28
	74 00 00	 mulss	 xmm1, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29736
  0005b	f3 0f 59 d3	 mulss	 xmm2, xmm3
  0005f	f3 0f 59 cb	 mulss	 xmm1, xmm3
  00063	0f 2f c1	 comiss	 xmm0, xmm1
  00066	f3 0f 10 46 24	 movss	 xmm0, DWORD PTR [esi+36]
  0006b	0f 86 bf 00 00
	00		 jbe	 $LN8@BT_Intern_
; Line 3303
  00071	0f 2f c2	 comiss	 xmm0, xmm2
  00074	76 5d		 jbe	 SHORT $LN10@BT_Intern_
; Line 3306
  00076	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00078	80 79 1c 00	 cmp	 BYTE PTR [ecx+28], 0
  0007c	75 15		 jne	 SHORT $LN12@BT_Intern_
  0007e	80 79 31 00	 cmp	 BYTE PTR [ecx+49], 0
  00082	75 0f		 jne	 SHORT $LN12@BT_Intern_
; Line 3307
  00084	53		 push	 ebx
  00085	57		 push	 edi
  00086	51		 push	 ecx
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ; BT_Intern_RenderTerrainRec
  0008d	8b 45 08	 mov	 eax, DWORD PTR _Terrain$[ebp]
  00090	83 c4 10	 add	 esp, 16			; 00000010H
$LN12@BT_Intern_:
; Line 3310
  00093	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00096	80 79 1c 00	 cmp	 BYTE PTR [ecx+28], 0
  0009a	75 12		 jne	 SHORT $LN13@BT_Intern_
  0009c	80 79 31 00	 cmp	 BYTE PTR [ecx+49], 0
  000a0	75 0c		 jne	 SHORT $LN13@BT_Intern_
; Line 3311
  000a2	53		 push	 ebx
  000a3	57		 push	 edi
  000a4	51		 push	 ecx
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ; BT_Intern_RenderTerrainRec
  000ab	83 c4 10	 add	 esp, 16			; 00000010H
$LN13@BT_Intern_:
; Line 3314
  000ae	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000b1	80 78 1c 00	 cmp	 BYTE PTR [eax+28], 0
  000b5	75 14		 jne	 SHORT $LN14@BT_Intern_
  000b7	80 78 31 00	 cmp	 BYTE PTR [eax+49], 0
  000bb	75 0e		 jne	 SHORT $LN14@BT_Intern_
; Line 3315
  000bd	53		 push	 ebx
  000be	57		 push	 edi
  000bf	50		 push	 eax
  000c0	ff 75 08	 push	 DWORD PTR _Terrain$[ebp]
  000c3	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ; BT_Intern_RenderTerrainRec
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
$LN14@BT_Intern_:
; Line 3318
  000cb	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]
; Line 3319
  000ce	e9 14 01 00 00	 jmp	 $LN85@BT_Intern_
$LN10@BT_Intern_:
; Line 3322
  000d3	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d6	80 79 1c 00	 cmp	 BYTE PTR [ecx+28], 0
  000da	75 15		 jne	 SHORT $LN16@BT_Intern_
  000dc	80 79 31 00	 cmp	 BYTE PTR [ecx+49], 0
  000e0	75 0f		 jne	 SHORT $LN16@BT_Intern_
; Line 3323
  000e2	53		 push	 ebx
  000e3	57		 push	 edi
  000e4	51		 push	 ecx
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ; BT_Intern_RenderTerrainRec
  000eb	8b 45 08	 mov	 eax, DWORD PTR _Terrain$[ebp]
  000ee	83 c4 10	 add	 esp, 16			; 00000010H
$LN16@BT_Intern_:
; Line 3326
  000f1	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000f3	80 79 1c 00	 cmp	 BYTE PTR [ecx+28], 0
  000f7	75 12		 jne	 SHORT $LN17@BT_Intern_
  000f9	80 79 31 00	 cmp	 BYTE PTR [ecx+49], 0
  000fd	75 0c		 jne	 SHORT $LN17@BT_Intern_
; Line 3327
  000ff	53		 push	 ebx
  00100	57		 push	 edi
  00101	51		 push	 ecx
  00102	50		 push	 eax
  00103	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ; BT_Intern_RenderTerrainRec
  00108	83 c4 10	 add	 esp, 16			; 00000010H
$LN17@BT_Intern_:
; Line 3330
  0010b	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0010e	80 78 1c 00	 cmp	 BYTE PTR [eax+28], 0
  00112	75 14		 jne	 SHORT $LN18@BT_Intern_
  00114	80 78 31 00	 cmp	 BYTE PTR [eax+49], 0
  00118	75 0e		 jne	 SHORT $LN18@BT_Intern_
; Line 3331
  0011a	53		 push	 ebx
  0011b	57		 push	 edi
  0011c	50		 push	 eax
  0011d	ff 75 08	 push	 DWORD PTR _Terrain$[ebp]
  00120	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ; BT_Intern_RenderTerrainRec
  00125	83 c4 10	 add	 esp, 16			; 00000010H
$LN18@BT_Intern_:
; Line 3334
  00128	8b 76 08	 mov	 esi, DWORD PTR [esi+8]
; Line 3335
  0012b	e9 b7 00 00 00	 jmp	 $LN85@BT_Intern_
$LN8@BT_Intern_:
; Line 3339
  00130	0f 2f c2	 comiss	 xmm0, xmm2
  00133	76 5a		 jbe	 SHORT $LN20@BT_Intern_
; Line 3342
  00135	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00138	80 79 1c 00	 cmp	 BYTE PTR [ecx+28], 0
  0013c	75 15		 jne	 SHORT $LN22@BT_Intern_
  0013e	80 79 31 00	 cmp	 BYTE PTR [ecx+49], 0
  00142	75 0f		 jne	 SHORT $LN22@BT_Intern_
; Line 3343
  00144	53		 push	 ebx
  00145	57		 push	 edi
  00146	51		 push	 ecx
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ; BT_Intern_RenderTerrainRec
  0014d	8b 45 08	 mov	 eax, DWORD PTR _Terrain$[ebp]
  00150	83 c4 10	 add	 esp, 16			; 00000010H
$LN22@BT_Intern_:
; Line 3346
  00153	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00156	80 79 1c 00	 cmp	 BYTE PTR [ecx+28], 0
  0015a	75 12		 jne	 SHORT $LN23@BT_Intern_
  0015c	80 79 31 00	 cmp	 BYTE PTR [ecx+49], 0
  00160	75 0c		 jne	 SHORT $LN23@BT_Intern_
; Line 3347
  00162	53		 push	 ebx
  00163	57		 push	 edi
  00164	51		 push	 ecx
  00165	50		 push	 eax
  00166	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ; BT_Intern_RenderTerrainRec
  0016b	83 c4 10	 add	 esp, 16			; 00000010H
$LN23@BT_Intern_:
; Line 3350
  0016e	8b 06		 mov	 eax, DWORD PTR [esi]
  00170	80 78 1c 00	 cmp	 BYTE PTR [eax+28], 0
  00174	75 14		 jne	 SHORT $LN24@BT_Intern_
  00176	80 78 31 00	 cmp	 BYTE PTR [eax+49], 0
  0017a	75 0e		 jne	 SHORT $LN24@BT_Intern_
; Line 3351
  0017c	53		 push	 ebx
  0017d	57		 push	 edi
  0017e	50		 push	 eax
  0017f	ff 75 08	 push	 DWORD PTR _Terrain$[ebp]
  00182	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ; BT_Intern_RenderTerrainRec
  00187	83 c4 10	 add	 esp, 16			; 00000010H
$LN24@BT_Intern_:
; Line 3354
  0018a	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
; Line 3355
  0018d	eb 58		 jmp	 SHORT $LN85@BT_Intern_
$LN20@BT_Intern_:
; Line 3358
  0018f	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00192	80 79 1c 00	 cmp	 BYTE PTR [ecx+28], 0
  00196	75 15		 jne	 SHORT $LN26@BT_Intern_
  00198	80 79 31 00	 cmp	 BYTE PTR [ecx+49], 0
  0019c	75 0f		 jne	 SHORT $LN26@BT_Intern_
; Line 3359
  0019e	53		 push	 ebx
  0019f	57		 push	 edi
  001a0	51		 push	 ecx
  001a1	50		 push	 eax
  001a2	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ; BT_Intern_RenderTerrainRec
  001a7	8b 45 08	 mov	 eax, DWORD PTR _Terrain$[ebp]
  001aa	83 c4 10	 add	 esp, 16			; 00000010H
$LN26@BT_Intern_:
; Line 3362
  001ad	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  001b0	80 79 1c 00	 cmp	 BYTE PTR [ecx+28], 0
  001b4	75 12		 jne	 SHORT $LN27@BT_Intern_
  001b6	80 79 31 00	 cmp	 BYTE PTR [ecx+49], 0
  001ba	75 0c		 jne	 SHORT $LN27@BT_Intern_
; Line 3363
  001bc	53		 push	 ebx
  001bd	57		 push	 edi
  001be	51		 push	 ecx
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ; BT_Intern_RenderTerrainRec
  001c5	83 c4 10	 add	 esp, 16			; 00000010H
$LN27@BT_Intern_:
; Line 3366
  001c8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001cb	80 78 1c 00	 cmp	 BYTE PTR [eax+28], 0
  001cf	75 14		 jne	 SHORT $LN28@BT_Intern_
  001d1	80 78 31 00	 cmp	 BYTE PTR [eax+49], 0
  001d5	75 0e		 jne	 SHORT $LN28@BT_Intern_
; Line 3367
  001d7	53		 push	 ebx
  001d8	57		 push	 edi
  001d9	50		 push	 eax
  001da	ff 75 08	 push	 DWORD PTR _Terrain$[ebp]
  001dd	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ; BT_Intern_RenderTerrainRec
  001e2	83 c4 10	 add	 esp, 16			; 00000010H
$LN28@BT_Intern_:
; Line 3370
  001e5	8b 36		 mov	 esi, DWORD PTR [esi]
$LN85@BT_Intern_:
; Line 3287
  001e7	80 7e 1c 00	 cmp	 BYTE PTR [esi+28], 0
  001eb	75 2a		 jne	 SHORT $LN31@BT_Intern_
  001ed	80 7e 31 00	 cmp	 BYTE PTR [esi+49], 0
  001f1	75 24		 jne	 SHORT $LN31@BT_Intern_
  001f3	8b 45 10	 mov	 eax, DWORD PTR _Level$[ebp]
  001f6	4f		 dec	 edi
  001f7	48		 dec	 eax
  001f8	89 45 10	 mov	 DWORD PTR _Level$[ebp], eax
  001fb	85 c0		 test	 eax, eax
  001fd	0f 85 17 fe ff
	ff		 jne	 $LN86@BT_Intern_
$LN39@BT_Intern_:
; Line 3378
  00203	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00206	85 c0		 test	 eax, eax
  00208	74 0d		 je	 SHORT $LN31@BT_Intern_
; Line 3381
  0020a	85 db		 test	 ebx, ebx
  0020c	75 09		 jne	 SHORT $LN31@BT_Intern_
; Line 3383
  0020e	50		 push	 eax
; Line 3387
  0020f	e8 00 00 00 00	 call	 ?BT_Intern_RenderSector@@YAXPAUs_BT_Sector@@@Z ; BT_Intern_RenderSector
  00214	83 c4 04	 add	 esp, 4
$LN31@BT_Intern_:
  00217	5f		 pop	 edi
  00218	5e		 pop	 esi
  00219	5b		 pop	 ebx
  0021a	5d		 pop	 ebp
  0021b	c3		 ret	 0
$LN35@BT_Intern_:
; Line 3293
  0021c	83 fb 01	 cmp	 ebx, 1
  0021f	75 f6		 jne	 SHORT $LN31@BT_Intern_
; Line 3296
  00221	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?g_LevelToRender@@3HA ; g_LevelToRender
  00227	73 ee		 jae	 SHORT $LN31@BT_Intern_
  00229	51		 push	 ecx
; Line 3387
  0022a	e8 00 00 00 00	 call	 ?BT_Intern_RenderSector@@YAXPAUs_BT_Sector@@@Z ; BT_Intern_RenderSector
  0022f	83 c4 04	 add	 esp, 4
  00232	5f		 pop	 edi
  00233	5e		 pop	 esi
  00234	5b		 pop	 ebx
  00235	5d		 pop	 ebp
  00236	c3		 ret	 0
?BT_Intern_RenderTerrainRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KH@Z ENDP ; BT_Intern_RenderTerrainRec
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_UpdateCullBoxesRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z
_TEXT	SEGMENT
_Terrain$ = 8						; size = 4
_Quadtree$ = 12						; size = 4
_Level$ = 16						; size = 4
?BT_Intern_UpdateCullBoxesRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z PROC ; BT_Intern_UpdateCullBoxesRec, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 3241
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b 5d 10	 mov	 ebx, DWORD PTR _Level$[ebp]
  00007	56		 push	 esi
; Line 3243
  00008	8b 75 0c	 mov	 esi, DWORD PTR _Quadtree$[ebp]
  0000b	80 7e 32 00	 cmp	 BYTE PTR [esi+50], 0
  0000f	0f 84 11 01 00
	00		 je	 $LN2@BT_Intern_
  00015	80 7e 1c 00	 cmp	 BYTE PTR [esi+28], 0
  00019	0f 85 07 01 00
	00		 jne	 $LN2@BT_Intern_
; Line 3246
  0001f	85 db		 test	 ebx, ebx
  00021	74 55		 je	 SHORT $LN7@BT_Intern_
; Line 3249
  00023	8b 06		 mov	 eax, DWORD PTR [esi]
  00025	4b		 dec	 ebx
  00026	57		 push	 edi
  00027	8b 7d 08	 mov	 edi, DWORD PTR _Terrain$[ebp]
  0002a	80 78 32 00	 cmp	 BYTE PTR [eax+50], 0
  0002e	74 0b		 je	 SHORT $LN31@BT_Intern_
; Line 3250
  00030	53		 push	 ebx
  00031	50		 push	 eax
  00032	57		 push	 edi
  00033	e8 00 00 00 00	 call	 ?BT_Intern_UpdateCullBoxesRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z ; BT_Intern_UpdateCullBoxesRec
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN31@BT_Intern_:
; Line 3253
  0003b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003e	80 78 32 00	 cmp	 BYTE PTR [eax+50], 0
  00042	74 0b		 je	 SHORT $LN5@BT_Intern_
; Line 3254
  00044	53		 push	 ebx
  00045	50		 push	 eax
  00046	57		 push	 edi
  00047	e8 00 00 00 00	 call	 ?BT_Intern_UpdateCullBoxesRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z ; BT_Intern_UpdateCullBoxesRec
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@BT_Intern_:
; Line 3257
  0004f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00052	80 78 32 00	 cmp	 BYTE PTR [eax+50], 0
  00056	74 0b		 je	 SHORT $LN6@BT_Intern_
; Line 3258
  00058	53		 push	 ebx
  00059	50		 push	 eax
  0005a	57		 push	 edi
  0005b	e8 00 00 00 00	 call	 ?BT_Intern_UpdateCullBoxesRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z ; BT_Intern_UpdateCullBoxesRec
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@BT_Intern_:
; Line 3261
  00063	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00066	80 78 32 00	 cmp	 BYTE PTR [eax+50], 0
  0006a	74 0b		 je	 SHORT $LN40@BT_Intern_
; Line 3262
  0006c	53		 push	 ebx
  0006d	50		 push	 eax
  0006e	57		 push	 edi
  0006f	e8 00 00 00 00	 call	 ?BT_Intern_UpdateCullBoxesRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z ; BT_Intern_UpdateCullBoxesRec
  00074	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN40@BT_Intern_:
  00077	5f		 pop	 edi
$LN7@BT_Intern_:
; Line 3266
  00078	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  0007b	85 c9		 test	 ecx, ecx
  0007d	74 35		 je	 SHORT $LN8@BT_Intern_
; Line 3268
  0007f	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00082	f3 0f 10 40 48	 movss	 xmm0, DWORD PTR [eax+72]
  00087	f3 0f 58 41 10	 addss	 xmm0, DWORD PTR [ecx+16]
  0008c	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  0008f	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0
; Line 3269
  00094	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00097	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0009a	f3 0f 10 40 4c	 movss	 xmm0, DWORD PTR [eax+76]
  0009f	f3 0f 58 41 10	 addss	 xmm0, DWORD PTR [ecx+16]
  000a4	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  000a7	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
; Line 3274
  000ac	c6 46 32 00	 mov	 BYTE PTR [esi+50], 0
  000b0	5e		 pop	 esi
; Line 3276
  000b1	5b		 pop	 ebx
  000b2	5d		 pop	 ebp
  000b3	c3		 ret	 0
$LN8@BT_Intern_:
; Line 3271
  000b4	8b 06		 mov	 eax, DWORD PTR [esi]
  000b6	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000b9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000bc	f3 0f 10 49 10	 movss	 xmm1, DWORD PTR [ecx+16]
  000c1	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  000c4	f3 0f 5f 48 10	 maxss	 xmm1, DWORD PTR [eax+16]
  000c9	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000cc	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000cf	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000d2	f3 0f 10 41 10	 movss	 xmm0, DWORD PTR [ecx+16]
  000d7	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  000da	f3 0f 5f 40 10	 maxss	 xmm0, DWORD PTR [eax+16]
  000df	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  000e2	f3 0f 5f c8	 maxss	 xmm1, xmm0
  000e6	f3 0f 11 48 10	 movss	 DWORD PTR [eax+16], xmm1
; Line 3272
  000eb	8b 06		 mov	 eax, DWORD PTR [esi]
  000ed	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000f0	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f3	f3 0f 10 49 14	 movss	 xmm1, DWORD PTR [ecx+20]
  000f8	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  000fb	f3 0f 5d 48 14	 minss	 xmm1, DWORD PTR [eax+20]
  00100	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00103	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00106	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00109	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  0010e	8b 40 20	 mov	 eax, DWORD PTR [eax+32]
  00111	f3 0f 5d 40 14	 minss	 xmm0, DWORD PTR [eax+20]
  00116	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00119	f3 0f 5d c8	 minss	 xmm1, xmm0
  0011d	f3 0f 11 48 14	 movss	 DWORD PTR [eax+20], xmm1
; Line 3274
  00122	c6 46 32 00	 mov	 BYTE PTR [esi+50], 0
$LN2@BT_Intern_:
; Line 3276
  00126	5e		 pop	 esi
  00127	5b		 pop	 ebx
  00128	5d		 pop	 ebp
  00129	c3		 ret	 0
?BT_Intern_UpdateCullBoxesRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z ENDP ; BT_Intern_UpdateCullBoxesRec
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_CalculateCullingRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K_N@Z
_TEXT	SEGMENT
_Terrain$ = 8						; size = 4
_Quadtree$ = 12						; size = 4
_Level$ = 16						; size = 4
_IntersectingFrustum$ = 20				; size = 1
?BT_Intern_CalculateCullingRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K_N@Z PROC ; BT_Intern_CalculateCullingRec, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 3192
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b 5d 14	 mov	 ebx, DWORD PTR _IntersectingFrustum$[ebp]
  00007	56		 push	 esi
  00008	8b 75 0c	 mov	 esi, DWORD PTR _Quadtree$[ebp]
  0000b	57		 push	 edi
  0000c	8b 7d 10	 mov	 edi, DWORD PTR _Level$[ebp]
$LN20@BT_Intern_:
; Line 3195
  0000f	4f		 dec	 edi
  00010	80 3d 00 00 00
	00 01		 cmp	 BYTE PTR ?g_bRenderTerrainForShadowMap@@3_NA, 1 ; g_bRenderTerrainForShadowMap
  00017	74 2a		 je	 SHORT $LN4@BT_Intern_
; Line 3203
  00019	80 7d 14 01	 cmp	 BYTE PTR _IntersectingFrustum$[ebp], 1
  0001d	c6 46 31 01	 mov	 BYTE PTR [esi+49], 1
  00021	75 20		 jne	 SHORT $LN4@BT_Intern_
; Line 3205
  00023	ff 76 20	 push	 DWORD PTR [esi+32]
  00026	e8 00 00 00 00	 call	 ?BT_Intern_CullBox@@YAHPAUs_BT_CullBox@@@Z ; BT_Intern_CullBox
  0002b	83 c4 04	 add	 esp, 4
; Line 3206
  0002e	84 c0		 test	 al, al
  00030	74 15		 je	 SHORT $LN5@BT_Intern_
; Line 3208
  00032	c6 46 31 00	 mov	 BYTE PTR [esi+49], 0
; Line 3209
  00036	3c 02		 cmp	 al, 2
  00038	75 0d		 jne	 SHORT $LN5@BT_Intern_
; Line 3210
  0003a	c6 45 14 00	 mov	 BYTE PTR _IntersectingFrustum$[ebp], 0
; Line 3212
  0003e	8b 5d 14	 mov	 ebx, DWORD PTR _IntersectingFrustum$[ebp]
  00041	eb 04		 jmp	 SHORT $LN5@BT_Intern_
$LN4@BT_Intern_:
; Line 3219
  00043	c6 46 31 00	 mov	 BYTE PTR [esi+49], 0
$LN5@BT_Intern_:
  00047	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  0004a	85 c0		 test	 eax, eax
  0004c	74 34		 je	 SHORT $LN8@BT_Intern_
  0004e	80 7e 31 00	 cmp	 BYTE PTR [esi+49], 0
  00052	75 2e		 jne	 SHORT $LN8@BT_Intern_
; Line 3222
  00054	53		 push	 ebx
  00055	57		 push	 edi
  00056	ff 36		 push	 DWORD PTR [esi]
  00058	ff 75 08	 push	 DWORD PTR _Terrain$[ebp]
  0005b	e8 00 00 00 00	 call	 ?BT_Intern_CalculateCullingRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K_N@Z ; BT_Intern_CalculateCullingRec
; Line 3225
  00060	53		 push	 ebx
  00061	57		 push	 edi
  00062	ff 76 04	 push	 DWORD PTR [esi+4]
  00065	ff 75 08	 push	 DWORD PTR _Terrain$[ebp]
  00068	e8 00 00 00 00	 call	 ?BT_Intern_CalculateCullingRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K_N@Z ; BT_Intern_CalculateCullingRec
; Line 3228
  0006d	53		 push	 ebx
  0006e	57		 push	 edi
  0006f	ff 76 08	 push	 DWORD PTR [esi+8]
  00072	ff 75 08	 push	 DWORD PTR _Terrain$[ebp]
  00075	e8 00 00 00 00	 call	 ?BT_Intern_CalculateCullingRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K_N@Z ; BT_Intern_CalculateCullingRec
; Line 3231
  0007a	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]
  0007d	83 c4 30	 add	 esp, 48			; 00000030H
  00080	eb 8d		 jmp	 SHORT $LN20@BT_Intern_
$LN8@BT_Intern_:
  00082	5f		 pop	 edi
; Line 3233
  00083	5e		 pop	 esi
  00084	5b		 pop	 ebx
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
?BT_Intern_CalculateCullingRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K_N@Z ENDP ; BT_Intern_CalculateCullingRec
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_FixLODSeams@@YAXPAUs_BT_terrain@@@Z
_TEXT	SEGMENT
tv660 = -20						; size = 4
_Sector$1$ = -16					; size = 4
_Span$1$ = -12						; size = 4
tv635 = -8						; size = 4
_LODLevel$1$ = -1					; size = 1
tv657 = 8						; size = 4
_Terrain$ = 8						; size = 4
?BT_Intern_FixLODSeams@@YAXPAUs_BT_terrain@@@Z PROC	; BT_Intern_FixLODSeams, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 3064
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	57		 push	 edi
; Line 3066
  00007	8b 7d 08	 mov	 edi, DWORD PTR _Terrain$[ebp]
  0000a	32 c0		 xor	 al, al
  0000c	88 45 ff	 mov	 BYTE PTR _LODLevel$1$[ebp], al
  0000f	38 47 32	 cmp	 BYTE PTR [edi+50], al
  00012	0f 86 55 01 00
	00		 jbe	 $LN3@BT_Intern_
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL4@BT_Intern_:
; Line 3068
  00020	0f b6 c0	 movzx	 eax, al
  00023	bb 01 00 00 00	 mov	 ebx, 1
  00028	8b c8		 mov	 ecx, eax
  0002a	89 45 08	 mov	 DWORD PTR tv657[ebp], eax
  0002d	d3 e3		 shl	 ebx, cl
; Line 3069
  0002f	33 d2		 xor	 edx, edx
  00031	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  00034	8d 04 c0	 lea	 eax, DWORD PTR [eax+eax*8]
  00037	89 5d f4	 mov	 DWORD PTR _Span$1$[ebp], ebx
  0003a	c1 e0 02	 shl	 eax, 2
  0003d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _Sector$1$[ebp], 0
  00044	89 45 ec	 mov	 DWORD PTR tv660[ebp], eax
  00047	66 3b 54 08 0a	 cmp	 dx, WORD PTR [eax+ecx+10]
  0004c	0f 83 08 01 00
	00		 jae	 $LN2@BT_Intern_
  00052	89 55 f8	 mov	 DWORD PTR tv635[ebp], edx
$LL7@BT_Intern_:
; Line 3071
  00055	8b 44 08 10	 mov	 eax, DWORD PTR [eax+ecx+16]
; Line 3072
  00059	8b 4c 10 7c	 mov	 ecx, DWORD PTR [eax+edx+124]
  0005d	03 c2		 add	 eax, edx
  0005f	85 c9		 test	 ecx, ecx
  00061	0f 84 cc 00 00
	00		 je	 $LN5@BT_Intern_
; Line 3074
  00067	80 79 31 00	 cmp	 BYTE PTR [ecx+49], 0
  0006b	0f 85 c2 00 00
	00		 jne	 $LN5@BT_Intern_
  00071	80 79 30 01	 cmp	 BYTE PTR [ecx+48], 1
  00075	0f 85 b8 00 00
	00		 jne	 $LN5@BT_Intern_
; Line 3079
  0007b	0f b7 70 0a	 movzx	 esi, WORD PTR [eax+10]
  0007f	0f b7 50 08	 movzx	 edx, WORD PTR [eax+8]
  00083	0f af f3	 imul	 esi, ebx
  00086	0f af d3	 imul	 edx, ebx
; Line 3082
  00089	85 f6		 test	 esi, esi
  0008b	74 21		 je	 SHORT $LN12@BT_Intern_
; Line 3084
  0008d	8b 4f 58	 mov	 ecx, DWORD PTR [edi+88]
; Line 3087
  00090	bb 00 00 00 00	 mov	 ebx, 0
  00095	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  00098	8b 4c b1 fc	 mov	 ecx, DWORD PTR [ecx+esi*4-4]
  0009c	2b 4d 08	 sub	 ecx, DWORD PTR tv657[ebp]
  0009f	0f 49 d9	 cmovns	 ebx, ecx
  000a2	39 58 70	 cmp	 DWORD PTR [eax+112], ebx
  000a5	74 07		 je	 SHORT $LN12@BT_Intern_
; Line 3089
  000a7	89 58 70	 mov	 DWORD PTR [eax+112], ebx
; Line 3090
  000aa	c6 40 69 01	 mov	 BYTE PTR [eax+105], 1
$LN12@BT_Intern_:
; Line 3095
  000ae	85 d2		 test	 edx, edx
  000b0	74 21		 je	 SHORT $LN15@BT_Intern_
; Line 3097
  000b2	8b 4f 58	 mov	 ecx, DWORD PTR [edi+88]
; Line 3100
  000b5	bb 00 00 00 00	 mov	 ebx, 0
  000ba	8b 4c 91 fc	 mov	 ecx, DWORD PTR [ecx+edx*4-4]
  000be	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  000c1	2b 4d 08	 sub	 ecx, DWORD PTR tv657[ebp]
  000c4	0f 49 d9	 cmovns	 ebx, ecx
  000c7	39 58 6c	 cmp	 DWORD PTR [eax+108], ebx
  000ca	74 07		 je	 SHORT $LN15@BT_Intern_
; Line 3102
  000cc	89 58 6c	 mov	 DWORD PTR [eax+108], ebx
; Line 3103
  000cf	c6 40 68 01	 mov	 BYTE PTR [eax+104], 1
$LN15@BT_Intern_:
; Line 3108
  000d3	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  000d6	8b 5d f4	 mov	 ebx, DWORD PTR _Span$1$[ebp]
  000d9	03 de		 add	 ebx, esi
  000db	0f b7 49 14	 movzx	 ecx, WORD PTR [ecx+20]
  000df	3b d9		 cmp	 ebx, ecx
  000e1	73 20		 jae	 SHORT $LN18@BT_Intern_
; Line 3110
  000e3	8b 4f 58	 mov	 ecx, DWORD PTR [edi+88]
  000e6	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  000e9	8b 0c 99	 mov	 ecx, DWORD PTR [ecx+ebx*4]
; Line 3113
  000ec	bb 00 00 00 00	 mov	 ebx, 0
  000f1	2b 4d 08	 sub	 ecx, DWORD PTR tv657[ebp]
  000f4	0f 49 d9	 cmovns	 ebx, ecx
  000f7	39 58 74	 cmp	 DWORD PTR [eax+116], ebx
  000fa	74 07		 je	 SHORT $LN18@BT_Intern_
; Line 3115
  000fc	89 58 74	 mov	 DWORD PTR [eax+116], ebx
; Line 3116
  000ff	c6 40 6a 01	 mov	 BYTE PTR [eax+106], 1
$LN18@BT_Intern_:
; Line 3121
  00103	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  00106	8b 5d f4	 mov	 ebx, DWORD PTR _Span$1$[ebp]
  00109	03 d3		 add	 edx, ebx
  0010b	0f b7 49 14	 movzx	 ecx, WORD PTR [ecx+20]
  0010f	3b d1		 cmp	 edx, ecx
  00111	73 20		 jae	 SHORT $LN5@BT_Intern_
; Line 3123
  00113	8b 4f 58	 mov	 ecx, DWORD PTR [edi+88]
  00116	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
; Line 3126
  00119	ba 00 00 00 00	 mov	 edx, 0
  0011e	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  00121	2b 4d 08	 sub	 ecx, DWORD PTR tv657[ebp]
  00124	0f 49 d1	 cmovns	 edx, ecx
  00127	39 50 78	 cmp	 DWORD PTR [eax+120], edx
  0012a	74 07		 je	 SHORT $LN5@BT_Intern_
; Line 3128
  0012c	89 50 78	 mov	 DWORD PTR [eax+120], edx
; Line 3129
  0012f	c6 40 6b 01	 mov	 BYTE PTR [eax+107], 1
$LN5@BT_Intern_:
; Line 3069
  00133	8b 4f 44	 mov	 ecx, DWORD PTR [edi+68]
  00136	8b 45 ec	 mov	 eax, DWORD PTR tv660[ebp]
  00139	8b 55 f0	 mov	 edx, DWORD PTR _Sector$1$[ebp]
  0013c	81 45 f8 94 00
	00 00		 add	 DWORD PTR tv635[ebp], 148 ; 00000094H
  00143	42		 inc	 edx
  00144	89 55 f0	 mov	 DWORD PTR _Sector$1$[ebp], edx
  00147	0f b7 44 01 0a	 movzx	 eax, WORD PTR [ecx+eax+10]
  0014c	3b d0		 cmp	 edx, eax
  0014e	8b 55 f8	 mov	 edx, DWORD PTR tv635[ebp]
  00151	8b 45 ec	 mov	 eax, DWORD PTR tv660[ebp]
  00154	0f 82 fb fe ff
	ff		 jb	 $LL7@BT_Intern_
$LN2@BT_Intern_:
; Line 3066
  0015a	8a 45 ff	 mov	 al, BYTE PTR _LODLevel$1$[ebp]
  0015d	fe c0		 inc	 al
  0015f	88 45 ff	 mov	 BYTE PTR _LODLevel$1$[ebp], al
  00162	3a 47 32	 cmp	 al, BYTE PTR [edi+50]
  00165	0f 82 b5 fe ff
	ff		 jb	 $LL4@BT_Intern_
  0016b	5e		 pop	 esi
  0016c	5b		 pop	 ebx
$LN3@BT_Intern_:
  0016d	5f		 pop	 edi
; Line 3136
  0016e	8b e5		 mov	 esp, ebp
  00170	5d		 pop	 ebp
  00171	c3		 ret	 0
?BT_Intern_FixLODSeams@@YAXPAUs_BT_terrain@@@Z ENDP	; BT_Intern_FixLODSeams
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_CalculateLODLevelsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KE@Z
_TEXT	SEGMENT
tv611 = -4						; size = 4
_Terrain$ = 8						; size = 4
_Quadtree$ = 12						; size = 4
tv612 = 16						; size = 4
_Level$ = 16						; size = 4
_LODLevelToDraw$ = 20					; size = 1
?BT_Intern_CalculateLODLevelsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KE@Z PROC ; BT_Intern_CalculateLODLevelsRec, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 3016
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	8b 45 10	 mov	 eax, DWORD PTR _Level$[ebp]
  00007	56		 push	 esi
  00008	8b 75 0c	 mov	 esi, DWORD PTR _Quadtree$[ebp]
  0000b	57		 push	 edi
  0000c	8b 7d 08	 mov	 edi, DWORD PTR _Terrain$[ebp]
  0000f	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  00012	8d 04 c0	 lea	 eax, DWORD PTR [eax+eax*8]
  00015	c1 e0 02	 shl	 eax, 2
  00018	89 45 fc	 mov	 DWORD PTR tv611[ebp], eax
$LN42@BT_Intern_:
; Line 3021
  0001b	83 7e 18 00	 cmp	 DWORD PTR [esi+24], 0
  0001f	0f 57 e4	 xorps	 xmm4, xmm4
  00022	8a 55 14	 mov	 dl, BYTE PTR _LODLevelToDraw$[ebp]
  00025	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@43000000
  0002d	89 4d 10	 mov	 DWORD PTR tv612[ebp], ecx
  00030	c6 46 30 00	 mov	 BYTE PTR [esi+48], 0
  00034	0f 84 05 01 00
	00		 je	 $LN3@BT_Intern_
  0003a	84 d2		 test	 dl, dl
  0003c	0f 85 fd 00 00
	00		 jne	 $LN3@BT_Intern_
; Line 3567
  00042	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0004a	f3 0f 5e 47 34	 divss	 xmm0, DWORD PTR [edi+52]
  0004f	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
; Line 3023
  00052	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
; Line 3567
  00055	f3 0f 10 35 20
	74 00 00	 movss	 xmm6, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29728
  0005d	f3 0f 5c b0 84
	00 00 00	 subss	 xmm6, DWORD PTR [eax+132]
; Line 3568
  00065	f3 0f 10 2d 24
	74 00 00	 movss	 xmm5, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29732
  0006d	f3 0f 5c a8 88
	00 00 00	 subss	 xmm5, DWORD PTR [eax+136]
; Line 3569
  00075	f3 0f 10 3d 28
	74 00 00	 movss	 xmm7, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29736
  0007d	f3 0f 5c b8 8c
	00 00 00	 subss	 xmm7, DWORD PTR [eax+140]
; Line 3572
  00085	f3 0f 10 51 08	 movss	 xmm2, DWORD PTR [ecx+8]
; Line 3576
  0008a	f3 0f 10 19	 movss	 xmm3, DWORD PTR [ecx]
  0008e	f3 0f 59 f0	 mulss	 xmm6, xmm0
  00092	f3 0f 59 e8	 mulss	 xmm5, xmm0
  00096	f3 0f 59 f1	 mulss	 xmm6, xmm1
  0009a	f3 0f 59 f8	 mulss	 xmm7, xmm0
  0009e	f3 0f 59 e9	 mulss	 xmm5, xmm1
  000a2	f3 0f 5c d6	 subss	 xmm2, xmm6
  000a6	f3 0f 59 f9	 mulss	 xmm7, xmm1
  000aa	f3 0f 10 49 14	 movss	 xmm1, DWORD PTR [ecx+20]
; Line 3581
  000af	0f 2f d4	 comiss	 xmm2, xmm4
  000b2	f3 0f 5c cd	 subss	 xmm1, xmm5
  000b6	f3 0f 5c 69 10	 subss	 xmm5, DWORD PTR [ecx+16]
  000bb	f3 0f 5c df	 subss	 xmm3, xmm7
  000bf	f3 0f 5c 79 04	 subss	 xmm7, DWORD PTR [ecx+4]
  000c4	76 0d		 jbe	 SHORT $LN13@BT_Intern_
; Line 3582
  000c6	f3 0f 10 35 00
	00 00 00	 movss	 xmm6, DWORD PTR __xmm@80000000800000008000000080000000
  000ce	0f 57 d6	 xorps	 xmm2, xmm6
  000d1	eb 14		 jmp	 SHORT $LN16@BT_Intern_
$LN13@BT_Intern_:
; Line 3573
  000d3	0f 28 d6	 movaps	 xmm2, xmm6
; Line 3584
  000d6	f3 0f 10 35 00
	00 00 00	 movss	 xmm6, DWORD PTR __xmm@80000000800000008000000080000000
  000de	f3 0f 5c 51 0c	 subss	 xmm2, DWORD PTR [ecx+12]
  000e3	f3 0f 5f d4	 maxss	 xmm2, xmm4
$LN16@BT_Intern_:
; Line 3591
  000e7	0f 2f cc	 comiss	 xmm1, xmm4
  000ea	76 05		 jbe	 SHORT $LN17@BT_Intern_
; Line 3592
  000ec	0f 57 ce	 xorps	 xmm1, xmm6
  000ef	eb 07		 jmp	 SHORT $LN20@BT_Intern_
$LN17@BT_Intern_:
; Line 3593
  000f1	0f 28 cd	 movaps	 xmm1, xmm5
  000f4	f3 0f 5f cc	 maxss	 xmm1, xmm4
$LN20@BT_Intern_:
; Line 3601
  000f8	0f 2f dc	 comiss	 xmm3, xmm4
  000fb	76 05		 jbe	 SHORT $LN21@BT_Intern_
; Line 3602
  000fd	0f 57 de	 xorps	 xmm3, xmm6
  00100	eb 07		 jmp	 SHORT $LN24@BT_Intern_
$LN21@BT_Intern_:
; Line 3603
  00102	0f 28 df	 movaps	 xmm3, xmm7
  00105	f3 0f 5f dc	 maxss	 xmm3, xmm4
$LN24@BT_Intern_:
; Line 3023
  00109	8b 4d fc	 mov	 ecx, DWORD PTR tv611[ebp]
  0010c	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
; Line 3610
  0010f	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00113	f3 0f 59 d2	 mulss	 xmm2, xmm2
; Line 3023
  00117	f3 0f 10 44 08
	0c		 movss	 xmm0, DWORD PTR [eax+ecx+12]
  0011d	8b 4d 10	 mov	 ecx, DWORD PTR tv612[ebp]
; Line 3610
  00120	f3 0f 58 ca	 addss	 xmm1, xmm2
  00124	f3 0f 59 db	 mulss	 xmm3, xmm3
; Line 3023
  00128	f3 0f 59 c0	 mulss	 xmm0, xmm0
; Line 3610
  0012c	f3 0f 58 cb	 addss	 xmm1, xmm3
; Line 3023
  00130	0f 2f c8	 comiss	 xmm1, xmm0
  00133	76 0a		 jbe	 SHORT $LN3@BT_Intern_
; Line 3026
  00135	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  00138	c6 46 30 01	 mov	 BYTE PTR [esi+48], 1
  0013c	88 55 14	 mov	 BYTE PTR _LODLevelToDraw$[ebp], dl
$LN3@BT_Intern_:
; Line 3031
  0013f	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00142	85 c0		 test	 eax, eax
  00144	74 5f		 je	 SHORT $LN4@BT_Intern_
; Line 3034
  00146	8b 06		 mov	 eax, DWORD PTR [esi]
  00148	80 78 31 00	 cmp	 BYTE PTR [eax+49], 0
  0014c	75 11		 jne	 SHORT $LN6@BT_Intern_
; Line 3035
  0014e	ff 75 14	 push	 DWORD PTR _LODLevelToDraw$[ebp]
  00151	51		 push	 ecx
  00152	50		 push	 eax
  00153	57		 push	 edi
  00154	e8 00 00 00 00	 call	 ?BT_Intern_CalculateLODLevelsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KE@Z ; BT_Intern_CalculateLODLevelsRec
  00159	8b 4d 10	 mov	 ecx, DWORD PTR tv612[ebp]
  0015c	83 c4 10	 add	 esp, 16			; 00000010H
$LN6@BT_Intern_:
; Line 3038
  0015f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00162	80 78 31 00	 cmp	 BYTE PTR [eax+49], 0
  00166	75 0e		 jne	 SHORT $LN7@BT_Intern_
; Line 3039
  00168	ff 75 14	 push	 DWORD PTR _LODLevelToDraw$[ebp]
  0016b	51		 push	 ecx
  0016c	50		 push	 eax
  0016d	57		 push	 edi
  0016e	e8 00 00 00 00	 call	 ?BT_Intern_CalculateLODLevelsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KE@Z ; BT_Intern_CalculateLODLevelsRec
  00173	83 c4 10	 add	 esp, 16			; 00000010H
$LN7@BT_Intern_:
; Line 3042
  00176	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00179	80 78 31 00	 cmp	 BYTE PTR [eax+49], 0
  0017d	75 10		 jne	 SHORT $LN8@BT_Intern_
; Line 3043
  0017f	ff 75 14	 push	 DWORD PTR _LODLevelToDraw$[ebp]
  00182	ff 75 10	 push	 DWORD PTR tv612[ebp]
  00185	50		 push	 eax
  00186	57		 push	 edi
  00187	e8 00 00 00 00	 call	 ?BT_Intern_CalculateLODLevelsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KE@Z ; BT_Intern_CalculateLODLevelsRec
  0018c	83 c4 10	 add	 esp, 16			; 00000010H
$LN8@BT_Intern_:
; Line 3046
  0018f	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]
  00192	80 7e 31 00	 cmp	 BYTE PTR [esi+49], 0
  00196	75 26		 jne	 SHORT $LN10@BT_Intern_
; Line 3047
  00198	8b 4d 10	 mov	 ecx, DWORD PTR tv612[ebp]
  0019b	83 6d fc 24	 sub	 DWORD PTR tv611[ebp], 36 ; 00000024H
  0019f	49		 dec	 ecx
  001a0	e9 76 fe ff ff	 jmp	 $LN42@BT_Intern_
$LN4@BT_Intern_:
; Line 3049
  001a5	0f b6 4e 15	 movzx	 ecx, BYTE PTR [esi+21]
  001a9	8b 47 58	 mov	 eax, DWORD PTR [edi+88]
  001ac	0f b6 76 16	 movzx	 esi, BYTE PTR [esi+22]
  001b0	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  001b3	0f b6 ca	 movzx	 ecx, dl
  001b6	39 0c b0	 cmp	 DWORD PTR [eax+esi*4], ecx
  001b9	74 03		 je	 SHORT $LN10@BT_Intern_
; Line 3051
  001bb	89 0c b0	 mov	 DWORD PTR [eax+esi*4], ecx
$LN10@BT_Intern_:
  001be	5f		 pop	 edi
; Line 3055
  001bf	5e		 pop	 esi
  001c0	8b e5		 mov	 esp, ebp
  001c2	5d		 pop	 ebp
  001c3	c3		 ret	 0
?BT_Intern_CalculateLODLevelsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KE@Z ENDP ; BT_Intern_CalculateLODLevelsRec
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_AddToInstructionQueue@@YAXDD@Z
_TEXT	SEGMENT
_Instruction$ = 8					; size = 1
_Data$ = 12						; size = 1
?BT_Intern_AddToInstructionQueue@@YAXDD@Z PROC		; BT_Intern_AddToInstructionQueue, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 2342
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 2344
  00003	8b 15 5c 74 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
  00009	8d 42 02	 lea	 eax, DWORD PTR [edx+2]
  0000c	3b 05 58 74 00
	00		 cmp	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29784
  00012	73 37		 jae	 SHORT $LN2@BT_Intern_
; Line 2346
  00014	8b 0d 54 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  0001a	8a 45 08	 mov	 al, BYTE PTR _Instruction$[ebp]
  0001d	88 04 11	 mov	 BYTE PTR [ecx+edx], al
; Line 2347
  00020	8b 15 5c 74 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
  00026	8b 0d 54 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  0002c	8a 45 0c	 mov	 al, BYTE PTR _Data$[ebp]
  0002f	88 44 11 01	 mov	 BYTE PTR [ecx+edx+1], al
; Line 2348
  00033	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
; Line 2349
  00039	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  0003e	83 c1 02	 add	 ecx, 2
  00041	89 0d 5c 74 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788, ecx
  00047	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0
$LN2@BT_Intern_:
; Line 2351
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?BT_Intern_AddToInstructionQueue@@YAXDD@Z ENDP		; BT_Intern_AddToInstructionQueue
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetLODLevelInfo@@YAPAXKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_LODLevelID$ = 12					; size = 4
?BT_GetLODLevelInfo@@YAPAXKK@Z PROC			; BT_GetLODLevelInfo, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 2121
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 2122
  00003	6b 55 08 74	 imul	 edx, DWORD PTR _terrainid$[ebp], 116
  00007	8b 45 0c	 mov	 eax, DWORD PTR _LODLevelID$[ebp]
  0000a	8d 0c c0	 lea	 ecx, DWORD PTR [eax+eax*8]
  0000d	8b 82 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+68]
  00013	8b 44 88 20	 mov	 eax, DWORD PTR [eax+ecx*4+32]
; Line 2123
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
?BT_GetLODLevelInfo@@YAPAXKK@Z ENDP			; BT_GetLODLevelInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetTerrainInfo@@YAPAXK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
?BT_GetTerrainInfo@@YAPAXK@Z PROC			; BT_GetTerrainInfo, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 2110
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 2111
  00003	6b 45 08 74	 imul	 eax, DWORD PTR _terrainid$[ebp], 116
  00007	8b 80 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[eax+112]
; Line 2112
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?BT_GetTerrainInfo@@YAPAXK@Z ENDP			; BT_GetTerrainInfo
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_TerrainExist@@YA_NK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
?BT_Intern_TerrainExist@@YA_NK@Z PROC			; BT_Intern_TerrainExist, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 3664
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
  00006	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00009	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  0000e	77 0b		 ja	 SHORT $LN2@BT_Intern_
; Line 3669
  00010	6b c1 74	 imul	 eax, ecx, 116
  00013	8a 80 00 00 00
	00		 mov	 al, BYTE PTR ?BT_Main@@3Us_BT_main@@A[eax]
; Line 3672
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
$LN2@BT_Intern_:
; Line 3671
  0001b	32 c0		 xor	 al, al
; Line 3672
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?BT_Intern_TerrainExist@@YA_NK@Z ENDP			; BT_Intern_TerrainExist
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_Render@@YAXXZ
_TEXT	SEGMENT
_TerrainID$1$ = -188					; size = 4
_CameraID$1$ = -184					; size = 4
_bIntersectingCull$2 = -184				; size = 1
_bdChangePerTerrsainChunkBuffer$3 = -180		; size = 24
_bdChangePerTerrsainChunkBuffer$4 = -156		; size = 24
_vp$5 = -132						; size = 24
_ClipMatrix$6 = -108					; size = 64
_vp$7 = -44						; size = 24
$T8 = -32						; size = 12
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?BT_Intern_Render@@YAXXZ PROC				; BT_Intern_Render, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 2145
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?BT_Intern_Render@@YAXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec b0 00 00
	00		 sub	 esp, 176		; 000000b0H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	89 45 ec	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	50		 push	 eax
  00025	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00028	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0002e	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
; Line 2147
  00031	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?g_bSkipTerrainRender@@3_NA, 0 ; g_bSkipTerrainRender
  00038	74 14		 je	 SHORT $LN11@BT_Intern_
; Line 2149
  0003a	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  0003f	c6 00 00	 mov	 BYTE PTR [eax], 0
; Line 2151
  00042	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?g_bSkipTerrainRender@@3_NA, 0 ; g_bSkipTerrainRender
; Line 2152
  00049	e9 df 02 00 00	 jmp	 $LN99@BT_Intern_
$LN11@BT_Intern_:
; Line 2158
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGlob@@3PAUGlobStruct@@A ; g_pGlob
  00053	83 b8 e4 02 00
	00 20		 cmp	 DWORD PTR [eax+740], 32	; 00000020H
  0005a	0f 8d d5 00 00
	00		 jge	 $LN13@BT_Intern_
; Line 2161
  00060	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?g_bRenderTerrainForShadowMap@@3_NA, 0 ; g_bRenderTerrainForShadowMap
  00067	0f 85 c8 00 00
	00		 jne	 $LN13@BT_Intern_
; Line 2163
  0006d	6a 00		 push	 0
  0006f	e8 00 00 00 00	 call	 ?GetCameraInternalData@@YAPAXH@Z ; GetCameraInternalData
  00074	8b d0		 mov	 edx, eax
; Line 2172
  00076	6a 00		 push	 0
  00078	8b 8a c8 00 00
	00		 mov	 ecx, DWORD PTR [edx+200]
  0007e	66 0f 6e c1	 movd	 xmm0, ecx
  00082	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00086	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00089	f2 0f 58 04 cd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  00092	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00096	f3 0f 11 45 d4	 movss	 DWORD PTR _vp$7[ebp], xmm0
  0009b	8b 82 cc 00 00
	00		 mov	 eax, DWORD PTR [edx+204]
  000a1	66 0f 6e c0	 movd	 xmm0, eax
  000a5	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000a9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000ac	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  000b5	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000b9	f3 0f 11 45 d8	 movss	 DWORD PTR _vp$7[ebp+4], xmm0
  000be	8b 82 d0 00 00
	00		 mov	 eax, DWORD PTR [edx+208]
  000c4	66 0f 6e c0	 movd	 xmm0, eax
  000c8	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000cc	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000cf	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  000d8	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000dc	f3 0f 11 45 dc	 movss	 DWORD PTR _vp$7[ebp+8], xmm0
  000e1	8b 82 d4 00 00
	00		 mov	 eax, DWORD PTR [edx+212]
  000e7	66 0f 6e c0	 movd	 xmm0, eax
  000eb	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000ef	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000f2	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  000fb	8d 45 d4	 lea	 eax, DWORD PTR _vp$7[ebp]
  000fe	50		 push	 eax
  000ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGlob@@3PAUGlobStruct@@A ; g_pGlob
  00104	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00108	f3 0f 11 45 e0	 movss	 DWORD PTR _vp$7[ebp+12], xmm0
  0010d	f3 0f 10 82 d8
	00 00 00	 movss	 xmm0, DWORD PTR [edx+216]
  00115	f3 0f 11 45 e4	 movss	 DWORD PTR _vp$7[ebp+16], xmm0
  0011a	f3 0f 10 82 dc
	00 00 00	 movss	 xmm0, DWORD PTR [edx+220]
  00122	f3 0f 11 45 e8	 movss	 DWORD PTR _vp$7[ebp+20], xmm0
  00127	ff b0 1c 03 00
	00		 push	 DWORD PTR [eax+796]
  0012d	e8 00 00 00 00	 call	 ?SetupSetViewport@@YAXHPAUD3D11_VIEWPORT@@PAUID3D11Texture2D@@@Z ; SetupSetViewport
  00132	83 c4 10	 add	 esp, 16			; 00000010H
$LN13@BT_Intern_:
; Line 2182
  00135	80 3d 61 74 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29793, 1
  0013c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 2362
  00143	c7 05 a8 73 00
	00 23 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 35 ; 00000023H
; Line 2365
  0014d	c7 05 2c 74 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29740, 0
; Line 2366
  00157	c7 05 30 74 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29744, 0
; Line 2367
  00161	c7 05 34 74 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29748, 0
; Line 2182
  0016b	0f 85 7d 01 00
	00		 jne	 $LN3@BT_Intern_
; Line 2185
  00171	33 db		 xor	 ebx, ebx
$LN100@BT_Intern_:
  00173	89 9d 48 ff ff
	ff		 mov	 DWORD PTR _CameraID$1$[ebp], ebx
  00179	83 fb 20	 cmp	 ebx, 32			; 00000020H
  0017c	0f 83 6c 01 00
	00		 jae	 $LN3@BT_Intern_
; Line 2187
  00182	53		 push	 ebx
  00183	e8 00 00 00 00	 call	 ?GetCameraInternalData@@YAPAXH@Z ; GetCameraInternalData
  00188	83 c4 04	 add	 esp, 4
  0018b	85 c0		 test	 eax, eax
  0018d	0f 84 55 01 00
	00		 je	 $LN2@BT_Intern_
; Line 2344
  00193	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
  00199	8d 41 02	 lea	 eax, DWORD PTR [ecx+2]
  0019c	3b 05 58 74 00
	00		 cmp	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29784
  001a2	73 36		 jae	 SHORT $LN44@BT_Intern_
; Line 2346
  001a4	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  001a9	c6 04 01 01	 mov	 BYTE PTR [ecx+eax], 1
; Line 2347
  001ad	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
  001b3	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  001b8	88 5c 01 01	 mov	 BYTE PTR [ecx+eax+1], bl
; Line 2348
  001bc	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
; Line 2349
  001c2	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  001c7	83 c1 02	 add	 ecx, 2
  001ca	89 0d 5c 74 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788, ecx
  001d0	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  001d4	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
$LN44@BT_Intern_:
; Line 2193
  001da	bb 01 00 00 00	 mov	 ebx, 1
  001df	ba 74 00 00 00	 mov	 edx, 116		; 00000074H
  001e4	89 9d 44 ff ff
	ff		 mov	 DWORD PTR _TerrainID$1$[ebp], ebx
  001ea	be 00 00 00 00	 mov	 esi, OFFSET ?BT_Main@@3Us_BT_main@@A
  001ef	90		 npad	 1
$LL7@BT_Intern_:
; Line 2196
  001f0	80 3c 32 01	 cmp	 BYTE PTR [edx+esi], 1
  001f4	0f 85 d2 00 00
	00		 jne	 $LN5@BT_Intern_
; Line 2344
  001fa	8d 41 02	 lea	 eax, DWORD PTR [ecx+2]
  001fd	3b 05 58 74 00
	00		 cmp	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29784
  00203	73 36		 jae	 SHORT $LN91@BT_Intern_
; Line 2346
  00205	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  0020a	c6 04 01 03	 mov	 BYTE PTR [ecx+eax], 3
; Line 2347
  0020e	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
  00214	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  00219	88 5c 01 01	 mov	 BYTE PTR [ecx+eax+1], bl
; Line 2348
  0021d	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
; Line 2349
  00223	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  00228	83 c1 02	 add	 ecx, 2
  0022b	89 0d 5c 74 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788, ecx
  00231	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  00235	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
$LN91@BT_Intern_:
; Line 2202
  0023b	80 ba 32 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+50], 1
  00242	76 41		 jbe	 SHORT $LN50@BT_Intern_
; Line 2344
  00244	8d 41 02	 lea	 eax, DWORD PTR [ecx+2]
  00247	3b 05 58 74 00
	00		 cmp	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29784
  0024d	73 36		 jae	 SHORT $LN50@BT_Intern_
; Line 2346
  0024f	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  00254	c6 04 01 04	 mov	 BYTE PTR [ecx+eax], 4
; Line 2347
  00258	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
  0025e	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  00263	88 5c 01 01	 mov	 BYTE PTR [ecx+eax+1], bl
; Line 2348
  00267	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
; Line 2349
  0026d	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  00272	83 c1 02	 add	 ecx, 2
  00275	89 0d 5c 74 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788, ecx
  0027b	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  0027f	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
$LN50@BT_Intern_:
; Line 2344
  00285	8d 41 02	 lea	 eax, DWORD PTR [ecx+2]
  00288	3b 05 58 74 00
	00		 cmp	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29784
  0028e	73 36		 jae	 SHORT $LN97@BT_Intern_
; Line 2346
  00290	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  00295	c6 04 01 05	 mov	 BYTE PTR [ecx+eax], 5
; Line 2347
  00299	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
  0029f	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  002a4	88 5c 01 01	 mov	 BYTE PTR [ecx+eax+1], bl
; Line 2348
  002a8	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
; Line 2349
  002ae	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  002b3	83 c1 02	 add	 ecx, 2
  002b6	89 0d 5c 74 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788, ecx
  002bc	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  002c0	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
$LN97@BT_Intern_:
; Line 2193
  002c6	8b 9d 44 ff ff
	ff		 mov	 ebx, DWORD PTR _TerrainID$1$[ebp]
$LN5@BT_Intern_:
  002cc	43		 inc	 ebx
  002cd	83 c2 74	 add	 edx, 116		; 00000074H
  002d0	89 9d 44 ff ff
	ff		 mov	 DWORD PTR _TerrainID$1$[ebp], ebx
  002d6	81 fa 8c 73 00
	00		 cmp	 edx, 29580		; 0000738cH
  002dc	0f 82 0e ff ff
	ff		 jb	 $LL7@BT_Intern_
  002e2	8b 9d 48 ff ff
	ff		 mov	 ebx, DWORD PTR _CameraID$1$[ebp]
$LN2@BT_Intern_:
; Line 2185
  002e8	43		 inc	 ebx
  002e9	e9 85 fe ff ff	 jmp	 $LN100@BT_Intern_
$LN3@BT_Intern_:
; Line 2217
  002ee	33 f6		 xor	 esi, esi
$LL10@BT_Intern_:
; Line 2220
  002f0	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  002f5	8a 0c 30	 mov	 cl, BYTE PTR [eax+esi]
  002f8	80 f9 01	 cmp	 cl, 1
  002fb	75 56		 jne	 SHORT $LN19@BT_Intern_
; Line 2223
  002fd	0f b6 44 30 01	 movzx	 eax, BYTE PTR [eax+esi+1]
; Line 2227
  00302	50		 push	 eax
  00303	a3 00 00 00 00	 mov	 DWORD PTR ?g_CurrentTerrainCameraID@@3KA, eax ; g_CurrentTerrainCameraID
  00308	e8 00 00 00 00	 call	 ?GetCameraInternalData@@YAPAXH@Z ; GetCameraInternalData
  0030d	a3 b0 73 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29616, eax
; Line 2228
  00312	c6 05 b4 73 00
	00 00		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29620, 0
$LN101@BT_Intern_:
; Line 2323
  00319	83 c4 04	 add	 esp, 4
$LN57@BT_Intern_:
  0031c	83 c6 02	 add	 esi, 2
$LN8@BT_Intern_:
  0031f	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  00324	80 3c 30 00	 cmp	 BYTE PTR [eax+esi], 0
  00328	75 c6		 jne	 SHORT $LL10@BT_Intern_
; Line 2326
  0032a	c6 00 00	 mov	 BYTE PTR [eax], 0
$LN99@BT_Intern_:
; Line 2333
  0032d	c7 05 5c 74 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788, 0
$LN37@BT_Intern_:
  00337	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0033a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00341	59		 pop	 ecx
  00342	5f		 pop	 edi
  00343	5e		 pop	 esi
  00344	5b		 pop	 ebx
  00345	8b 4d ec	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00348	33 cd		 xor	 ecx, ebp
  0034a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0034f	8b e5		 mov	 esp, ebp
  00351	5d		 pop	 ebp
  00352	c3		 ret	 0
$LN19@BT_Intern_:
; Line 2233
  00353	80 f9 03	 cmp	 cl, 3
  00356	0f 85 70 02 00
	00		 jne	 $LN21@BT_Intern_
; Line 2236
  0035c	0f b6 44 30 01	 movzx	 eax, BYTE PTR [eax+esi+1]
; Line 2239
  00361	6b f8 74	 imul	 edi, eax, 116
  00364	8d 45 e0	 lea	 eax, DWORD PTR $T8[ebp]
  00367	50		 push	 eax
  00368	8b 8f 10 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
  0036e	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H
  00374	e8 00 00 00 00	 call	 ??GVector3@KMaths@@QBE?AV01@XZ ; KMaths::Vector3::operator-
; Line 2245
  00379	80 3d b4 73 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29620, 0
  00380	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  00384	66 0f d6 05 b8
	73 00 00	 movq	 QWORD PTR ?BT_Main@@3Us_BT_main@@A+29624, xmm0
  0038c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0038f	a3 c0 73 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29632, eax
  00394	8b 87 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
  0039a	f3 0f 7e 80 9c
	00 00 00	 movq	 xmm0, QWORD PTR [eax+156]
  003a2	66 0f d6 05 c4
	73 00 00	 movq	 QWORD PTR ?BT_Main@@3Us_BT_main@@A+29636, xmm0
  003aa	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [eax+164]
  003b0	a3 cc 73 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29644, eax
  003b5	f3 0f 10 87 34
	00 00 00	 movss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+52]
  003bd	f3 0f 59 05 c4
	73 00 00	 mulss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29636
  003c5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c000000
  003cd	f3 0f 11 05 c4
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29636, xmm0
  003d5	f3 0f 10 87 34
	00 00 00	 movss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+52]
  003dd	f3 0f 59 05 cc
	73 00 00	 mulss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29644
  003e5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c000000
  003ed	f3 0f 11 05 cc
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29644, xmm0
  003f5	0f 85 6f 01 00
	00		 jne	 $LN23@BT_Intern_
; Line 4596
  003fb	a1 b0 73 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29616
  00400	50		 push	 eax
  00401	83 c0 40	 add	 eax, 64			; 00000040H
  00404	50		 push	 eax
  00405	8d 45 94	 lea	 eax, DWORD PTR _ClipMatrix$6[ebp]
  00408	50		 push	 eax
  00409	e8 00 00 00 00	 call	 ?MatrixMultiply@KMaths@@YAPAUMatrix@1@PAU21@PBU21@1@Z ; KMaths::MatrixMultiply
; Line 4599
  0040e	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _ClipMatrix$6[ebp+12]
  00413	83 c4 0c	 add	 esp, 12			; 0000000cH
  00416	f3 0f 10 65 94	 movss	 xmm4, DWORD PTR _ClipMatrix$6[ebp]
; Line 4600
  0041b	f3 0f 10 7d b0	 movss	 xmm7, DWORD PTR _ClipMatrix$6[ebp+28]
  00420	f3 0f 5c c4	 subss	 xmm0, xmm4
  00424	f3 0f 10 5d a4	 movss	 xmm3, DWORD PTR _ClipMatrix$6[ebp+16]
; Line 4601
  00429	f3 0f 10 75 c0	 movss	 xmm6, DWORD PTR _ClipMatrix$6[ebp+44]
  0042e	f3 0f 10 55 b4	 movss	 xmm2, DWORD PTR _ClipMatrix$6[ebp+32]
; Line 4602
  00433	f3 0f 10 6d d0	 movss	 xmm5, DWORD PTR _ClipMatrix$6[ebp+60]
  00438	f3 0f 11 05 d0
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29648, xmm0
  00440	0f 28 c7	 movaps	 xmm0, xmm7
  00443	f3 0f 5c c3	 subss	 xmm0, xmm3
  00447	f3 0f 10 4d c4	 movss	 xmm1, DWORD PTR _ClipMatrix$6[ebp+48]
; Line 4605
  0044c	f3 0f 58 65 a0	 addss	 xmm4, DWORD PTR _ClipMatrix$6[ebp+12]
; Line 4606
  00451	f3 0f 58 df	 addss	 xmm3, xmm7
; Line 2248
  00455	c6 05 b4 73 00
	00 01		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29620, 1
; Line 4600
  0045c	f3 0f 11 05 d4
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29652, xmm0
; Line 4601
  00464	0f 28 c6	 movaps	 xmm0, xmm6
  00467	f3 0f 5c c2	 subss	 xmm0, xmm2
; Line 4605
  0046b	f3 0f 11 25 e0
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29664, xmm4
; Line 4607
  00473	f3 0f 58 d6	 addss	 xmm2, xmm6
  00477	f3 0f 11 1d e4
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29668, xmm3
  0047f	f3 0f 11 05 d8
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29656, xmm0
  00487	0f 28 c5	 movaps	 xmm0, xmm5
  0048a	f3 0f 5c c1	 subss	 xmm0, xmm1
  0048e	f3 0f 11 15 e8
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29672, xmm2
; Line 4608
  00496	f3 0f 58 cd	 addss	 xmm1, xmm5
  0049a	f3 0f 11 05 dc
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29660, xmm0
; Line 4611
  004a2	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _ClipMatrix$6[ebp+4]
  004a7	f3 0f 58 45 a0	 addss	 xmm0, DWORD PTR _ClipMatrix$6[ebp+12]
  004ac	f3 0f 11 0d ec
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29676, xmm1
  004b4	f3 0f 11 05 f0
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29680, xmm0
; Line 4612
  004bc	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _ClipMatrix$6[ebp+20]
  004c1	f3 0f 58 c7	 addss	 xmm0, xmm7
  004c5	f3 0f 11 05 f4
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29684, xmm0
; Line 4613
  004cd	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _ClipMatrix$6[ebp+36]
  004d2	f3 0f 58 c6	 addss	 xmm0, xmm6
  004d6	f3 0f 11 05 f8
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29688, xmm0
; Line 4614
  004de	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _ClipMatrix$6[ebp+52]
  004e3	f3 0f 58 c5	 addss	 xmm0, xmm5
  004e7	f3 0f 11 05 fc
	73 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29692, xmm0
; Line 4617
  004ef	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _ClipMatrix$6[ebp+12]
  004f4	f3 0f 5c 45 98	 subss	 xmm0, DWORD PTR _ClipMatrix$6[ebp+4]
  004f9	f3 0f 11 05 00
	74 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29696, xmm0
; Line 4618
  00501	0f 28 c7	 movaps	 xmm0, xmm7
  00504	f3 0f 5c 45 a8	 subss	 xmm0, DWORD PTR _ClipMatrix$6[ebp+20]
; Line 4624
  00509	f3 0f 5c 7d ac	 subss	 xmm7, DWORD PTR _ClipMatrix$6[ebp+24]
  0050e	f3 0f 11 05 04
	74 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29700, xmm0
  00516	0f 28 c6	 movaps	 xmm0, xmm6
  00519	f3 0f 5c 45 b8	 subss	 xmm0, DWORD PTR _ClipMatrix$6[ebp+36]
; Line 4625
  0051e	f3 0f 5c 75 bc	 subss	 xmm6, DWORD PTR _ClipMatrix$6[ebp+40]
  00523	f3 0f 11 3d 14
	74 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29716, xmm7
  0052b	f3 0f 11 05 08
	74 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29704, xmm0
  00533	0f 28 c5	 movaps	 xmm0, xmm5
  00536	f3 0f 5c 45 c8	 subss	 xmm0, DWORD PTR _ClipMatrix$6[ebp+52]
; Line 4626
  0053b	f3 0f 5c 6d cc	 subss	 xmm5, DWORD PTR _ClipMatrix$6[ebp+56]
  00540	f3 0f 11 35 18
	74 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29720, xmm6
  00548	f3 0f 11 05 0c
	74 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29708, xmm0
  00550	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _ClipMatrix$6[ebp+12]
  00555	f3 0f 5c 45 9c	 subss	 xmm0, DWORD PTR _ClipMatrix$6[ebp+8]
  0055a	f3 0f 11 2d 1c
	74 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29724, xmm5
  00562	f3 0f 11 05 10
	74 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29712, xmm0
$LN23@BT_Intern_:
; Line 2252
  0056a	8d 9f 00 00 00
	00		 lea	 ebx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi]
  00570	53		 push	 ebx
  00571	e8 00 00 00 00	 call	 ?BT_RTTMS_UnlockTerrain@@YAXPAUs_BT_terrain@@@Z ; BT_RTTMS_UnlockTerrain
; Line 2253
  00576	0f b6 87 54 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[edi+84]
  0057d	83 c4 04	 add	 esp, 4
  00580	50		 push	 eax
  00581	ff b7 50 00 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+80]
  00587	53		 push	 ebx
  00588	e8 00 00 00 00	 call	 ?BT_Intern_UpdateCullBoxesRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K@Z ; BT_Intern_UpdateCullBoxesRec
  0058d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 2256
  00590	32 c0		 xor	 al, al
; Line 2257
  00592	83 3d 00 00 00
	00 1e		 cmp	 DWORD PTR ?g_CurrentTerrainCameraID@@3KA, 30 ; g_CurrentTerrainCameraID, 0000001eH
  00599	b9 01 00 00 00	 mov	 ecx, 1
  0059e	0f b6 c0	 movzx	 eax, al
  005a1	0f 44 c1	 cmove	 eax, ecx
  005a4	88 85 48 ff ff
	ff		 mov	 BYTE PTR _bIntersectingCull$2[ebp], al
; Line 2258
  005aa	ff b5 48 ff ff
	ff		 push	 DWORD PTR _bIntersectingCull$2[ebp]
  005b0	0f b6 87 54 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[edi+84]
  005b7	50		 push	 eax
  005b8	ff b7 50 00 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+80]
  005be	53		 push	 ebx
  005bf	e8 00 00 00 00	 call	 ?BT_Intern_CalculateCullingRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@K_N@Z ; BT_Intern_CalculateCullingRec
  005c4	83 c4 10	 add	 esp, 16			; 00000010H
; Line 2262
  005c7	e9 50 fd ff ff	 jmp	 $LN57@BT_Intern_
$LN21@BT_Intern_:
; Line 2263
  005cc	80 f9 04	 cmp	 cl, 4
  005cf	75 64		 jne	 SHORT $LN25@BT_Intern_
; Line 2269
  005d1	8b 3d b0 73 00
	00		 mov	 edi, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29616
  005d7	0f b6 4c 30 01	 movzx	 ecx, BYTE PTR [eax+esi+1]
  005dc	85 ff		 test	 edi, edi
  005de	0f 84 53 fd ff
	ff		 je	 $LN37@BT_Intern_
; Line 2272
  005e4	f3 0f 7e 87 a4
	00 00 00	 movq	 xmm0, QWORD PTR [edi+164]
; Line 2275
  005ec	6b c9 74	 imul	 ecx, ecx, 116
  005ef	66 0f d6 05 20
	74 00 00	 movq	 QWORD PTR ?BT_Main@@3Us_BT_main@@A+29728, xmm0
  005f7	8b 87 ac 00 00
	00		 mov	 eax, DWORD PTR [edi+172]
  005fd	a3 28 74 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29736, eax
  00602	80 b9 32 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx+50], 1
  00609	8d b9 00 00 00
	00		 lea	 edi, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx]
  0060f	76 19		 jbe	 SHORT $LN92@BT_Intern_
; Line 2276
  00611	0f b6 81 54 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx+84]
  00618	6a 00		 push	 0
  0061a	50		 push	 eax
  0061b	ff b1 50 00 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+80]
  00621	57		 push	 edi
  00622	e8 00 00 00 00	 call	 ?BT_Intern_CalculateLODLevelsRec@@YAXPAUs_BT_terrain@@PAUs_BT_QuadTree@@KE@Z ; BT_Intern_CalculateLODLevelsRec
  00627	83 c4 10	 add	 esp, 16			; 00000010H
$LN92@BT_Intern_:
; Line 2279
  0062a	57		 push	 edi
  0062b	e8 00 00 00 00	 call	 ?BT_Intern_FixLODSeams@@YAXPAUs_BT_terrain@@@Z ; BT_Intern_FixLODSeams
; Line 2283
  00630	e9 e4 fc ff ff	 jmp	 $LN101@BT_Intern_
$LN25@BT_Intern_:
; Line 2284
  00635	80 f9 05	 cmp	 cl, 5
  00638	75 5d		 jne	 SHORT $LN29@BT_Intern_
; Line 2287
  0063a	0f b6 44 30 01	 movzx	 eax, BYTE PTR [eax+esi+1]
; Line 2290
  0063f	6b c8 74	 imul	 ecx, eax, 116
  00642	8b 81 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+16]
  00648	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0064b	85 c0		 test	 eax, eax
  0064d	0f 84 c9 fc ff
	ff		 je	 $LN57@BT_Intern_
; Line 2292
  00653	8b 80 04 03 00
	00		 mov	 eax, DWORD PTR [eax+772]
  00659	80 b8 1d 04 00
	00 01		 cmp	 BYTE PTR [eax+1053], 1
  00660	0f 85 b6 fc ff
	ff		 jne	 $LN57@BT_Intern_
; Line 2295
  00666	a1 b0 73 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29616
  0066b	f3 0f 7e 80 a4
	00 00 00	 movq	 xmm0, QWORD PTR [eax+164]
  00673	66 0f d6 05 20
	74 00 00	 movq	 QWORD PTR ?BT_Main@@3Us_BT_main@@A+29728, xmm0
  0067b	8b 80 ac 00 00
	00		 mov	 eax, DWORD PTR [eax+172]
  00681	a3 28 74 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29736, eax
; Line 2298
  00686	8d 81 00 00 00
	00		 lea	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx]
  0068c	50		 push	 eax
  0068d	e8 00 00 00 00	 call	 ?BT_Intern_RenderTerrain@@YAXPAUs_BT_terrain@@@Z ; BT_Intern_RenderTerrain
; Line 2304
  00692	e9 82 fc ff ff	 jmp	 $LN101@BT_Intern_
$LN29@BT_Intern_:
; Line 2305
  00697	80 f9 06	 cmp	 cl, 6
  0069a	0f 85 7f fc ff
	ff		 jne	 $LN8@BT_Intern_
; Line 2309
  006a0	0f b6 44 30 01	 movzx	 eax, BYTE PTR [eax+esi+1]
; Line 2310
  006a5	6b c0 74	 imul	 eax, eax, 116
  006a8	8b 80 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[eax+16]
  006ae	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  006b1	85 c0		 test	 eax, eax
  006b3	0f 84 63 fc ff
	ff		 je	 $LN57@BT_Intern_
; Line 2312
  006b9	8b 80 04 03 00
	00		 mov	 eax, DWORD PTR [eax+772]
  006bf	80 b8 1d 04 00
	00 01		 cmp	 BYTE PTR [eax+1053], 1
  006c6	0f 85 50 fc ff
	ff		 jne	 $LN57@BT_Intern_
; Line 2804
  006cc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pCBChangePerTerrsainChunk@@3PAUID3D11Buffer@@A, 0 ; m_pCBChangePerTerrsainChunk
; Line 2314
  006d3	8b 3d b0 73 00
	00		 mov	 edi, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29616
  006d9	f3 0f 7e 87 a4
	00 00 00	 movq	 xmm0, QWORD PTR [edi+164]
  006e1	66 0f d6 05 20
	74 00 00	 movq	 QWORD PTR ?BT_Main@@3Us_BT_main@@A+29728, xmm0
  006e9	8b 87 ac 00 00
	00		 mov	 eax, DWORD PTR [edi+172]
  006ef	a3 28 74 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29736, eax
; Line 2804
  006f4	75 54		 jne	 SHORT $LN59@BT_Intern_
; Line 2812
  006f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pD3D@@3PAUID3D11Device@@A ; m_pD3D
  006fb	8d 95 64 ff ff
	ff		 lea	 edx, DWORD PTR _bdChangePerTerrsainChunkBuffer$4[ebp]
  00701	68 00 00 00 00	 push	 OFFSET ?m_pCBChangePerTerrsainChunk@@3PAUID3D11Buffer@@A ; m_pCBChangePerTerrsainChunk
  00706	0f 57 c0	 xorps	 xmm0, xmm0
; Line 2808
  00709	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$4[ebp+4], 0
; Line 2812
  00713	6a 00		 push	 0
  00715	66 0f 13 85 74
	ff ff ff	 movlpd	 QWORD PTR _bdChangePerTerrsainChunkBuffer$4[ebp+16], xmm0
  0071d	c7 85 6c ff ff
	ff 04 00 00 00	 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$4[ebp+8], 4
  00727	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$4[ebp+12], 0
  00731	c7 85 64 ff ff
	ff c0 00 00 00	 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$4[ebp], 192 ; 000000c0H
  0073b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0073d	52		 push	 edx
  0073e	50		 push	 eax
  0073f	ff 51 0c	 call	 DWORD PTR [ecx+12]
  00742	85 c0		 test	 eax, eax
  00744	0f 88 d2 fb ff
	ff		 js	 $LN57@BT_Intern_
$LN59@BT_Intern_:
; Line 2815
  0074a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?m_pCBChangePerTerrsainChunkPS@@3PAUID3D11Buffer@@A, 0 ; m_pCBChangePerTerrsainChunkPS
  00751	75 54		 jne	 SHORT $LN61@BT_Intern_
; Line 2823
  00753	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pD3D@@3PAUID3D11Device@@A ; m_pD3D
  00758	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _bdChangePerTerrsainChunkBuffer$3[ebp]
  0075e	68 00 00 00 00	 push	 OFFSET ?m_pCBChangePerTerrsainChunkPS@@3PAUID3D11Buffer@@A ; m_pCBChangePerTerrsainChunkPS
  00763	0f 57 c0	 xorps	 xmm0, xmm0
; Line 2819
  00766	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$3[ebp+4], 0
; Line 2823
  00770	6a 00		 push	 0
  00772	66 0f 13 85 5c
	ff ff ff	 movlpd	 QWORD PTR _bdChangePerTerrsainChunkBuffer$3[ebp+16], xmm0
  0077a	c7 85 54 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$3[ebp+8], 4
  00784	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$3[ebp+12], 0
  0078e	c7 85 4c ff ff
	ff e0 00 00 00	 mov	 DWORD PTR _bdChangePerTerrsainChunkBuffer$3[ebp], 224 ; 000000e0H
  00798	8b 08		 mov	 ecx, DWORD PTR [eax]
  0079a	52		 push	 edx
  0079b	50		 push	 eax
  0079c	ff 51 0c	 call	 DWORD PTR [ecx+12]
  0079f	85 c0		 test	 eax, eax
  007a1	0f 88 75 fb ff
	ff		 js	 $LN57@BT_Intern_
$LN61@BT_Intern_:
; Line 2828
  007a7	57		 push	 edi
  007a8	6a 03		 push	 3
  007aa	e8 00 00 00 00	 call	 ?COMMONSetTransform@@YAXHPAUMatrix@KMaths@@@Z ; COMMONSetTransform
  007af	83 c4 08	 add	 esp, 8
; Line 2829
  007b2	8d 47 40	 lea	 eax, DWORD PTR [edi+64]
  007b5	50		 push	 eax
  007b6	6a 02		 push	 2
  007b8	e8 00 00 00 00	 call	 ?COMMONSetTransform@@YAXHPAUMatrix@KMaths@@@Z ; COMMONSetTransform
; Line 2834
  007bd	8b 87 c8 00 00
	00		 mov	 eax, DWORD PTR [edi+200]
  007c3	83 c4 08	 add	 esp, 8
  007c6	66 0f 6e c0	 movd	 xmm0, eax
  007ca	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  007ce	c1 e8 1f	 shr	 eax, 31			; 0000001fH
; Line 2840
  007d1	6a 00		 push	 0
  007d3	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  007dc	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  007e0	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _vp$5[ebp], xmm0
  007e8	8b 87 cc 00 00
	00		 mov	 eax, DWORD PTR [edi+204]
  007ee	66 0f 6e c0	 movd	 xmm0, eax
; Line 2834
  007f2	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  007f6	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  007f9	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00802	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00806	f3 0f 11 45 80	 movss	 DWORD PTR _vp$5[ebp+4], xmm0
  0080b	8b 87 d0 00 00
	00		 mov	 eax, DWORD PTR [edi+208]
  00811	66 0f 6e c0	 movd	 xmm0, eax
  00815	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00819	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0081c	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  00825	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00829	f3 0f 11 45 84	 movss	 DWORD PTR _vp$5[ebp+8], xmm0
  0082e	8b 87 d4 00 00
	00		 mov	 eax, DWORD PTR [edi+212]
  00834	66 0f 6e c0	 movd	 xmm0, eax
  00838	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0083c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0083f	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
; Line 2840
  00848	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _vp$5[ebp]
  0084e	50		 push	 eax
  0084f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_pGlob@@3PAUGlobStruct@@A ; g_pGlob
  00854	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00858	f3 0f 11 45 88	 movss	 DWORD PTR _vp$5[ebp+12], xmm0
  0085d	f3 0f 10 87 d8
	00 00 00	 movss	 xmm0, DWORD PTR [edi+216]
  00865	f3 0f 11 45 8c	 movss	 DWORD PTR _vp$5[ebp+16], xmm0
  0086a	f3 0f 10 87 dc
	00 00 00	 movss	 xmm0, DWORD PTR [edi+220]
  00872	f3 0f 11 45 90	 movss	 DWORD PTR _vp$5[ebp+20], xmm0
  00877	ff b0 1c 03 00
	00		 push	 DWORD PTR [eax+796]
  0087d	e8 00 00 00 00	 call	 ?SetupSetViewport@@YAXHPAUD3D11_VIEWPORT@@PAUID3D11Texture2D@@@Z ; SetupSetViewport
  00882	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 3008
  00885	c7 05 38 74 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29752, 0
  0088f	e9 88 fa ff ff	 jmp	 $LN57@BT_Intern_
__catch$?BT_Intern_Render@@YAXXZ$0:
; Line 2332
  00894	b8 00 00 00 00	 mov	 eax, $LN37@BT_Intern_
  00899	c3		 ret	 0
  0089a	cc		 int	 3
  0089b	cc		 int	 3
  0089c	cc		 int	 3
  0089d	cc		 int	 3
  0089e	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?BT_Intern_Render@@YAXXZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 8a 40 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-192]
  0000f	33 c8		 xor	 ecx, eax
  00011	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00016	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?BT_Intern_Render@@YAXXZ
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?BT_Intern_Render@@YAXXZ ENDP				; BT_Intern_Render
; Function compile flags: /Ogtp
;	COMDAT ?SetTerrainRenderLevel@@YAXH@Z
_TEXT	SEGMENT
tv132 = 8						; size = 4
tv74 = 8						; size = 4
_size$ = 8						; size = 4
?SetTerrainRenderLevel@@YAXH@Z PROC			; SetTerrainRenderLevel, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 50
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	66 0f 6e 45 08	 movd	 xmm0, DWORD PTR _size$[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 630
  00008	83 ec 08	 sub	 esp, 8
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 51
  0000b	0f 5b c0	 cvtdq2ps xmm0, xmm0
; Line 52
  0000e	f3 0f 5f 05 00
	00 00 00	 maxss	 xmm0, DWORD PTR __real@3f800000
; Line 53
  00016	f3 0f 5d 05 00
	00 00 00	 minss	 xmm0, DWORD PTR __real@42c80000
; Line 56
  0001e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3d4ccccd
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 630
  00026	f3 0f 11 45 08	 movss	 DWORD PTR tv132[ebp], xmm0
  0002b	d9 45 08	 fld	 DWORD PTR tv132[ebp]
  0002e	dd 1c 24	 fstp	 QWORD PTR [esp]
  00031	e8 00 00 00 00	 call	 _ceil
  00036	d9 5d 08	 fstp	 DWORD PTR tv74[ebp]
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 56
  00039	f3 0f 2c 45 08	 cvttss2si eax, DWORD PTR tv74[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 630
  0003e	83 c4 08	 add	 esp, 8
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 56
  00041	a3 00 00 00 00	 mov	 DWORD PTR ?g_LevelToRender@@3HA, eax ; g_LevelToRender
; Line 57
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
?SetTerrainRenderLevel@@YAXH@Z ENDP			; SetTerrainRenderLevel
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_NoRenderTerrain@@YAXK@Z
_TEXT	SEGMENT
_TerrainID$ = 8						; size = 4
?BT_NoRenderTerrain@@YAXK@Z PROC			; BT_NoRenderTerrain, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 2087
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _TerrainID$[ebp]
; Line 2088
  00006	c7 05 a8 73 00
	00 20 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 32 ; 00000020H
; Line 3666
  00010	85 c9		 test	 ecx, ecx
  00012	74 37		 je	 SHORT $LN2@BT_NoRende
  00014	81 f9 ff 00 00
	00		 cmp	 ecx, 255		; 000000ffH
  0001a	77 2f		 ja	 SHORT $LN2@BT_NoRende
; Line 3669
  0001c	6b d1 74	 imul	 edx, ecx, 116
; Line 2089
  0001f	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00026	74 23		 je	 SHORT $LN2@BT_NoRende
; Line 2091
  00028	80 ba 09 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+9], 1
  0002f	75 0d		 jne	 SHORT $LN4@BT_NoRende
; Line 2093
  00031	51		 push	 ecx
  00032	6a 06		 push	 6
  00034	e8 00 00 00 00	 call	 ?BT_Intern_AddToInstructionQueue@@YAXDD@Z ; BT_Intern_AddToInstructionQueue
  00039	83 c4 08	 add	 esp, 8
; Line 2102
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
$LN4@BT_NoRende:
; Line 2095
  0003e	c7 45 08 0a 00
	00 00		 mov	 DWORD PTR _TerrainID$[ebp], 10 ; 0000000aH
; Line 2102
  00045	5d		 pop	 ebp
; Line 2095
  00046	e9 00 00 00 00	 jmp	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
$LN2@BT_NoRende:
; Line 2099
  0004b	c7 45 08 02 00
	00 00		 mov	 DWORD PTR _TerrainID$[ebp], 2
; Line 2102
  00052	5d		 pop	 ebp
; Line 2099
  00053	e9 00 00 00 00	 jmp	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
?BT_NoRenderTerrain@@YAXK@Z ENDP			; BT_NoRenderTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_RenderTerrain@@YAXK@Z
_TEXT	SEGMENT
_TerrainID$ = 8						; size = 4
?BT_RenderTerrain@@YAXK@Z PROC				; BT_RenderTerrain, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 2063
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _TerrainID$[ebp]
; Line 2065
  00006	c7 05 a8 73 00
	00 20 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 32 ; 00000020H
; Line 3666
  00010	85 c9		 test	 ecx, ecx
  00012	74 37		 je	 SHORT $LN2@BT_RenderT
  00014	81 f9 ff 00 00
	00		 cmp	 ecx, 255		; 000000ffH
  0001a	77 2f		 ja	 SHORT $LN2@BT_RenderT
; Line 3669
  0001c	6b d1 74	 imul	 edx, ecx, 116
; Line 2068
  0001f	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00026	74 23		 je	 SHORT $LN2@BT_RenderT
; Line 2071
  00028	80 ba 09 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+9], 1
  0002f	75 0d		 jne	 SHORT $LN4@BT_RenderT
; Line 2074
  00031	51		 push	 ecx
  00032	6a 05		 push	 5
  00034	e8 00 00 00 00	 call	 ?BT_Intern_AddToInstructionQueue@@YAXDD@Z ; BT_Intern_AddToInstructionQueue
  00039	83 c4 08	 add	 esp, 8
; Line 2083
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
$LN4@BT_RenderT:
; Line 2076
  0003e	c7 45 08 0a 00
	00 00		 mov	 DWORD PTR _TerrainID$[ebp], 10 ; 0000000aH
; Line 2083
  00045	5d		 pop	 ebp
; Line 2076
  00046	e9 00 00 00 00	 jmp	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
$LN2@BT_RenderT:
; Line 2080
  0004b	c7 45 08 02 00
	00 00		 mov	 DWORD PTR _TerrainID$[ebp], 2
; Line 2083
  00052	5d		 pop	 ebp
; Line 2080
  00053	e9 00 00 00 00	 jmp	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
?BT_RenderTerrain@@YAXK@Z ENDP				; BT_RenderTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_UpdateTerrainCull@@YAXK@Z
_TEXT	SEGMENT
_TerrainID$ = 8						; size = 4
?BT_UpdateTerrainCull@@YAXK@Z PROC			; BT_UpdateTerrainCull, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 2031
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _TerrainID$[ebp]
; Line 2033
  00006	c7 05 a8 73 00
	00 31 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 49 ; 00000031H
; Line 3666
  00010	85 c9		 test	 ecx, ecx
  00012	74 37		 je	 SHORT $LN2@BT_UpdateT
  00014	81 f9 ff 00 00
	00		 cmp	 ecx, 255		; 000000ffH
  0001a	77 2f		 ja	 SHORT $LN2@BT_UpdateT
; Line 3669
  0001c	6b d1 74	 imul	 edx, ecx, 116
; Line 2036
  0001f	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00026	74 23		 je	 SHORT $LN2@BT_UpdateT
; Line 2040
  00028	80 ba 09 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+9], 1
  0002f	75 0d		 jne	 SHORT $LN4@BT_UpdateT
; Line 2043
  00031	51		 push	 ecx
  00032	6a 03		 push	 3
  00034	e8 00 00 00 00	 call	 ?BT_Intern_AddToInstructionQueue@@YAXDD@Z ; BT_Intern_AddToInstructionQueue
  00039	83 c4 08	 add	 esp, 8
; Line 2054
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
$LN4@BT_UpdateT:
; Line 2045
  0003e	c7 45 08 0a 00
	00 00		 mov	 DWORD PTR _TerrainID$[ebp], 10 ; 0000000aH
; Line 2054
  00045	5d		 pop	 ebp
; Line 2045
  00046	e9 00 00 00 00	 jmp	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
$LN2@BT_UpdateT:
; Line 2050
  0004b	c7 45 08 02 00
	00 00		 mov	 DWORD PTR _TerrainID$[ebp], 2
; Line 2054
  00052	5d		 pop	 ebp
; Line 2050
  00053	e9 00 00 00 00	 jmp	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
?BT_UpdateTerrainCull@@YAXK@Z ENDP			; BT_UpdateTerrainCull
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_UpdateTerrainLOD@@YAXK@Z
_TEXT	SEGMENT
_TerrainID$ = 8						; size = 4
?BT_UpdateTerrainLOD@@YAXK@Z PROC			; BT_UpdateTerrainLOD, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1999
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _TerrainID$[ebp]
; Line 2001
  00006	c7 05 a8 73 00
	00 30 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 48 ; 00000030H
; Line 3666
  00010	85 c9		 test	 ecx, ecx
  00012	74 37		 je	 SHORT $LN2@BT_UpdateT
  00014	81 f9 ff 00 00
	00		 cmp	 ecx, 255		; 000000ffH
  0001a	77 2f		 ja	 SHORT $LN2@BT_UpdateT
; Line 3669
  0001c	6b d1 74	 imul	 edx, ecx, 116
; Line 2004
  0001f	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00026	74 23		 je	 SHORT $LN2@BT_UpdateT
; Line 2008
  00028	80 ba 09 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+9], 1
  0002f	75 0d		 jne	 SHORT $LN4@BT_UpdateT
; Line 2011
  00031	51		 push	 ecx
  00032	6a 04		 push	 4
  00034	e8 00 00 00 00	 call	 ?BT_Intern_AddToInstructionQueue@@YAXDD@Z ; BT_Intern_AddToInstructionQueue
  00039	83 c4 08	 add	 esp, 8
; Line 2022
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
$LN4@BT_UpdateT:
; Line 2013
  0003e	c7 45 08 0a 00
	00 00		 mov	 DWORD PTR _TerrainID$[ebp], 10 ; 0000000aH
; Line 2022
  00045	5d		 pop	 ebp
; Line 2013
  00046	e9 00 00 00 00	 jmp	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
$LN2@BT_UpdateT:
; Line 2018
  0004b	c7 45 08 02 00
	00 00		 mov	 DWORD PTR _TerrainID$[ebp], 2
; Line 2022
  00052	5d		 pop	 ebp
; Line 2018
  00053	e9 00 00 00 00	 jmp	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
?BT_UpdateTerrainLOD@@YAXK@Z ENDP			; BT_UpdateTerrainLOD
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetCurrentCamera@@YAXK@Z
_TEXT	SEGMENT
_CameraID$ = 8						; size = 4
?BT_SetCurrentCamera@@YAXK@Z PROC			; BT_SetCurrentCamera, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1979
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 1984
  00004	8b 5d 08	 mov	 ebx, DWORD PTR _CameraID$[ebp]
  00007	53		 push	 ebx
  00008	c7 05 a8 73 00
	00 2f 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 47 ; 0000002fH
  00012	e8 00 00 00 00	 call	 ?GetCameraInternalData@@YAPAXH@Z ; GetCameraInternalData
  00017	83 c4 04	 add	 esp, 4
  0001a	85 c0		 test	 eax, eax
  0001c	74 41		 je	 SHORT $LN5@BT_SetCurr
; Line 2344
  0001e	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
  00024	8d 41 02	 lea	 eax, DWORD PTR [ecx+2]
  00027	3b 05 58 74 00
	00		 cmp	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29784
  0002d	73 30		 jae	 SHORT $LN5@BT_SetCurr
; Line 2346
  0002f	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  00034	c6 04 08 01	 mov	 BYTE PTR [eax+ecx], 1
; Line 2347
  00038	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
  0003e	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  00043	88 5c 08 01	 mov	 BYTE PTR [eax+ecx+1], bl
; Line 2348
  00047	8b 0d 5c 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788
; Line 2349
  0004d	a1 54 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780
  00052	83 c1 02	 add	 ecx, 2
  00055	89 0d 5c 74 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788, ecx
  0005b	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0
$LN5@BT_SetCurr:
  0005f	5b		 pop	 ebx
; Line 1990
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
?BT_SetCurrentCamera@@YAXK@Z ENDP			; BT_SetCurrentCamera
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetSectorCollumn@@YAKKKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_LODLevel$ = 12						; size = 4
_SectorID$ = 16						; size = 4
?BT_GetSectorCollumn@@YAKKKK@Z PROC			; BT_GetSectorCollumn, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1943
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1945
  00006	c7 05 a8 73 00
	00 2e 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 46 ; 0000002eH
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 5d		 ja	 SHORT $LN2@BT_GetSect
; Line 3669
  0001a	6b d1 74	 imul	 edx, ecx, 116
; Line 1948
  0001d	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00024	74 51		 je	 SHORT $LN2@BT_GetSect
; Line 1951
  00026	0f b6 82 32 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+50]
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _LODLevel$[ebp]
  00030	3b c1		 cmp	 eax, ecx
  00032	76 35		 jbe	 SHORT $LN4@BT_GetSect
; Line 1954
  00034	8b 82 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+68]
  0003a	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  0003d	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00040	8b 4d 10	 mov	 ecx, DWORD PTR _SectorID$[ebp]
  00043	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  00047	3b c1		 cmp	 eax, ecx
  00049	76 10		 jbe	 SHORT $LN6@BT_GetSect
; Line 1957
  0004b	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0004e	69 c9 94 00 00
	00		 imul	 ecx, ecx, 148
  00054	0f b7 44 08 0a	 movzx	 eax, WORD PTR [eax+ecx+10]
; Line 1970
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
$LN6@BT_GetSect:
; Line 1959
  0005b	6a 0d		 push	 13			; 0000000dH
; Line 1970
  0005d	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00062	83 c4 04	 add	 esp, 4
  00065	33 c0		 xor	 eax, eax
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
$LN4@BT_GetSect:
; Line 1963
  00069	6a 05		 push	 5
; Line 1970
  0006b	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00070	83 c4 04	 add	 esp, 4
  00073	33 c0		 xor	 eax, eax
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
$LN2@BT_GetSect:
; Line 1967
  00077	6a 02		 push	 2
; Line 1970
  00079	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0007e	83 c4 04	 add	 esp, 4
  00081	33 c0		 xor	 eax, eax
  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
?BT_GetSectorCollumn@@YAKKKK@Z ENDP			; BT_GetSectorCollumn
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetSectorRow@@YAKKKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_LODLevel$ = 12						; size = 4
_SectorID$ = 16						; size = 4
?BT_GetSectorRow@@YAKKKK@Z PROC				; BT_GetSectorRow, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1907
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1909
  00006	c7 05 a8 73 00
	00 2d 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 45 ; 0000002dH
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 5d		 ja	 SHORT $LN2@BT_GetSect
; Line 3669
  0001a	6b d1 74	 imul	 edx, ecx, 116
; Line 1912
  0001d	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00024	74 51		 je	 SHORT $LN2@BT_GetSect
; Line 1915
  00026	0f b6 82 32 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+50]
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _LODLevel$[ebp]
  00030	3b c1		 cmp	 eax, ecx
  00032	76 35		 jbe	 SHORT $LN4@BT_GetSect
; Line 1918
  00034	8b 82 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+68]
  0003a	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  0003d	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00040	8b 4d 10	 mov	 ecx, DWORD PTR _SectorID$[ebp]
  00043	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  00047	3b c1		 cmp	 eax, ecx
  00049	76 10		 jbe	 SHORT $LN6@BT_GetSect
; Line 1921
  0004b	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0004e	69 c9 94 00 00
	00		 imul	 ecx, ecx, 148
  00054	0f b7 44 08 08	 movzx	 eax, WORD PTR [eax+ecx+8]
; Line 1934
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
$LN6@BT_GetSect:
; Line 1923
  0005b	6a 0d		 push	 13			; 0000000dH
; Line 1934
  0005d	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00062	83 c4 04	 add	 esp, 4
  00065	33 c0		 xor	 eax, eax
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
$LN4@BT_GetSect:
; Line 1927
  00069	6a 05		 push	 5
; Line 1934
  0006b	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00070	83 c4 04	 add	 esp, 4
  00073	33 c0		 xor	 eax, eax
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
$LN2@BT_GetSect:
; Line 1931
  00077	6a 02		 push	 2
; Line 1934
  00079	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0007e	83 c4 04	 add	 esp, 4
  00081	33 c0		 xor	 eax, eax
  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
?BT_GetSectorRow@@YAKKKK@Z ENDP				; BT_GetSectorRow
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetSectorExcluded@@YAKKKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_LODLevel$ = 12						; size = 4
_SectorID$ = 16						; size = 4
?BT_GetSectorExcluded@@YAKKKK@Z PROC			; BT_GetSectorExcluded, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1871
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1873
  00006	c7 05 a8 73 00
	00 2c 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 44 ; 0000002cH
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 5c		 ja	 SHORT $LN2@BT_GetSect
; Line 3669
  0001a	6b d1 74	 imul	 edx, ecx, 116
; Line 1876
  0001d	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00024	74 50		 je	 SHORT $LN2@BT_GetSect
; Line 1879
  00026	0f b6 82 32 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+50]
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _LODLevel$[ebp]
  00030	3b c1		 cmp	 eax, ecx
  00032	76 34		 jbe	 SHORT $LN4@BT_GetSect
; Line 1882
  00034	8b 82 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+68]
  0003a	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  0003d	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00040	8b 4d 10	 mov	 ecx, DWORD PTR _SectorID$[ebp]
  00043	0f b7 42 0a	 movzx	 eax, WORD PTR [edx+10]
  00047	3b c1		 cmp	 eax, ecx
  00049	76 0f		 jbe	 SHORT $LN6@BT_GetSect
; Line 1885
  0004b	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0004e	69 c9 94 00 00
	00		 imul	 ecx, ecx, 148
  00054	0f b6 04 08	 movzx	 eax, BYTE PTR [eax+ecx]
; Line 1898
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN6@BT_GetSect:
; Line 1887
  0005a	6a 0d		 push	 13			; 0000000dH
; Line 1898
  0005c	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00061	83 c4 04	 add	 esp, 4
  00064	33 c0		 xor	 eax, eax
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
$LN4@BT_GetSect:
; Line 1891
  00068	6a 05		 push	 5
; Line 1898
  0006a	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0006f	83 c4 04	 add	 esp, 4
  00072	33 c0		 xor	 eax, eax
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
$LN2@BT_GetSect:
; Line 1895
  00076	6a 02		 push	 2
; Line 1898
  00078	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0007d	83 c4 04	 add	 esp, 4
  00080	33 c0		 xor	 eax, eax
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
?BT_GetSectorExcluded@@YAKKKK@Z ENDP			; BT_GetSectorExcluded
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetSectorSize@@YAKKK@Z
_TEXT	SEGMENT
_Size$1 = 8						; size = 4
_TerrainID$ = 8						; size = 4
_LODLevel$ = 12						; size = 4
?BT_GetSectorSize@@YAKKK@Z PROC				; BT_GetSectorSize, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1844
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _TerrainID$[ebp]
; Line 1846
  00006	c7 05 a8 73 00
	00 2b 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 43 ; 0000002bH
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 51		 ja	 SHORT $LN2@BT_GetSect
; Line 3669
  0001a	6b d1 74	 imul	 edx, ecx, 116
; Line 1849
  0001d	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00024	74 45		 je	 SHORT $LN2@BT_GetSect
; Line 1852
  00026	0f b6 82 32 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+50]
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _LODLevel$[ebp]
  00030	3b c1		 cmp	 eax, ecx
  00032	76 29		 jbe	 SHORT $LN4@BT_GetSect
; Line 1854
  00034	8b 82 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+68]
  0003a	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  0003d	f3 0f 10 44 88
	04		 movss	 xmm0, DWORD PTR [eax+ecx*4+4]
  00043	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c000000
  0004b	f3 0f 59 82 34
	00 00 00	 mulss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+52]
  00053	f3 0f 11 45 08	 movss	 DWORD PTR _Size$1[ebp], xmm0
; Line 1855
  00058	8b 45 08	 mov	 eax, DWORD PTR _Size$1[ebp]
; Line 1865
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
$LN4@BT_GetSect:
; Line 1857
  0005d	6a 05		 push	 5
; Line 1865
  0005f	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00064	83 c4 04	 add	 esp, 4
  00067	33 c0		 xor	 eax, eax
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
$LN2@BT_GetSect:
; Line 1861
  0006b	6a 02		 push	 2
; Line 1865
  0006d	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00072	83 c4 04	 add	 esp, 4
  00075	33 c0		 xor	 eax, eax
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
?BT_GetSectorSize@@YAKKK@Z ENDP				; BT_GetSectorSize
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetSectorCount@@YAKKK@Z
_TEXT	SEGMENT
_TerrainID$ = 8						; size = 4
_LODLevel$ = 12						; size = 4
?BT_GetSectorCount@@YAKKK@Z PROC			; BT_GetSectorCount, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1815
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _TerrainID$[ebp]
; Line 1817
  00006	c7 05 a8 73 00
	00 2a 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 42 ; 0000002aH
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 38		 ja	 SHORT $LN2@BT_GetSect
; Line 3669
  0001a	6b d1 74	 imul	 edx, ecx, 116
; Line 1820
  0001d	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00024	74 2c		 je	 SHORT $LN2@BT_GetSect
; Line 1823
  00026	0f b6 82 32 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+50]
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _LODLevel$[ebp]
  00030	3b c1		 cmp	 eax, ecx
  00032	76 10		 jbe	 SHORT $LN4@BT_GetSect
; Line 1825
  00034	8b 82 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+68]
  0003a	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  0003d	0f b7 44 88 0a	 movzx	 eax, WORD PTR [eax+ecx*4+10]
; Line 1835
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
$LN4@BT_GetSect:
; Line 1827
  00044	6a 05		 push	 5
; Line 1835
  00046	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0004b	83 c4 04	 add	 esp, 4
  0004e	33 c0		 xor	 eax, eax
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN2@BT_GetSect:
; Line 1831
  00052	6a 02		 push	 2
; Line 1835
  00054	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00059	83 c4 04	 add	 esp, 4
  0005c	33 c0		 xor	 eax, eax
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?BT_GetSectorCount@@YAKKK@Z ENDP			; BT_GetSectorCount
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetSectorPositionZ@@YAMKKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_LODLevel$ = 12						; size = 4
_SectorID$ = 16						; size = 4
?BT_GetSectorPositionZ@@YAMKKK@Z PROC			; BT_GetSectorPositionZ, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1781
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1783
  00006	c7 05 a8 73 00
	00 29 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 41 ; 00000029H
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 6d		 ja	 SHORT $LN2@BT_GetSect
; Line 3669
  0001a	6b d1 74	 imul	 edx, ecx, 116
; Line 1786
  0001d	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00024	74 61		 je	 SHORT $LN2@BT_GetSect
; Line 1789
  00026	0f b6 82 32 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+50]
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _LODLevel$[ebp]
  00030	3b c1		 cmp	 eax, ecx
  00032	76 45		 jbe	 SHORT $LN4@BT_GetSect
; Line 1792
  00034	56		 push	 esi
  00035	57		 push	 edi
  00036	8b ba 44 00 00
	00		 mov	 edi, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+68]
  0003c	8d 34 c9	 lea	 esi, DWORD PTR [ecx+ecx*8]
  0003f	8b 4d 10	 mov	 ecx, DWORD PTR _SectorID$[ebp]
  00042	0f b7 44 b7 0a	 movzx	 eax, WORD PTR [edi+esi*4+10]
  00047	3b c1		 cmp	 eax, ecx
  00049	76 1e		 jbe	 SHORT $LN6@BT_GetSect
; Line 1795
  0004b	8b 44 b7 10	 mov	 eax, DWORD PTR [edi+esi*4+16]
  0004f	69 c9 94 00 00
	00		 imul	 ecx, ecx, 148
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	d9 44 08 14	 fld	 DWORD PTR [eax+ecx+20]
  0005b	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@3c000000
  00061	d8 8a 34 00 00
	00		 fmul	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+52]
; Line 1809
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
$LN6@BT_GetSect:
; Line 1798
  00069	6a 0d		 push	 13			; 0000000dH
  0006b	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
; Line 1799
  00070	d9 ee		 fldz
  00072	83 c4 04	 add	 esp, 4
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
; Line 1809
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
$LN4@BT_GetSect:
; Line 1802
  00079	6a 05		 push	 5
  0007b	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
; Line 1803
  00080	d9 ee		 fldz
  00082	83 c4 04	 add	 esp, 4
; Line 1809
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
$LN2@BT_GetSect:
; Line 1806
  00087	6a 02		 push	 2
  00089	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
; Line 1807
  0008e	d9 ee		 fldz
  00090	83 c4 04	 add	 esp, 4
; Line 1809
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
?BT_GetSectorPositionZ@@YAMKKK@Z ENDP			; BT_GetSectorPositionZ
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetSectorPositionY@@YAMKKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_LODLevel$ = 12						; size = 4
_SectorID$ = 16						; size = 4
?BT_GetSectorPositionY@@YAMKKK@Z PROC			; BT_GetSectorPositionY, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1747
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1749
  00006	c7 05 a8 73 00
	00 28 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 40 ; 00000028H
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 6d		 ja	 SHORT $LN2@BT_GetSect
; Line 3669
  0001a	6b d1 74	 imul	 edx, ecx, 116
; Line 1752
  0001d	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00024	74 61		 je	 SHORT $LN2@BT_GetSect
; Line 1755
  00026	0f b6 82 32 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+50]
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _LODLevel$[ebp]
  00030	3b c1		 cmp	 eax, ecx
  00032	76 45		 jbe	 SHORT $LN4@BT_GetSect
; Line 1758
  00034	56		 push	 esi
  00035	57		 push	 edi
  00036	8b ba 44 00 00
	00		 mov	 edi, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+68]
  0003c	8d 34 c9	 lea	 esi, DWORD PTR [ecx+ecx*8]
  0003f	8b 4d 10	 mov	 ecx, DWORD PTR _SectorID$[ebp]
  00042	0f b7 44 b7 0a	 movzx	 eax, WORD PTR [edi+esi*4+10]
  00047	3b c1		 cmp	 eax, ecx
  00049	76 1e		 jbe	 SHORT $LN6@BT_GetSect
; Line 1761
  0004b	8b 44 b7 10	 mov	 eax, DWORD PTR [edi+esi*4+16]
  0004f	69 c9 94 00 00
	00		 imul	 ecx, ecx, 148
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	d9 44 08 10	 fld	 DWORD PTR [eax+ecx+16]
  0005b	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@3c000000
  00061	d8 8a 34 00 00
	00		 fmul	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+52]
; Line 1775
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
$LN6@BT_GetSect:
; Line 1764
  00069	6a 0d		 push	 13			; 0000000dH
  0006b	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
; Line 1765
  00070	d9 ee		 fldz
  00072	83 c4 04	 add	 esp, 4
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
; Line 1775
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
$LN4@BT_GetSect:
; Line 1768
  00079	6a 05		 push	 5
  0007b	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
; Line 1769
  00080	d9 ee		 fldz
  00082	83 c4 04	 add	 esp, 4
; Line 1775
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
$LN2@BT_GetSect:
; Line 1772
  00087	6a 02		 push	 2
  00089	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
; Line 1773
  0008e	d9 ee		 fldz
  00090	83 c4 04	 add	 esp, 4
; Line 1775
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
?BT_GetSectorPositionY@@YAMKKK@Z ENDP			; BT_GetSectorPositionY
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetSectorPositionX@@YAMKKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_LODLevel$ = 12						; size = 4
_SectorID$ = 16						; size = 4
?BT_GetSectorPositionX@@YAMKKK@Z PROC			; BT_GetSectorPositionX, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1713
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1715
  00006	c7 05 a8 73 00
	00 27 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 39 ; 00000027H
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 6d		 ja	 SHORT $LN2@BT_GetSect
; Line 3669
  0001a	6b d1 74	 imul	 edx, ecx, 116
; Line 1718
  0001d	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00024	74 61		 je	 SHORT $LN2@BT_GetSect
; Line 1721
  00026	0f b6 82 32 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+50]
  0002d	8b 4d 0c	 mov	 ecx, DWORD PTR _LODLevel$[ebp]
  00030	3b c1		 cmp	 eax, ecx
  00032	76 45		 jbe	 SHORT $LN4@BT_GetSect
; Line 1724
  00034	56		 push	 esi
  00035	57		 push	 edi
  00036	8b ba 44 00 00
	00		 mov	 edi, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+68]
  0003c	8d 34 c9	 lea	 esi, DWORD PTR [ecx+ecx*8]
  0003f	8b 4d 10	 mov	 ecx, DWORD PTR _SectorID$[ebp]
  00042	0f b7 44 b7 0a	 movzx	 eax, WORD PTR [edi+esi*4+10]
  00047	3b c1		 cmp	 eax, ecx
  00049	76 1e		 jbe	 SHORT $LN6@BT_GetSect
; Line 1727
  0004b	8b 44 b7 10	 mov	 eax, DWORD PTR [edi+esi*4+16]
  0004f	69 c9 94 00 00
	00		 imul	 ecx, ecx, 148
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	d9 44 08 0c	 fld	 DWORD PTR [eax+ecx+12]
  0005b	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@3c000000
  00061	d8 8a 34 00 00
	00		 fmul	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+52]
; Line 1741
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
$LN6@BT_GetSect:
; Line 1730
  00069	6a 0d		 push	 13			; 0000000dH
  0006b	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
; Line 1731
  00070	d9 ee		 fldz
  00072	83 c4 04	 add	 esp, 4
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
; Line 1741
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
$LN4@BT_GetSect:
; Line 1734
  00079	6a 05		 push	 5
  0007b	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
; Line 1735
  00080	d9 ee		 fldz
  00082	83 c4 04	 add	 esp, 4
; Line 1741
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
$LN2@BT_GetSect:
; Line 1738
  00087	6a 02		 push	 2
  00089	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
; Line 1739
  0008e	d9 ee		 fldz
  00090	83 c4 04	 add	 esp, 4
; Line 1741
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
?BT_GetSectorPositionX@@YAMKKK@Z ENDP			; BT_GetSectorPositionX
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_MakeTerrainObject@@YAXKKK@Z
_TEXT	SEGMENT
_Object$1$ = -8						; size = 4
_SectorID$1$ = -4					; size = 4
_CurrentFrame$1$ = 8					; size = 4
_terrainid$ = 8						; size = 4
_LODLevel$ = 12						; size = 4
_ObjectID$ = 16						; size = 4
?BT_MakeTerrainObject@@YAXKKK@Z PROC			; BT_MakeTerrainObject, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1600
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1600
  00006	83 ec 08	 sub	 esp, 8
; Line 1602
  00009	c7 05 a8 73 00
	00 3f 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 63 ; 0000003fH
; Line 3666
  00013	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
; Line 1600
  00016	57		 push	 edi
; Line 3666
  00017	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  0001c	0f 87 c8 01 00
	00		 ja	 $LN5@BT_MakeTer
; Line 3669
  00022	6b f9 74	 imul	 edi, ecx, 116
; Line 1605
  00025	80 bf 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edi], 0
  0002c	0f 84 b8 01 00
	00		 je	 $LN5@BT_MakeTer
; Line 1608
  00032	0f b6 87 32 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[edi+50]
  00039	8b 4d 0c	 mov	 ecx, DWORD PTR _LODLevel$[ebp]
  0003c	3b c1		 cmp	 eax, ecx
  0003e	0f 86 97 01 00
	00		 jbe	 $LN7@BT_MakeTer
; Line 1614
  00044	8b 87 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  0004a	53		 push	 ebx
  0004b	8d 1c c9	 lea	 ebx, DWORD PTR [ecx+ecx*8]
  0004e	56		 push	 esi
  0004f	0f b7 44 98 0a	 movzx	 eax, WORD PTR [eax+ebx*4+10]
  00054	50		 push	 eax
  00055	ff 75 10	 push	 DWORD PTR _ObjectID$[ebp]
  00058	e8 00 00 00 00	 call	 ?BT_Intern_CreateBlankObject@@YAPAUsObject@@KK@Z ; BT_Intern_CreateBlankObject
; Line 1618
  0005d	8b 8f 44 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  00063	8b f0		 mov	 esi, eax
  00065	33 d2		 xor	 edx, edx
  00067	89 75 f8	 mov	 DWORD PTR _Object$1$[ebp], esi
  0006a	83 c4 08	 add	 esp, 8
  0006d	89 55 fc	 mov	 DWORD PTR _SectorID$1$[ebp], edx
  00070	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00073	89 45 08	 mov	 DWORD PTR _CurrentFrame$1$[ebp], eax
  00076	33 c0		 xor	 eax, eax
  00078	66 3b 44 99 0a	 cmp	 ax, WORD PTR [ecx+ebx*4+10]
  0007d	8b 45 08	 mov	 eax, DWORD PTR _CurrentFrame$1$[ebp]
  00080	0f 83 ee 00 00
	00		 jae	 $LN3@BT_MakeTer
; Line 1614
  00086	33 f6		 xor	 esi, esi
  00088	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@BT_MakeTer:
; Line 1620
  00090	8b 4c 99 10	 mov	 ecx, DWORD PTR [ecx+ebx*4+16]
  00094	80 3c 31 00	 cmp	 BYTE PTR [ecx+esi], 0
  00098	0f 85 b3 00 00
	00		 jne	 $LN2@BT_MakeTer
; Line 1622
  0009e	ff b0 04 03 00
	00		 push	 DWORD PTR [eax+772]
  000a4	8b 4c 31 18	 mov	 ecx, DWORD PTR [ecx+esi+24]
  000a8	e8 00 00 00 00	 call	 ?GenerateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z ; BT_QuadMap::GenerateDBPMesh
; Line 1625
  000ad	8b 87 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  000b3	8b 4d 08	 mov	 ecx, DWORD PTR _CurrentFrame$1$[ebp]
; Line 1628
  000b6	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3c000000
  000be	8b 55 fc	 mov	 edx, DWORD PTR _SectorID$1$[ebp]
  000c1	8b 44 98 10	 mov	 eax, DWORD PTR [eax+ebx*4+16]
  000c5	89 8c 30 8c 00
	00 00		 mov	 DWORD PTR [eax+esi+140], ecx
  000cc	8b 87 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  000d2	8b 44 98 10	 mov	 eax, DWORD PTR [eax+ebx*4+16]
  000d6	f3 0f 10 44 30
	0c		 movss	 xmm0, DWORD PTR [eax+esi+12]
  000dc	f3 0f 59 c1	 mulss	 xmm0, xmm1
  000e0	f3 0f 59 87 34
	00 00 00	 mulss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+52]
  000e8	f3 0f 11 81 a0
	02 00 00	 movss	 DWORD PTR [ecx+672], xmm0
; Line 1629
  000f0	8b 87 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  000f6	8b 44 98 10	 mov	 eax, DWORD PTR [eax+ebx*4+16]
  000fa	f3 0f 10 44 30
	10		 movss	 xmm0, DWORD PTR [eax+esi+16]
  00100	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00104	f3 0f 59 87 34
	00 00 00	 mulss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+52]
  0010c	f3 0f 11 81 a4
	02 00 00	 movss	 DWORD PTR [ecx+676], xmm0
; Line 1630
  00114	8b 87 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  0011a	8b 44 98 10	 mov	 eax, DWORD PTR [eax+ebx*4+16]
  0011e	f3 0f 10 44 30
	14		 movss	 xmm0, DWORD PTR [eax+esi+20]
; Line 1633
  00124	8b 81 08 01 00
	00		 mov	 eax, DWORD PTR [ecx+264]
  0012a	f3 0f 59 c1	 mulss	 xmm0, xmm1
; Line 1635
  0012e	89 45 08	 mov	 DWORD PTR _CurrentFrame$1$[ebp], eax
  00131	f3 0f 59 87 34
	00 00 00	 mulss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+52]
  00139	89 81 0c 01 00
	00		 mov	 DWORD PTR [ecx+268], eax
  0013f	c7 81 08 01 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+264], 0
  00149	f3 0f 11 81 a8
	02 00 00	 movss	 DWORD PTR [ecx+680], xmm0
$LN2@BT_MakeTer:
; Line 1618
  00151	8b 8f 44 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  00157	42		 inc	 edx
  00158	81 c6 94 00 00
	00		 add	 esi, 148		; 00000094H
  0015e	89 55 fc	 mov	 DWORD PTR _SectorID$1$[ebp], edx
  00161	0f b7 44 99 0a	 movzx	 eax, WORD PTR [ecx+ebx*4+10]
  00166	3b d0		 cmp	 edx, eax
  00168	8b 45 08	 mov	 eax, DWORD PTR _CurrentFrame$1$[ebp]
  0016b	0f 82 1f ff ff
	ff		 jb	 $LL4@BT_MakeTer
  00171	8b 75 f8	 mov	 esi, DWORD PTR _Object$1$[ebp]
$LN3@BT_MakeTer:
; Line 1640
  00174	8b 87 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
; Line 1646
  0017a	ff 75 10	 push	 DWORD PTR _ObjectID$[ebp]
  0017d	f3 0f 7e 80 84
	00 00 00	 movq	 xmm0, QWORD PTR [eax+132]
  00185	66 0f d6 86 84
	00 00 00	 movq	 QWORD PTR [esi+132], xmm0
  0018d	8b 80 8c 00 00
	00		 mov	 eax, DWORD PTR [eax+140]
  00193	89 86 8c 00 00
	00		 mov	 DWORD PTR [esi+140], eax
  00199	8b 87 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
  0019f	f3 0f 7e 80 9c
	00 00 00	 movq	 xmm0, QWORD PTR [eax+156]
  001a7	66 0f d6 86 9c
	00 00 00	 movq	 QWORD PTR [esi+156], xmm0
  001af	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [eax+164]
  001b5	89 86 a4 00 00
	00		 mov	 DWORD PTR [esi+164], eax
  001bb	8b 87 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  001c1	89 74 98 1c	 mov	 DWORD PTR [eax+ebx*4+28], esi
  001c5	c6 86 b1 04 00
	00 01		 mov	 BYTE PTR [esi+1201], 1
  001cc	e8 00 00 00 00	 call	 ?BT_Intern_FinnishObject@@YAXK@Z ; BT_Intern_FinnishObject
  001d1	83 c4 04	 add	 esp, 4
  001d4	5e		 pop	 esi
  001d5	5b		 pop	 ebx
  001d6	5f		 pop	 edi
; Line 1653
  001d7	8b e5		 mov	 esp, ebp
  001d9	5d		 pop	 ebp
  001da	c3		 ret	 0
$LN7@BT_MakeTer:
; Line 1648
  001db	6a 05		 push	 5
; Line 1653
  001dd	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  001e2	83 c4 04	 add	 esp, 4
  001e5	5f		 pop	 edi
  001e6	8b e5		 mov	 esp, ebp
  001e8	5d		 pop	 ebp
  001e9	c3		 ret	 0
$LN5@BT_MakeTer:
; Line 1651
  001ea	6a 02		 push	 2
; Line 1653
  001ec	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  001f1	83 c4 04	 add	 esp, 4
  001f4	5f		 pop	 edi
  001f5	8b e5		 mov	 esp, ebp
  001f7	5d		 pop	 ebp
  001f8	c3		 ret	 0
?BT_MakeTerrainObject@@YAXKKK@Z ENDP			; BT_MakeTerrainObject
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_MakeSectorObject@@YAXKKKK@Z
_TEXT	SEGMENT
tv663 = 8						; size = 4
_terrainid$ = 8						; size = 4
_LODLevel$ = 12						; size = 4
_SectorID$ = 16						; size = 4
_ObjectID$ = 20						; size = 4
?BT_MakeSectorObject@@YAXKKKK@Z PROC			; BT_MakeSectorObject, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1532
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1532
  00006	57		 push	 edi
; Line 1534
  00007	c7 05 a8 73 00
	00 26 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 38 ; 00000026H
; Line 3666
  00011	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00014	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00019	0f 87 bd 01 00
	00		 ja	 $LN2@BT_MakeSec
; Line 3669
  0001f	6b f9 74	 imul	 edi, ecx, 116
; Line 1537
  00022	80 bf 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edi], 0
  00029	0f 84 ad 01 00
	00		 je	 $LN2@BT_MakeSec
; Line 1540
  0002f	0f b6 87 32 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[edi+50]
  00036	8b 4d 0c	 mov	 ecx, DWORD PTR _LODLevel$[ebp]
  00039	3b c1		 cmp	 eax, ecx
  0003b	0f 86 8e 01 00
	00		 jbe	 $LN4@BT_MakeSec
; Line 1543
  00041	8b 55 10	 mov	 edx, DWORD PTR _SectorID$[ebp]
  00044	53		 push	 ebx
  00045	8d 1c c9	 lea	 ebx, DWORD PTR [ecx+ecx*8]
  00048	8b 8f 44 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  0004e	0f b7 44 99 0a	 movzx	 eax, WORD PTR [ecx+ebx*4+10]
  00053	3b c2		 cmp	 eax, edx
  00055	0f 86 66 01 00
	00		 jbe	 $LN6@BT_MakeSec
; Line 1546
  0005b	8b 4c 99 10	 mov	 ecx, DWORD PTR [ecx+ebx*4+16]
  0005f	69 c2 94 00 00
	00		 imul	 eax, edx, 148
  00065	89 45 08	 mov	 DWORD PTR tv663[ebp], eax
  00068	80 3c 01 00	 cmp	 BYTE PTR [ecx+eax], 0
  0006c	0f 85 41 01 00
	00		 jne	 $LN8@BT_MakeSec
; Line 1549
  00072	8b 55 14	 mov	 edx, DWORD PTR _ObjectID$[ebp]
  00075	85 d2		 test	 edx, edx
  00077	75 15		 jne	 SHORT $LN10@BT_MakeSec
; Line 1551
  00079	89 94 01 88 00
	00 00		 mov	 DWORD PTR [ecx+eax+136], edx
; Line 1552
  00080	8b 87 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  00086	89 54 98 1c	 mov	 DWORD PTR [eax+ebx*4+28], edx
  0008a	5b		 pop	 ebx
  0008b	5f		 pop	 edi
; Line 1591
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
$LN10@BT_MakeSec:
  0008e	56		 push	 esi
; Line 1557
  0008f	6a 01		 push	 1
  00091	52		 push	 edx
  00092	e8 00 00 00 00	 call	 ?BT_Intern_CreateBlankObject@@YAPAUsObject@@KK@Z ; BT_Intern_CreateBlankObject
  00097	8b f0		 mov	 esi, eax
  00099	83 c4 08	 add	 esp, 8
; Line 1560
  0009c	8b 45 08	 mov	 eax, DWORD PTR tv663[ebp]
  0009f	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  000a2	ff b1 04 03 00
	00		 push	 DWORD PTR [ecx+772]
  000a8	8b 8f 44 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  000ae	8b 4c 99 10	 mov	 ecx, DWORD PTR [ecx+ebx*4+16]
  000b2	8b 4c 01 18	 mov	 ecx, DWORD PTR [ecx+eax+24]
  000b6	e8 00 00 00 00	 call	 ?GenerateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z ; BT_QuadMap::GenerateDBPMesh
; Line 1563
  000bb	8b 8f 44 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  000c1	8b 45 08	 mov	 eax, DWORD PTR tv663[ebp]
; Line 1567
  000c4	ff 75 14	 push	 DWORD PTR _ObjectID$[ebp]
  000c7	8b 4c 99 10	 mov	 ecx, DWORD PTR [ecx+ebx*4+16]
  000cb	89 b4 01 88 00
	00 00		 mov	 DWORD PTR [ecx+eax+136], esi
  000d2	c6 86 b1 04 00
	00 01		 mov	 BYTE PTR [esi+1201], 1
  000d9	e8 00 00 00 00	 call	 ?BT_Intern_FinnishObject@@YAXK@Z ; BT_Intern_FinnishObject
; Line 1570
  000de	8b 87 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  000e4	83 c4 04	 add	 esp, 4
  000e7	8b 4d 08	 mov	 ecx, DWORD PTR tv663[ebp]
  000ea	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3c000000
  000f2	8b 44 98 10	 mov	 eax, DWORD PTR [eax+ebx*4+16]
  000f6	f3 0f 10 44 08
	0c		 movss	 xmm0, DWORD PTR [eax+ecx+12]
  000fc	8b 87 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
  00102	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00106	f3 0f 59 87 34
	00 00 00	 mulss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+52]
  0010e	f3 0f 58 80 84
	00 00 00	 addss	 xmm0, DWORD PTR [eax+132]
  00116	f3 0f 11 86 84
	00 00 00	 movss	 DWORD PTR [esi+132], xmm0
; Line 1571
  0011e	8b 87 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  00124	8b 44 98 10	 mov	 eax, DWORD PTR [eax+ebx*4+16]
  00128	f3 0f 10 44 08
	10		 movss	 xmm0, DWORD PTR [eax+ecx+16]
  0012e	8b 87 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
  00134	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00138	f3 0f 59 87 34
	00 00 00	 mulss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+52]
  00140	f3 0f 58 80 88
	00 00 00	 addss	 xmm0, DWORD PTR [eax+136]
  00148	f3 0f 11 86 88
	00 00 00	 movss	 DWORD PTR [esi+136], xmm0
; Line 1572
  00150	8b 87 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  00156	8b 44 98 10	 mov	 eax, DWORD PTR [eax+ebx*4+16]
  0015a	f3 0f 10 44 08
	14		 movss	 xmm0, DWORD PTR [eax+ecx+20]
  00160	8b 87 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
  00166	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0016a	f3 0f 59 87 34
	00 00 00	 mulss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+52]
  00172	f3 0f 58 80 8c
	00 00 00	 addss	 xmm0, DWORD PTR [eax+140]
  0017a	f3 0f 11 86 8c
	00 00 00	 movss	 DWORD PTR [esi+140], xmm0
; Line 1573
  00182	8b 87 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+16]
  00188	f3 0f 7e 80 9c
	00 00 00	 movq	 xmm0, QWORD PTR [eax+156]
  00190	66 0f d6 86 9c
	00 00 00	 movq	 QWORD PTR [esi+156], xmm0
  00198	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [eax+164]
  0019e	89 86 a4 00 00
	00		 mov	 DWORD PTR [esi+164], eax
; Line 1576
  001a4	8b 87 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edi+68]
  001aa	89 74 98 1c	 mov	 DWORD PTR [eax+ebx*4+28], esi
  001ae	5e		 pop	 esi
  001af	5b		 pop	 ebx
  001b0	5f		 pop	 edi
; Line 1591
  001b1	5d		 pop	 ebp
  001b2	c3		 ret	 0
$LN8@BT_MakeSec:
; Line 1580
  001b3	6a 1a		 push	 26			; 0000001aH
; Line 1583
  001b5	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  001ba	83 c4 04	 add	 esp, 4
  001bd	5b		 pop	 ebx
  001be	5f		 pop	 edi
; Line 1591
  001bf	5d		 pop	 ebp
  001c0	c3		 ret	 0
$LN6@BT_MakeSec:
; Line 1583
  001c1	6a 0d		 push	 13			; 0000000dH
  001c3	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  001c8	83 c4 04	 add	 esp, 4
  001cb	5b		 pop	 ebx
  001cc	5f		 pop	 edi
; Line 1591
  001cd	5d		 pop	 ebp
  001ce	c3		 ret	 0
$LN4@BT_MakeSec:
; Line 1586
  001cf	6a 05		 push	 5
  001d1	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  001d6	83 c4 04	 add	 esp, 4
  001d9	5f		 pop	 edi
; Line 1591
  001da	5d		 pop	 ebp
  001db	c3		 ret	 0
$LN2@BT_MakeSec:
; Line 1589
  001dc	6a 02		 push	 2
  001de	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  001e3	83 c4 04	 add	 esp, 4
  001e6	5f		 pop	 edi
; Line 1591
  001e7	5d		 pop	 ebp
  001e8	c3		 ret	 0
?BT_MakeSectorObject@@YAXKKKK@Z ENDP			; BT_MakeSectorObject
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetTerrainObjectID@@YAKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
?BT_GetTerrainObjectID@@YAKK@Z PROC			; BT_GetTerrainObjectID, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1510
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1512
  00006	c7 05 a8 73 00
	00 24 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 36 ; 00000024H
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 14		 ja	 SHORT $LN2@BT_GetTerr
; Line 3669
  0001a	6b c1 74	 imul	 eax, ecx, 116
; Line 1515
  0001d	80 b8 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[eax], 0
  00024	74 08		 je	 SHORT $LN2@BT_GetTerr
; Line 1518
  00026	8b 80 14 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[eax+20]
; Line 1523
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN2@BT_GetTerr:
; Line 1520
  0002e	6a 02		 push	 2
  00030	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00035	83 c4 04	 add	 esp, 4
; Line 1521
  00038	33 c0		 xor	 eax, eax
; Line 1523
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?BT_GetTerrainObjectID@@YAKK@Z ENDP			; BT_GetTerrainObjectID
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetStatistic@@YAKK@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?BT_GetStatistic@@YAKK@Z PROC				; BT_GetStatistic, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1486
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1491
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _code$[ebp]
  00006	c7 05 a8 73 00
	00 22 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 34 ; 00000022H
  00010	83 f9 01	 cmp	 ecx, 1
  00013	75 07		 jne	 SHORT $LN2@BT_GetStat
; Line 1492
  00015	a1 2c 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29740
; Line 1501
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
$LN2@BT_GetStat:
; Line 1494
  0001c	83 f9 02	 cmp	 ecx, 2
  0001f	75 07		 jne	 SHORT $LN3@BT_GetStat
; Line 1495
  00021	a1 30 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29744
; Line 1501
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
$LN3@BT_GetStat:
; Line 1497
  00028	33 c0		 xor	 eax, eax
  0002a	83 f9 03	 cmp	 ecx, 3
  0002d	0f 44 05 34 74
	00 00		 cmove	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29748
; Line 1501
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
?BT_GetStatistic@@YAKK@Z ENDP				; BT_GetStatistic
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_EnableAutoRender@@YAX_N@Z
_TEXT	SEGMENT
_AutoRender$ = 8					; size = 1
?BT_EnableAutoRender@@YAX_N@Z PROC			; BT_EnableAutoRender, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1471
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1476
  00003	8a 45 08	 mov	 al, BYTE PTR _AutoRender$[ebp]
  00006	c7 05 a8 73 00
	00 40 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 64 ; 00000040H
  00010	a2 61 74 00 00	 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29793, al
; Line 1477
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?BT_EnableAutoRender@@YAX_N@Z ENDP			; BT_EnableAutoRender
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetATMode@@YAX_N@Z
_TEXT	SEGMENT
_ATMode$ = 8						; size = 1
?BT_SetATMode@@YAX_N@Z PROC				; BT_SetATMode, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1456
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1461
  00003	8a 45 08	 mov	 al, BYTE PTR _ATMode$[ebp]
  00006	c7 05 a8 73 00
	00 37 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 55 ; 00000037H
  00010	a2 60 74 00 00	 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29792, al
; Line 1462
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?BT_SetATMode@@YAX_N@Z ENDP				; BT_SetATMode
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetBuildStep@@YAXK@Z
_TEXT	SEGMENT
_step$ = 8						; size = 4
?BT_SetBuildStep@@YAXK@Z PROC				; BT_SetBuildStep, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1441
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1446
  00003	8b 45 08	 mov	 eax, DWORD PTR _step$[ebp]
  00006	c7 05 a8 73 00
	00 1a 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 26 ; 0000001aH
  00010	a3 ac 73 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29612, eax
; Line 1447
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?BT_SetBuildStep@@YAXK@Z ENDP				; BT_SetBuildStep
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetVersion@@YAKXZ
_TEXT	SEGMENT
?BT_GetVersion@@YAKXZ PROC				; BT_GetVersion, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1429
  00000	c7 05 a8 73 00
	00 19 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 25 ; 00000019H
; Line 1434
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0N@IBEMBBGH@2?402?5R2?5FULL@
; Line 1435
  0000f	c3		 ret	 0
?BT_GetVersion@@YAKXZ ENDP				; BT_GetVersion
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetPointEnvironment@@YAKKMM@Z
_TEXT	SEGMENT
__real@3f800000$1$ = -8					; size = 4
tv328 = -4						; size = 4
tv323 = 8						; size = 4
_terrainid$ = 8						; size = 4
_x$ = 12						; size = 4
_z$ = 16						; size = 4
?BT_GetPointEnvironment@@YAKKMM@Z PROC			; BT_GetPointEnvironment, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1390
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1390
  00006	83 ec 08	 sub	 esp, 8
; Line 1392
  00009	c7 05 a8 73 00
	00 3b 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 59 ; 0000003bH
; Line 3666
  00013	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00016	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  0001b	0f 87 fc 00 00
	00		 ja	 $LN5@BT_GetPoin
; Line 3669
  00021	6b c9 74	 imul	 ecx, ecx, 116
; Line 1398
  00024	80 b9 00 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 1
  0002b	0f 85 ec 00 00
	00		 jne	 $LN5@BT_GetPoin
; Line 1400
  00031	80 b9 08 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx+8], 1
  00038	0f 85 df 00 00
	00		 jne	 $LN5@BT_GetPoin
; Line 1404
  0003e	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _x$[ebp]
  00043	0f 57 d2	 xorps	 xmm2, xmm2
  00046	0f 2f ca	 comiss	 xmm1, xmm2
  00049	0f 86 ce 00 00
	00		 jbe	 $LN5@BT_GetPoin
  0004f	f3 0f 10 81 4c
	00 00 00	 movss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+76]
  00057	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c000000
  0005f	f3 0f 10 a9 34
	00 00 00	 movss	 xmm5, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+52]
  00067	f3 0f 59 c5	 mulss	 xmm0, xmm5
  0006b	0f 2f c1	 comiss	 xmm0, xmm1
  0006e	0f 86 a9 00 00
	00		 jbe	 $LN5@BT_GetPoin
  00074	f3 0f 10 65 10	 movss	 xmm4, DWORD PTR _z$[ebp]
  00079	0f 2f e2	 comiss	 xmm4, xmm2
  0007c	0f 86 9b 00 00
	00		 jbe	 $LN5@BT_GetPoin
  00082	0f 2f c4	 comiss	 xmm0, xmm4
  00085	0f 86 92 00 00
	00		 jbe	 $LN5@BT_GetPoin
; Line 1407
  0008b	56		 push	 esi
  0008c	8b b1 64 00 00
	00		 mov	 esi, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+100]
  00092	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
  0009a	0f 28 ca	 movaps	 xmm1, xmm2
; Line 1411
  0009d	f3 0f 5e d5	 divss	 xmm2, xmm5
  000a1	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a4	66 0f 6e c0	 movd	 xmm0, eax
  000a8	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000ac	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000af	f3 0f 11 55 f8	 movss	 DWORD PTR __real@3f800000$1$[ebp], xmm2
  000b4	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  000bd	0f b7 81 48 00
	00 00		 movzx	 eax, WORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+72]
  000c4	66 0f 5a d8	 cvtpd2ps xmm3, xmm0
  000c8	66 0f 6e c0	 movd	 xmm0, eax
  000cc	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000cf	f3 0f 11 5d 08	 movss	 DWORD PTR tv323[ebp], xmm3
  000d4	f3 0f 5e c8	 divss	 xmm1, xmm0
  000d8	0f 28 c3	 movaps	 xmm0, xmm3
  000db	f3 0f 59 c4	 mulss	 xmm0, xmm4
  000df	f3 0f 11 4d fc	 movss	 DWORD PTR tv328[ebp], xmm1
  000e4	f3 0f 59 c1	 mulss	 xmm0, xmm1
  000e8	f3 0f 59 c2	 mulss	 xmm0, xmm2
  000ec	e8 00 00 00 00	 call	 __ftol3
  000f1	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR tv323[ebp]
  000f6	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _x$[ebp]
  000fb	50		 push	 eax
  000fc	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR tv328[ebp]
  00101	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR __real@3f800000$1$[ebp]
  00106	e8 00 00 00 00	 call	 __ftol3
  0010b	50		 push	 eax
  0010c	56		 push	 esi
  0010d	e8 00 00 00 00	 call	 ?BT_Intern_GetPointEnvironment@@YAGPAUBT_EnvironmentMap@@KK@Z ; BT_Intern_GetPointEnvironment
  00112	83 c4 0c	 add	 esp, 12			; 0000000cH
  00115	0f b7 c0	 movzx	 eax, ax
  00118	5e		 pop	 esi
; Line 1418
  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c3		 ret	 0
$LN5@BT_GetPoin:
; Line 1417
  0011d	33 c0		 xor	 eax, eax
; Line 1418
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c3		 ret	 0
?BT_GetPointEnvironment@@YAKKMM@Z ENDP			; BT_GetPointEnvironment
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetPointExcluded@@YAKKMM@Z
_TEXT	SEGMENT
_Px$2$ = -12						; size = 4
tv375 = -8						; size = 4
tv256 = -4						; size = 4
_Pz$2$ = 8						; size = 4
tv377 = 8						; size = 4
_terrainid$ = 8						; size = 4
_x$ = 12						; size = 4
_z$ = 16						; size = 4
?BT_GetPointExcluded@@YAKKMM@Z PROC			; BT_GetPointExcluded, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1364
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1364
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
; Line 1366
  00009	c7 05 a8 73 00
	00 36 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 54 ; 00000036H
; Line 3666
  00013	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00016	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  0001b	0f 87 c1 01 00
	00		 ja	 $LN3@BT_GetPoin
; Line 3669
  00021	6b c9 74	 imul	 ecx, ecx, 116
  00024	89 4d f8	 mov	 DWORD PTR tv375[ebp], ecx
; Line 1372
  00027	80 b9 00 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 1
  0002e	0f 85 ae 01 00
	00		 jne	 $LN3@BT_GetPoin
; Line 1374
  00034	80 b9 08 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx+8], 1
  0003b	0f 85 a1 01 00
	00		 jne	 $LN3@BT_GetPoin
; Line 1377
  00041	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f800000
  00049	0f 28 cf	 movaps	 xmm1, xmm7
  0004c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43000000
  00054	f3 0f 5e 89 34
	00 00 00	 divss	 xmm1, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+52]
; Line 4268
  0005c	f3 0f 10 99 4c
	00 00 00	 movss	 xmm3, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+76]
; Line 1377
  00064	0f 28 d1	 movaps	 xmm2, xmm1
; Line 4268
  00067	f3 0f 5c d8	 subss	 xmm3, xmm0
; Line 1377
  0006b	f3 0f 59 55 0c	 mulss	 xmm2, DWORD PTR _x$[ebp]
  00070	f3 0f 59 4d 10	 mulss	 xmm1, DWORD PTR _z$[ebp]
  00075	f3 0f 59 d0	 mulss	 xmm2, xmm0
  00079	f3 0f 59 c8	 mulss	 xmm1, xmm0
; Line 4268
  0007d	0f 2f d3	 comiss	 xmm2, xmm3
; Line 1377
  00080	f3 0f 11 55 f4	 movss	 DWORD PTR _Px$2$[ebp], xmm2
  00085	f3 0f 11 4d 08	 movss	 DWORD PTR _Pz$2$[ebp], xmm1
; Line 4268
  0008a	76 09		 jbe	 SHORT $LN9@BT_GetPoin
$LN35@BT_GetPoin:
; Line 1377
  0008c	b0 01		 mov	 al, 1
  0008e	0f b6 c0	 movzx	 eax, al
; Line 1381
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
$LN9@BT_GetPoin:
; Line 4271
  00095	0f 2f cb	 comiss	 xmm1, xmm3
  00098	77 f2		 ja	 SHORT $LN35@BT_GetPoin
  0009a	0f 57 c0	 xorps	 xmm0, xmm0
; Line 4274
  0009d	0f 2f c2	 comiss	 xmm0, xmm2
  000a0	77 ea		 ja	 SHORT $LN35@BT_GetPoin
; Line 4277
  000a2	0f 2f c1	 comiss	 xmm0, xmm1
  000a5	77 e5		 ja	 SHORT $LN35@BT_GetPoin
; Line 4281
  000a7	8b 91 44 00 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+68]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  000ad	f3 0f 10 35 00
	00 00 00	 movss	 xmm6, DWORD PTR __real@80000000
  000b5	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@4b000000
  000bd	0f 28 de	 movaps	 xmm3, xmm6
  000c0	0f 28 cd	 movaps	 xmm1, xmm5
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4281
  000c3	f3 0f 5e 7a 04	 divss	 xmm7, DWORD PTR [edx+4]
  000c8	53		 push	 ebx
  000c9	56		 push	 esi
; Line 4285
  000ca	0f b7 72 14	 movzx	 esi, WORD PTR [edx+20]
  000ce	57		 push	 edi
; Line 4281
  000cf	0f 28 e7	 movaps	 xmm4, xmm7
  000d2	f3 0f 59 e2	 mulss	 xmm4, xmm2
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  000d6	0f 54 dc	 andps	 xmm3, xmm4
  000d9	0f 28 c4	 movaps	 xmm0, xmm4
  000dc	0f 57 c3	 xorps	 xmm0, xmm3
  000df	0f 28 d4	 movaps	 xmm2, xmm4
  000e2	f3 0f c2 c5 01	 cmpltss xmm0, xmm5
  000e7	0f 54 c8	 andps	 xmm1, xmm0
  000ea	0f 56 cb	 orps	 xmm1, xmm3
  000ed	f3 0f 58 d1	 addss	 xmm2, xmm1
  000f1	f3 0f 5c d1	 subss	 xmm2, xmm1
  000f5	0f 28 c2	 movaps	 xmm0, xmm2
  000f8	f3 0f 5c c4	 subss	 xmm0, xmm4
  000fc	f3 0f c2 c3 06	 cmpnless xmm0, xmm3
  00101	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f800000
  00109	0f 54 c3	 andps	 xmm0, xmm3
  0010c	f3 0f 5c d0	 subss	 xmm2, xmm0
  00110	f3 0f 2c c2	 cvttss2si eax, xmm2
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4282
  00114	f3 0f 10 55 08	 movss	 xmm2, DWORD PTR _Pz$2$[ebp]
  00119	f3 0f 59 fa	 mulss	 xmm7, xmm2
  0011d	0f b7 c8	 movzx	 ecx, ax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  00120	89 45 fc	 mov	 DWORD PTR tv256[ebp], eax
  00123	0f 54 f7	 andps	 xmm6, xmm7
  00126	0f 28 c7	 movaps	 xmm0, xmm7
  00129	0f 57 c6	 xorps	 xmm0, xmm6
  0012c	0f 28 cf	 movaps	 xmm1, xmm7
  0012f	f3 0f c2 c5 01	 cmpltss xmm0, xmm5
  00134	0f 54 e8	 andps	 xmm5, xmm0
  00137	0f 56 ee	 orps	 xmm5, xmm6
  0013a	f3 0f 58 cd	 addss	 xmm1, xmm5
  0013e	f3 0f 5c cd	 subss	 xmm1, xmm5
  00142	0f 28 c1	 movaps	 xmm0, xmm1
  00145	f3 0f 5c c7	 subss	 xmm0, xmm7
  00149	f3 0f c2 c6 06	 cmpnless xmm0, xmm6
  0014e	0f 54 c3	 andps	 xmm0, xmm3
  00151	f3 0f 5c c8	 subss	 xmm1, xmm0
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4297
  00155	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _Px$2$[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  0015a	f3 0f 2c c1	 cvttss2si eax, xmm1
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 4282
  0015e	0f b7 d8	 movzx	 ebx, ax
; Line 4285
  00161	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  00164	89 45 08	 mov	 DWORD PTR tv377[ebp], eax
  00167	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
; Line 4288
  0016a	3b 4d 08	 cmp	 ecx, DWORD PTR tv377[ebp]
  0016d	0f b7 f8	 movzx	 edi, ax
  00170	8b 45 fc	 mov	 eax, DWORD PTR tv256[ebp]
  00173	8b d7		 mov	 edx, edi
  00175	0f b7 c0	 movzx	 eax, ax
  00178	0f 46 d0	 cmovbe	 edx, eax
; Line 4291
  0017b	8b c6		 mov	 eax, esi
  0017d	0f b7 f2	 movzx	 esi, dx
  00180	8b d7		 mov	 edx, edi
  00182	0f af f0	 imul	 esi, eax
  00185	3b 5d 08	 cmp	 ebx, DWORD PTR tv377[ebp]
  00188	f3 0f 2c c1	 cvttss2si eax, xmm1
; Line 4298
  0018c	5f		 pop	 edi
  0018d	0f b7 c0	 movzx	 eax, ax
  00190	0f 46 d0	 cmovbe	 edx, eax
  00193	66 03 f2	 add	 si, dx
  00196	8b 55 f8	 mov	 edx, DWORD PTR tv375[ebp]
  00199	0f b7 c6	 movzx	 eax, si
  0019c	69 c0 94 00 00
	00		 imul	 eax, eax, 148
  001a2	5e		 pop	 esi
  001a3	8b 8a 44 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+68]
  001a9	5b		 pop	 ebx
  001aa	03 41 10	 add	 eax, DWORD PTR [ecx+16]
; Line 4304
  001ad	80 38 00	 cmp	 BYTE PTR [eax], 0
  001b0	f3 0f 5c 40 0c	 subss	 xmm0, DWORD PTR [eax+12]
  001b5	f3 0f 5c 50 14	 subss	 xmm2, DWORD PTR [eax+20]
  001ba	75 1d		 jne	 SHORT $LN15@BT_GetPoin
; Line 4307
  001bc	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  001bf	83 ec 08	 sub	 esp, 8
  001c2	f3 0f 11 54 24
	04		 movss	 DWORD PTR [esp+4], xmm2
  001c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cd	e8 00 00 00 00	 call	 ?GetPointExcluded@BT_QuadMap@@QAE_NMM@Z ; BT_QuadMap::GetPointExcluded
; Line 1377
  001d2	0f b6 c0	 movzx	 eax, al
; Line 1381
  001d5	8b e5		 mov	 esp, ebp
  001d7	5d		 pop	 ebp
  001d8	c3		 ret	 0
$LN15@BT_GetPoin:
; Line 4310
  001d9	32 c0		 xor	 al, al
; Line 1377
  001db	0f b6 c0	 movzx	 eax, al
; Line 1381
  001de	8b e5		 mov	 esp, ebp
  001e0	5d		 pop	 ebp
  001e1	c3		 ret	 0
$LN3@BT_GetPoin:
; Line 1380
  001e2	33 c0		 xor	 eax, eax
; Line 1381
  001e4	8b e5		 mov	 esp, ebp
  001e6	5d		 pop	 ebp
  001e7	c3		 ret	 0
?BT_GetPointExcluded@@YAKKMM@Z ENDP			; BT_GetPointExcluded
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetTerrainSize@@YAMK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
?BT_GetTerrainSize@@YAMK@Z PROC				; BT_GetTerrainSize, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1338
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1340
  00006	c7 05 a8 73 00
	00 17 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 23 ; 00000017H
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 29		 ja	 SHORT $LN3@BT_GetTerr
; Line 3669
  0001a	6b c9 74	 imul	 ecx, ecx, 116
; Line 1346
  0001d	80 b9 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 0
  00024	74 1d		 je	 SHORT $LN3@BT_GetTerr
; Line 1348
  00026	80 b9 08 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx+8], 0
  0002d	74 14		 je	 SHORT $LN3@BT_GetTerr
; Line 1351
  0002f	d9 81 4c 00 00
	00		 fld	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+76]
  00035	d8 0d 00 00 00
	00		 fmul	 DWORD PTR __real@3c000000
  0003b	d8 89 34 00 00
	00		 fmul	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+52]
; Line 1356
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
$LN3@BT_GetTerr:
; Line 1355
  00043	d9 ee		 fldz
; Line 1356
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
?BT_GetTerrainSize@@YAMK@Z ENDP				; BT_GetTerrainSize
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetGroundHeight@@YAMKMM_N@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_x$ = 12						; size = 4
_z$ = 16						; size = 4
_Round$ = 20						; size = 1
?BT_GetGroundHeight@@YAMKMM_N@Z PROC			; BT_GetGroundHeight, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1293
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1295
  00006	c7 05 a8 73 00
	00 16 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 22 ; 00000016H
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 66		 ja	 SHORT $LN3@BT_GetGrou
; Line 3669
  0001a	6b c9 74	 imul	 ecx, ecx, 116
; Line 1301
  0001d	80 b9 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 0
; Line 3669
  00024	8d 91 00 00 00
	00		 lea	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx]
; Line 1301
  0002a	74 54		 je	 SHORT $LN3@BT_GetGrou
; Line 1303
  0002c	80 b9 08 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx+8], 0
  00033	74 4b		 je	 SHORT $LN3@BT_GetGrou
; Line 1306
  00035	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
  0003d	f3 0f 5e 91 34
	00 00 00	 divss	 xmm2, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+52]
  00045	ff 75 14	 push	 DWORD PTR _Round$[ebp]
  00048	0f 28 c2	 movaps	 xmm0, xmm2
  0004b	f3 0f 59 55 0c	 mulss	 xmm2, DWORD PTR _x$[ebp]
  00050	6a 00		 push	 0
  00052	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR _z$[ebp]
  00057	83 ec 08	 sub	 esp, 8
  0005a	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@43000000
  00062	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@43000000
  0006a	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00070	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 ?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z ; BT_Intern_GetPointHeight
  0007b	83 c4 14	 add	 esp, 20			; 00000014H
; Line 1311
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
$LN3@BT_GetGrou:
; Line 1310
  00080	d9 ee		 fldz
; Line 1311
  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
?BT_GetGroundHeight@@YAMKMM_N@Z ENDP			; BT_GetGroundHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_GetGroundHeight@@YAMKMM@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_x$ = 12						; size = 4
_z$ = 16						; size = 4
?BT_GetGroundHeight@@YAMKMM@Z PROC			; BT_GetGroundHeight, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1314
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 1316
  00006	c7 05 a8 73 00
	00 16 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 22 ; 00000016H
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 65		 ja	 SHORT $LN3@BT_GetGrou
; Line 3669
  0001a	6b c9 74	 imul	 ecx, ecx, 116
; Line 1322
  0001d	80 b9 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 0
; Line 3669
  00024	8d 91 00 00 00
	00		 lea	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx]
; Line 1322
  0002a	74 53		 je	 SHORT $LN3@BT_GetGrou
; Line 1324
  0002c	80 b9 08 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx+8], 0
  00033	74 4a		 je	 SHORT $LN3@BT_GetGrou
; Line 1327
  00035	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
  0003d	f3 0f 5e 91 34
	00 00 00	 divss	 xmm2, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+52]
  00045	6a 00		 push	 0
  00047	6a 00		 push	 0
  00049	83 ec 08	 sub	 esp, 8
  0004c	0f 28 c2	 movaps	 xmm0, xmm2
  0004f	f3 0f 59 55 0c	 mulss	 xmm2, DWORD PTR _x$[ebp]
  00054	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR _z$[ebp]
  00059	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@43000000
  00061	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@43000000
  00069	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0006f	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  00074	52		 push	 edx
  00075	e8 00 00 00 00	 call	 ?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z ; BT_Intern_GetPointHeight
  0007a	83 c4 14	 add	 esp, 20			; 00000014H
; Line 1332
  0007d	5d		 pop	 ebp
  0007e	c3		 ret	 0
$LN3@BT_GetGrou:
; Line 1331
  0007f	d9 ee		 fldz
; Line 1332
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
?BT_GetGroundHeight@@YAMKMM@Z ENDP			; BT_GetGroundHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_ForceTerrainTechnique@@YAXK@Z
_TEXT	SEGMENT
_QualityTechniqueMode$ = 8				; size = 4
?BT_ForceTerrainTechnique@@YAXK@Z PROC			; BT_ForceTerrainTechnique, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1285
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1286
  00003	8b 45 08	 mov	 eax, DWORD PTR _QualityTechniqueMode$[ebp]
  00006	a3 00 00 00 00	 mov	 DWORD PTR ?g_iQualityTechniqueMode@@3HA, eax ; g_iQualityTechniqueMode
; Line 1287
  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?BT_ForceTerrainTechnique@@YAXK@Z ENDP			; BT_ForceTerrainTechnique
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_DeleteTerrain@@YAXK@Z
_TEXT	SEGMENT
_TerrainID$ = 8						; size = 4
?BT_DeleteTerrain@@YAXK@Z PROC				; BT_DeleteTerrain, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1267
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _TerrainID$[ebp]
; Line 1269
  00006	c7 05 a8 73 00
	00 15 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 21 ; 00000015H
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 1a		 ja	 SHORT $LN2@BT_DeleteT
; Line 3669
  0001a	6b c1 74	 imul	 eax, ecx, 116
  0001d	8a 80 00 00 00
	00		 mov	 al, BYTE PTR ?BT_Main@@3Us_BT_main@@A[eax]
; Line 1272
  00023	84 c0		 test	 al, al
  00025	74 0d		 je	 SHORT $LN2@BT_DeleteT
; Line 1275
  00027	6a 01		 push	 1
  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 ?BT_Intern_DeleteTerrain@@YAXK_N@Z ; BT_Intern_DeleteTerrain
  0002f	83 c4 08	 add	 esp, 8
; Line 1281
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
$LN2@BT_DeleteT:
; Line 1277
  00034	c7 45 08 02 00
	00 00		 mov	 DWORD PTR _TerrainID$[ebp], 2
; Line 1281
  0003b	5d		 pop	 ebp
; Line 1277
  0003c	e9 00 00 00 00	 jmp	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
?BT_DeleteTerrain@@YAXK@Z ENDP				; BT_DeleteTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_TerrainExist@@YAKK@Z
_TEXT	SEGMENT
_TerrainID$ = 8						; size = 4
?BT_TerrainExist@@YAKK@Z PROC				; BT_TerrainExist, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1246
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _TerrainID$[ebp]
; Line 1248
  00006	c7 05 a8 73 00
	00 14 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 20 ; 00000014H
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 12		 ja	 SHORT $LN2@BT_Terrain
; Line 3669
  0001a	6b c1 74	 imul	 eax, ecx, 116
  0001d	8a 88 00 00 00
	00		 mov	 cl, BYTE PTR ?BT_Main@@3Us_BT_main@@A[eax]
; Line 1251
  00023	33 c0		 xor	 eax, eax
  00025	84 c9		 test	 cl, cl
  00027	0f 95 c0	 setne	 al
; Line 1258
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
$LN2@BT_Terrain:
; Line 1257
  0002c	33 c0		 xor	 eax, eax
; Line 1258
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?BT_TerrainExist@@YAKK@Z ENDP				; BT_TerrainExist
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_ContinueBuild@@YAHXZ
_TEXT	SEGMENT
?BT_Main@@3Us_BT_main@@A$3 = -8				; size = 4
?BT_Main@@3Us_BT_main@@A$2 = -4				; size = 4
?BT_ContinueBuild@@YAHXZ PROC				; BT_ContinueBuild, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 1185
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; Line 1187
  00006	c7 05 a8 73 00
	00 13 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 19 ; 00000013H
; Line 1190
  00010	33 c0		 xor	 eax, eax
; Line 1196
  00012	80 3d 8c 73 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29580, 1
  00019	53		 push	 ebx
  0001a	0f 85 81 01 00
	00		 jne	 $LN1@BT_Continu
; Line 1198
  00020	8b 0d 90 73 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29584
  00026	8b 1d a4 73 00
	00		 mov	 ebx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29604
  0002c	57		 push	 edi
  0002d	8b 3d ac 73 00
	00		 mov	 edi, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29612
  00033	0f b7 41 42	 movzx	 eax, WORD PTR [ecx+66]
  00037	89 4d fc	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A$2[ebp], ecx
  0003a	8b d0		 mov	 edx, eax
  0003c	89 5d f8	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A$3[ebp], ebx
  0003f	3b f8		 cmp	 edi, eax
  00041	76 0c		 jbe	 SHORT $LN6@BT_Continu
; Line 1199
  00043	c7 05 ac 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29612, 0
; Line 1202
  0004d	eb 04		 jmp	 SHORT $LN22@BT_Continu
$LN6@BT_Continu:
  0004f	85 ff		 test	 edi, edi
  00051	75 08		 jne	 SHORT $LN8@BT_Continu
$LN22@BT_Continu:
; Line 1204
  00053	0f b7 41 42	 movzx	 eax, WORD PTR [ecx+66]
  00057	8b f8		 mov	 edi, eax
  00059	2b fb		 sub	 edi, ebx
$LN8@BT_Continu:
; Line 1208
  0005b	0f b7 d0	 movzx	 edx, ax
  0005e	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  00061	3b c2		 cmp	 eax, edx
  00063	76 04		 jbe	 SHORT $LN9@BT_Continu
; Line 1209
  00065	8b fa		 mov	 edi, edx
  00067	2b fb		 sub	 edi, ebx
$LN9@BT_Continu:
; Line 1212
  00069	85 ff		 test	 edi, edi
  0006b	0f 8e a0 00 00
	00		 jle	 $LN3@BT_Continu
  00071	8b 15 a0 73 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29600
  00077	56		 push	 esi
  00078	8b 35 94 73 00
	00		 mov	 esi, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29588
  0007e	66 90		 npad	 2
$LL4@BT_Continu:
; Line 3625
  00080	8b 45 fc	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A$2[ebp]
  00083	8d 0c d2	 lea	 ecx, DWORD PTR [edx+edx*8]
  00086	69 de 94 00 00
	00		 imul	 ebx, esi, 148
  0008c	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  0008f	03 5c 88 10	 add	 ebx, DWORD PTR [eax+ecx*4+16]
; Line 3628
  00093	80 3b 00	 cmp	 BYTE PTR [ebx], 0
  00096	75 25		 jne	 SHORT $LN15@BT_Continu
; Line 3635
  00098	53		 push	 ebx
  00099	e8 00 00 00 00	 call	 ?BT_Intern_BuildSector@@YAXPAUs_BT_Sector@@@Z ; BT_Intern_BuildSector
  0009e	a1 a4 73 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29604
  000a3	83 c4 04	 add	 esp, 4
  000a6	8b 15 a0 73 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29600
  000ac	8b 35 94 73 00
	00		 mov	 esi, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29588
  000b2	89 45 f8	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A$3[ebp], eax
  000b5	a1 90 73 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29584
  000ba	89 45 fc	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A$2[ebp], eax
$LN15@BT_Continu:
; Line 3640
  000bd	0f b7 43 08	 movzx	 eax, WORD PTR [ebx+8]
; Line 3648
  000c1	8d 0c d2	 lea	 ecx, DWORD PTR [edx+edx*8]
  000c4	a3 98 73 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29592, eax
  000c9	46		 inc	 esi
  000ca	0f b7 43 0a	 movzx	 eax, WORD PTR [ebx+10]
  000ce	8b 5d f8	 mov	 ebx, DWORD PTR ?BT_Main@@3Us_BT_main@@A$3[ebp]
  000d1	a3 9c 73 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29596, eax
  000d6	43		 inc	 ebx
  000d7	8b 45 fc	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A$2[ebp]
  000da	89 35 94 73 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29588, esi
  000e0	89 1d a4 73 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29604, ebx
  000e6	89 5d f8	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A$3[ebp], ebx
  000e9	8b 40 44	 mov	 eax, DWORD PTR [eax+68]
  000ec	0f b7 44 88 0a	 movzx	 eax, WORD PTR [eax+ecx*4+10]
  000f1	3b f0		 cmp	 esi, eax
  000f3	75 0f		 jne	 SHORT $LN2@BT_Continu
; Line 3650
  000f5	33 f6		 xor	 esi, esi
; Line 3651
  000f7	42		 inc	 edx
  000f8	89 35 94 73 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29588, esi
  000fe	89 15 a0 73 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29600, edx
$LN2@BT_Continu:
; Line 1212
  00104	83 ef 01	 sub	 edi, 1
  00107	0f 85 73 ff ff
	ff		 jne	 $LL4@BT_Continu
  0010d	8b 4d fc	 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A$2[ebp]
  00110	5e		 pop	 esi
$LN3@BT_Continu:
; Line 1218
  00111	0f b7 41 42	 movzx	 eax, WORD PTR [ecx+66]
  00115	5f		 pop	 edi
  00116	3b d8		 cmp	 ebx, eax
  00118	75 51		 jne	 SHORT $LN10@BT_Continu
; Line 1221
  0011a	c6 05 8c 73 00
	00 00		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29580, 0
; Line 1222
  00121	c6 41 09 01	 mov	 BYTE PTR [ecx+9], 1
; Line 1223
  00125	a1 90 73 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29584
  0012a	5b		 pop	 ebx
  0012b	8b 40 70	 mov	 eax, DWORD PTR [eax+112]
  0012e	c6 40 01 01	 mov	 BYTE PTR [eax+1], 1
; Line 1229
  00132	83 c8 ff	 or	 eax, -1
  00135	c7 05 90 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29584, 0
  0013f	c7 05 a0 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29600, 0
  00149	c7 05 94 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29588, 0
  00153	c7 05 98 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29592, 0
  0015d	c7 05 9c 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29596, 0
; Line 1237
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c3		 ret	 0
$LN10@BT_Continu:
  0016b	66 0f 6e c3	 movd	 xmm0, ebx
; Line 1233
  0016f	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00173	c1 eb 1f	 shr	 ebx, 31			; 0000001fH
  00176	f2 0f 58 04 dd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ebx*8]
  0017f	66 0f 5a c8	 cvtpd2ps xmm1, xmm0
  00183	66 0f 6e c0	 movd	 xmm0, eax
  00187	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0018a	f3 0f 5e c8	 divss	 xmm1, xmm0
  0018e	0f 5a c1	 cvtps2pd xmm0, xmm1
  00191	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00199	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
; Line 1234
  0019d	f3 0f 2c c0	 cvttss2si eax, xmm0
$LN1@BT_Continu:
  001a1	5b		 pop	 ebx
; Line 1237
  001a2	8b e5		 mov	 esp, ebp
  001a4	5d		 pop	 ebp
  001a5	c3		 ret	 0
?BT_ContinueBuild@@YAHXZ ENDP				; BT_ContinueBuild
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_BuildTerrain@@YAXKK_N@Z
_TEXT	SEGMENT
_s_desc$1 = -140					; size = 48
_Generator$ = -128					; size = 36
_Terrain$1$ = -92					; size = 4
tv5960 = -88						; size = 4
_SectorPtr$1$ = -84					; size = 4
tv5917 = -80						; size = 4
_StartY$1$ = -76					; size = 4
tv5844 = -72						; size = 4
tv5974 = -68						; size = 4
_D3DColour$2 = -64					; size = 16
_vs_desc$3 = -56					; size = 8
_tempbuildstep$1$ = -52					; size = 4
tv5941 = -52						; size = 4
tv5863 = -52						; size = 4
tv5824 = -52						; size = 4
tv5721 = -48						; size = 4
tv5657 = -48						; size = 4
_Sectors$1$ = -44					; size = 4
tv5823 = -44						; size = 4
_StartX$1$ = -40					; size = 4
_tIndex$1$ = -36					; size = 4
_Heightmapmemblock$1$ = -36				; size = 4
_y$1$ = -32						; size = 4
tv5815 = -32						; size = 4
tv5984 = -28						; size = 4
tv5909 = -28						; size = 4
_LODLevelPtr$1$ = -24					; size = 4
_Split$1$ = -22						; size = 2
_x$1$ = -20						; size = 4
_Y$1$ = -20						; size = 4
_currentvertex$1$ = -20					; size = 4
?BT_Main@@3Us_BT_main@@A$1 = -16			; size = 4
_Generator$2$ = -16					; size = 4
_HeightmapImg$1$ = -16					; size = 4
tv5859 = -16						; size = 4
_Split$4 = -16						; size = 2
_Excludememblock$1$ = -12				; size = 4
_HeightmapMemblockPtr$1$ = -12				; size = 4
_i$5 = -12						; size = 1
tv5975 = -12						; size = 4
tv5856 = -12						; size = 4
_Sector$1$ = -8						; size = 4
tv5908 = -8						; size = 4
tv5814 = -8						; size = 4
_LODLevel$2$ = -2					; size = 1
_LODLevel$1$ = -2					; size = 1
$T6 = -1						; size = 1
_SmoothLevel$1$ = -1					; size = 1
_Generator$3$ = -1					; size = 1
_LODLevel$3$ = -1					; size = 1
tv5969 = -1						; size = 1
tv5948 = -1						; size = 1
_terrainid$ = 8						; size = 4
_ObjectID$ = 12						; size = 4
_GenerateTerrain$ = 16					; size = 1
?BT_BuildTerrain@@YAXKK_N@Z PROC			; BT_BuildTerrain, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 664
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
; Line 667
  00009	c7 05 a8 73 00
	00 12 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 18 ; 00000012H
; Line 689
  00013	80 3d 8c 73 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29580, 0
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	74 0a		 je	 SHORT $LN33@BT_BuildTe
; Line 690
  0001f	6a 08		 push	 8
  00021	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00026	83 c4 04	 add	 esp, 4
$LN33@BT_BuildTe:
; Line 3666
  00029	8b 45 08	 mov	 eax, DWORD PTR _terrainid$[ebp]
  0002c	6b d8 74	 imul	 ebx, eax, 116
  0002f	48		 dec	 eax
  00030	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00035	0f 87 e3 11 00
	00		 ja	 $LN34@BT_BuildTe
; Line 693
  0003b	80 bb 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx], 0
  00042	0f 84 d6 11 00
	00		 je	 $LN34@BT_BuildTe
; Line 699
  00048	80 bb 08 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+8], 1
  0004f	8d 83 00 00 00
	00		 lea	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx]
  00055	89 45 a4	 mov	 DWORD PTR _Terrain$1$[ebp], eax
  00058	75 0a		 jne	 SHORT $LN36@BT_BuildTe
; Line 700
  0005a	6a 11		 push	 17			; 00000011H
  0005c	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00061	83 c4 04	 add	 esp, 4
$LN36@BT_BuildTe:
; Line 703
  00064	8b b3 18 00 00
	00		 mov	 esi, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+24]
  0006a	89 75 f0	 mov	 DWORD PTR _HeightmapImg$1$[ebp], esi
; Line 3683
  0006d	85 f6		 test	 esi, esi
  0006f	0f 84 98 11 00
	00		 je	 $LN232@BT_BuildTe
; Line 3686
  00075	56		 push	 esi
  00076	e8 00 00 00 00	 call	 ?GetImageExistEx@@YAHH@Z ; GetImageExistEx
  0007b	83 c4 04	 add	 esp, 4
; Line 708
  0007e	85 c0		 test	 eax, eax
  00080	0f 84 87 11 00
	00		 je	 $LN232@BT_BuildTe
; Line 715
  00086	8b 83 1c 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+28]
; Line 3683
  0008c	85 c0		 test	 eax, eax
  0008e	74 0d		 je	 SHORT $LN233@BT_BuildTe
; Line 3686
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?GetImageExistEx@@YAHH@Z ; GetImageExistEx
  00096	83 c4 04	 add	 esp, 4
; Line 715
  00099	85 c0		 test	 eax, eax
  0009b	75 0a		 jne	 SHORT $LN38@BT_BuildTe
$LN233@BT_BuildTe:
; Line 716
  0009d	c7 83 1c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+28], 0
$LN38@BT_BuildTe:
; Line 719
  000a7	8b 83 20 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+32]
; Line 3683
  000ad	85 c0		 test	 eax, eax
  000af	74 0d		 je	 SHORT $LN234@BT_BuildTe
; Line 3686
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ?GetImageExistEx@@YAHH@Z ; GetImageExistEx
  000b7	83 c4 04	 add	 esp, 4
; Line 719
  000ba	85 c0		 test	 eax, eax
  000bc	75 0a		 jne	 SHORT $LN39@BT_BuildTe
$LN234@BT_BuildTe:
; Line 720
  000be	c7 83 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+32], 0
$LN39@BT_BuildTe:
; Line 723
  000c8	8b 83 24 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+36]
; Line 3683
  000ce	85 c0		 test	 eax, eax
  000d0	74 0d		 je	 SHORT $LN235@BT_BuildTe
; Line 3686
  000d2	50		 push	 eax
  000d3	e8 00 00 00 00	 call	 ?GetImageExistEx@@YAHH@Z ; GetImageExistEx
  000d8	83 c4 04	 add	 esp, 4
; Line 723
  000db	85 c0		 test	 eax, eax
  000dd	75 0a		 jne	 SHORT $LN40@BT_BuildTe
$LN235@BT_BuildTe:
; Line 724
  000df	c7 83 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+36], 0
$LN40@BT_BuildTe:
; Line 727
  000e9	8b 83 28 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+40]
; Line 3683
  000ef	85 c0		 test	 eax, eax
  000f1	74 0d		 je	 SHORT $LN236@BT_BuildTe
; Line 3686
  000f3	50		 push	 eax
  000f4	e8 00 00 00 00	 call	 ?GetImageExistEx@@YAHH@Z ; GetImageExistEx
  000f9	83 c4 04	 add	 esp, 4
; Line 727
  000fc	85 c0		 test	 eax, eax
  000fe	75 0a		 jne	 SHORT $LN238@BT_BuildTe
$LN236@BT_BuildTe:
; Line 728
  00100	c7 83 28 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+40], 0
$LN238@BT_BuildTe:
; Line 733
  0010a	33 ff		 xor	 edi, edi
  0010c	0f 1f 40 00	 npad	 4
$LL4@BT_BuildTe:
; Line 735
  00110	47		 inc	 edi
; Line 736
  00111	57		 push	 edi
  00112	e8 00 00 00 00	 call	 ?MemblockExist@@YAHH@Z	; MemblockExist
  00117	83 c4 04	 add	 esp, 4
  0011a	85 c0		 test	 eax, eax
  0011c	75 f2		 jne	 SHORT $LL4@BT_BuildTe
; Line 739
  0011e	56		 push	 esi
  0011f	57		 push	 edi
  00120	89 7d dc	 mov	 DWORD PTR _Heightmapmemblock$1$[ebp], edi
  00123	e8 00 00 00 00	 call	 ?CreateMemblockFromImage@@YAXHH@Z ; CreateMemblockFromImage
; Line 740
  00128	57		 push	 edi
  00129	e8 00 00 00 00	 call	 ?GetMemblockPtr@@YAPADH@Z ; GetMemblockPtr
  0012e	8b f0		 mov	 esi, eax
  00130	83 c4 0c	 add	 esp, 12			; 0000000cH
  00133	89 75 f4	 mov	 DWORD PTR _HeightmapMemblockPtr$1$[ebp], esi
; Line 745
  00136	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00138	3b 4e 04	 cmp	 ecx, DWORD PTR [esi+4]
  0013b	74 0a		 je	 SHORT $LN42@BT_BuildTe
; Line 746
  0013d	6a 06		 push	 6
  0013f	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00144	83 c4 04	 add	 esp, 4
$LN42@BT_BuildTe:
; Line 749
  00147	8b 3e		 mov	 edi, DWORD PTR [esi]
; Line 750
  00149	8b c7		 mov	 eax, edi
  0014b	f7 d8		 neg	 eax
  0014d	23 c7		 and	 eax, edi
  0014f	3b c7		 cmp	 eax, edi
  00151	74 0a		 je	 SHORT $LN43@BT_BuildTe
; Line 751
  00153	6a 06		 push	 6
  00155	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0015a	83 c4 04	 add	 esp, 4
$LN43@BT_BuildTe:
; Line 754
  0015d	81 ff 80 00 00
	00		 cmp	 edi, 128		; 00000080H
  00163	7c 08		 jl	 SHORT $LN243@BT_BuildTe
; Line 758
  00165	81 ff 00 10 00
	00		 cmp	 edi, 4096		; 00001000H
  0016b	7e 0a		 jle	 SHORT $LN45@BT_BuildTe
$LN243@BT_BuildTe:
; Line 759
  0016d	6a 06		 push	 6
  0016f	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00174	83 c4 04	 add	 esp, 4
$LN45@BT_BuildTe:
; Line 763
  00177	8b 83 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+112]
  0017d	0f b7 0e	 movzx	 ecx, WORD PTR [esi]
  00180	66 89 8b 48 00
	00 00		 mov	 WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+72], cx
  00187	66 89 48 20	 mov	 WORD PTR [eax+32], cx
; Line 766
  0018b	8b 83 28 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+40]
  00191	85 c0		 test	 eax, eax
  00193	74 1f		 je	 SHORT $LN47@BT_BuildTe
; Line 768
  00195	50		 push	 eax
  00196	e8 00 00 00 00	 call	 ?ImageWidth@@YAHH@Z	; ImageWidth
; Line 769
  0019b	ff 75 f0	 push	 DWORD PTR _HeightmapImg$1$[ebp]
  0019e	e8 00 00 00 00	 call	 ?ImageWidth@@YAHH@Z	; ImageWidth
  001a3	83 c4 08	 add	 esp, 8
  001a6	85 c0		 test	 eax, eax
  001a8	75 0a		 jne	 SHORT $LN47@BT_BuildTe
; Line 770
  001aa	6a 07		 push	 7
  001ac	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  001b1	83 c4 04	 add	 esp, 4
$LN47@BT_BuildTe:
; Line 774
  001b4	8b 8b 44 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  001ba	66 83 79 14 00	 cmp	 WORD PTR [ecx+20], 0
  001bf	75 0f		 jne	 SHORT $LN48@BT_BuildTe
; Line 775
  001c1	66 8b 83 48 00
	00 00		 mov	 ax, WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+72]
  001c8	66 c1 e8 05	 shr	 ax, 5
  001cc	66 89 41 14	 mov	 WORD PTR [ecx+20], ax
$LN48@BT_BuildTe:
; Line 778
  001d0	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  001d6	33 d2		 xor	 edx, edx
  001d8	0f b7 48 14	 movzx	 ecx, WORD PTR [eax+20]
  001dc	0f b7 83 48 00
	00 00		 movzx	 eax, WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+72]
  001e3	f7 f1		 div	 ecx
  001e5	83 f8 40	 cmp	 eax, 64			; 00000040H
  001e8	7e 0a		 jle	 SHORT $LN49@BT_BuildTe
; Line 779
  001ea	6a 16		 push	 22			; 00000016H
  001ec	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  001f1	83 c4 04	 add	 esp, 4
$LN49@BT_BuildTe:
; Line 783
  001f4	0f b7 83 48 00
	00 00		 movzx	 eax, WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+72]
  001fb	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@43000000
  00203	48		 dec	 eax
; Line 785
  00204	8a 8b 32 00 00
	00		 mov	 cl, BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+50]
  0020a	88 4d ff	 mov	 BYTE PTR $T6[ebp], cl
  0020d	66 0f 6e c0	 movd	 xmm0, eax
  00211	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00217	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0021a	f3 0f 59 c2	 mulss	 xmm0, xmm2
  0021e	f3 0f 11 83 4c
	00 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+76], xmm0
  00226	0f b7 40 14	 movzx	 eax, WORD PTR [eax+20]
  0022a	89 45 f0	 mov	 DWORD PTR _Split$4[ebp], eax
  0022d	32 c0		 xor	 al, al
  0022f	88 45 fe	 mov	 BYTE PTR _LODLevel$1$[ebp], al
  00232	84 c9		 test	 cl, cl
  00234	74 7c		 je	 SHORT $LN6@BT_BuildTe
  00236	66 8b 4d f0	 mov	 cx, WORD PTR _Split$4[ebp]
  0023a	66 0f 1f 44 00
	00		 npad	 6
$LL7@BT_BuildTe:
; Line 788
  00240	0f b6 c0	 movzx	 eax, al
; Line 795
  00243	33 d2		 xor	 edx, edx
  00245	8d 3c c0	 lea	 edi, DWORD PTR [eax+eax*8]
  00248	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  0024e	66 89 4c b8 14	 mov	 WORD PTR [eax+edi*4+20], cx
  00253	f3 0f 10 8b 4c
	00 00 00	 movss	 xmm1, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+76]
  0025b	66 d1 e9	 shr	 cx, 1
  0025e	f3 0f 58 ca	 addss	 xmm1, xmm2
  00262	66 89 4d ea	 mov	 WORD PTR _Split$1$[ebp], cx
  00266	8b 8b 44 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  0026c	0f b7 44 b9 14	 movzx	 eax, WORD PTR [ecx+edi*4+20]
  00271	66 0f 6e c0	 movd	 xmm0, eax
  00275	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00278	f3 0f 5e c8	 divss	 xmm1, xmm0
  0027c	f3 0f 11 4c b9
	04		 movss	 DWORD PTR [ecx+edi*4+4], xmm1
  00282	8b b3 44 00 00
	00		 mov	 esi, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00288	0f b7 83 48 00
	00 00		 movzx	 eax, WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+72]
  0028f	0f b7 4e 14	 movzx	 ecx, WORD PTR [esi+20]
  00293	f7 f1		 div	 ecx
  00295	88 44 be 08	 mov	 BYTE PTR [esi+edi*4+8], al
  00299	8a 45 fe	 mov	 al, BYTE PTR _LODLevel$1$[ebp]
  0029c	8a 8b 32 00 00
	00		 mov	 cl, BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+50]
  002a2	fe c0		 inc	 al
  002a4	88 4d ff	 mov	 BYTE PTR $T6[ebp], cl
  002a7	3a c1		 cmp	 al, cl
  002a9	66 8b 4d ea	 mov	 cx, WORD PTR _Split$1$[ebp]
  002ad	88 45 fe	 mov	 BYTE PTR _LODLevel$1$[ebp], al
  002b0	72 8e		 jb	 SHORT $LL7@BT_BuildTe
$LN6@BT_BuildTe:
; Line 799
  002b2	8b b3 44 00 00
	00		 mov	 esi, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  002b8	0f b7 46 14	 movzx	 eax, WORD PTR [esi+20]
  002bc	66 0f 6e c0	 movd	 xmm0, eax
  002c0	0f 5b c0	 cvtdq2ps xmm0, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 713
  002c3	e8 00 00 00 00	 call	 ___libm_sse2_log10f
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 799
  002c8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@c0549a78
  002d0	b9 01 00 00 00	 mov	 ecx, 1
  002d5	89 4d d0	 mov	 DWORD PTR tv5657[ebp], ecx
  002d8	f3 0f 2c c0	 cvttss2si eax, xmm0
  002dc	2b c8		 sub	 ecx, eax
; Line 800
  002de	38 4d ff	 cmp	 BYTE PTR $T6[ebp], cl
  002e1	76 2a		 jbe	 SHORT $LN51@BT_BuildTe
; Line 803
  002e3	8d 04 c9	 lea	 eax, DWORD PTR [ecx+ecx*8]
  002e6	88 8b 32 00 00
	00		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+50], cl
  002ec	c1 e0 02	 shl	 eax, 2
  002ef	50		 push	 eax
  002f0	56		 push	 esi
  002f1	e8 00 00 00 00	 call	 _realloc
  002f6	83 c4 08	 add	 esp, 8
  002f9	89 83 44 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68], eax
; Line 804
  002ff	85 c0		 test	 eax, eax
  00301	75 0a		 jne	 SHORT $LN51@BT_BuildTe
; Line 805
  00303	6a 1b		 push	 27			; 0000001bH
  00305	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0030a	83 c4 04	 add	 esp, 4
$LN51@BT_BuildTe:
; Line 811
  0030d	0f b7 83 48 00
	00 00		 movzx	 eax, WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+72]
  00314	0f af c0	 imul	 eax, eax
  00317	c1 e0 02	 shl	 eax, 2
  0031a	50		 push	 eax
  0031b	e8 00 00 00 00	 call	 _malloc
  00320	83 c4 04	 add	 esp, 4
  00323	89 83 0c 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+12], eax
; Line 812
  00329	85 c0		 test	 eax, eax
  0032b	75 0a		 jne	 SHORT $LN52@BT_BuildTe
; Line 813
  0032d	6a 1b		 push	 27			; 0000001bH
  0032f	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00334	83 c4 04	 add	 esp, 4
$LN52@BT_BuildTe:
; Line 817
  00337	a0 60 74 00 00	 mov	 al, BYTE PTR ?BT_Main@@3Us_BT_main@@A+29792
; Line 818
  0033c	33 c9		 xor	 ecx, ecx
  0033e	88 83 5c 00 00
	00		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+92], al
  00344	33 ff		 xor	 edi, edi
  00346	0f b7 83 48 00
	00 00		 movzx	 eax, WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+72]
  0034d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _currentvertex$1$[ebp], 0
  00354	66 3b c8	 cmp	 cx, ax
  00357	0f 83 a2 00 00
	00		 jae	 $LN9@BT_BuildTe
  0035d	0f 1f 00	 npad	 3
$LL10@BT_BuildTe:
; Line 820
  00360	33 d2		 xor	 edx, edx
  00362	0f b7 c8	 movzx	 ecx, ax
  00365	33 f6		 xor	 esi, esi
  00367	66 3b d0	 cmp	 dx, ax
  0036a	0f 83 82 00 00
	00		 jae	 $LN8@BT_BuildTe
  00370	0f b7 c8	 movzx	 ecx, ax
$LL13@BT_BuildTe:
; Line 822
  00373	80 bb 5c 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+92], 0
  0037a	74 0a		 je	 SHORT $LN53@BT_BuildTe
; Line 825
  0037c	8b c1		 mov	 eax, ecx
  0037e	2b c7		 sub	 eax, edi
  00380	48		 dec	 eax
  00381	0f b7 c0	 movzx	 eax, ax
; Line 826
  00384	eb 03		 jmp	 SHORT $LN54@BT_BuildTe
$LN53@BT_BuildTe:
; Line 828
  00386	0f b7 c7	 movzx	 eax, di
$LN54@BT_BuildTe:
; Line 830
  00389	0f b7 c9	 movzx	 ecx, cx
  0038c	0f b7 c0	 movzx	 eax, ax
  0038f	0f af c8	 imul	 ecx, eax
  00392	0f b7 c6	 movzx	 eax, si
  00395	03 c8		 add	 ecx, eax
; Line 4768
  00397	8b 45 f4	 mov	 eax, DWORD PTR _HeightmapMemblockPtr$1$[ebp]
  0039a	ff 74 88 0c	 push	 DWORD PTR [eax+ecx*4+12]
  0039e	8d 4d c0	 lea	 ecx, DWORD PTR _D3DColour$2[ebp]
  003a1	e8 00 00 00 00	 call	 ??0GGCOLOR@@QAE@K@Z	; GGCOLOR::GGCOLOR
; Line 4770
  003a6	f3 0f 10 4d c0	 movss	 xmm1, DWORD PTR _D3DColour$2[ebp]
; Line 820
  003ab	46		 inc	 esi
; Line 4770
  003ac	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@43800000
; Line 830
  003b4	8b 55 ec	 mov	 edx, DWORD PTR _currentvertex$1$[ebp]
; Line 4770
  003b7	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _D3DColour$2[ebp+8]
  003bc	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3b800000
; Line 830
  003c4	8b 83 0c 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+12]
; Line 4770
  003ca	f3 0f 58 4d c4	 addss	 xmm1, DWORD PTR _D3DColour$2[ebp+4]
  003cf	f3 0f 58 c8	 addss	 xmm1, xmm0
; Line 830
  003d3	f3 0f 59 8b 38
	00 00 00	 mulss	 xmm1, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+56]
  003db	f3 0f 11 0c 90	 movss	 DWORD PTR [eax+edx*4], xmm1
; Line 831
  003e0	42		 inc	 edx
  003e1	0f b7 83 48 00
	00 00		 movzx	 eax, WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+72]
  003e8	89 55 ec	 mov	 DWORD PTR _currentvertex$1$[ebp], edx
  003eb	8b c8		 mov	 ecx, eax
  003ed	66 3b f0	 cmp	 si, ax
  003f0	72 81		 jb	 SHORT $LL13@BT_BuildTe
$LN8@BT_BuildTe:
; Line 818
  003f2	47		 inc	 edi
  003f3	0f b7 c1	 movzx	 eax, cx
  003f6	66 3b f9	 cmp	 di, cx
  003f9	0f 82 61 ff ff
	ff		 jb	 $LL10@BT_BuildTe
$LN9@BT_BuildTe:
; Line 836
  003ff	8b 75 dc	 mov	 esi, DWORD PTR _Heightmapmemblock$1$[ebp]
  00402	56		 push	 esi
  00403	e8 00 00 00 00	 call	 ?DeleteMemblock@@YAXH@Z	; DeleteMemblock
; Line 4785
  00408	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@3f000000
  00410	32 d2		 xor	 dl, dl
; Line 836
  00412	83 c4 04	 add	 esp, 4
; Line 4785
  00415	88 55 ff	 mov	 BYTE PTR _SmoothLevel$1$[ebp], dl
  00418	83 bb 2c 00 00
	00 00		 cmp	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+44], 0
  0041f	0f 86 38 01 00
	00		 jbe	 $LN129@BT_BuildTe
  00425	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3ccccccd
  0042d	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3dcccccd
  00435	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL130@BT_BuildTe:
; Line 4786
  00440	0f b7 8b 48 00
	00 00		 movzx	 ecx, WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+72]
  00447	bf 01 00 00 00	 mov	 edi, 1
  0044c	89 7d e0	 mov	 DWORD PTR _y$1$[ebp], edi
  0044f	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00452	3b c7		 cmp	 eax, edi
  00454	0f 8e ec 00 00
	00		 jle	 $LN128@BT_BuildTe
  0045a	8b d1		 mov	 edx, ecx
  0045c	8b cf		 mov	 ecx, edi
  0045e	89 4d e4	 mov	 DWORD PTR tv5909[ebp], ecx
$LL133@BT_BuildTe:
; Line 4787
  00461	0f b7 c2	 movzx	 eax, dx
  00464	48		 dec	 eax
  00465	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _x$1$[ebp], 1
  0046c	0f b7 f2	 movzx	 esi, dx
  0046f	83 f8 01	 cmp	 eax, 1
  00472	0f 8e b2 00 00
	00		 jle	 $LN131@BT_BuildTe
  00478	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  0047b	0f b7 f2	 movzx	 esi, dx
  0047e	89 45 f0	 mov	 DWORD PTR tv5859[ebp], eax
  00481	ba 01 00 00 00	 mov	 edx, 1
  00486	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00489	89 55 f8	 mov	 DWORD PTR tv5908[ebp], edx
  0048c	89 45 f4	 mov	 DWORD PTR tv5856[ebp], eax
  0048f	90		 npad	 1
$LL136@BT_BuildTe:
; Line 4788
  00490	8b bb 0c 00 00
	00		 mov	 edi, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+12]
; Line 4790
  00496	8b 4d f4	 mov	 ecx, DWORD PTR tv5856[ebp]
  00499	0f b7 c6	 movzx	 eax, si
  0049c	8b f0		 mov	 esi, eax
  0049e	0f af c8	 imul	 ecx, eax
  004a1	0f af 75 f0	 imul	 esi, DWORD PTR tv5859[ebp]
  004a5	03 ca		 add	 ecx, edx
  004a7	03 f2		 add	 esi, edx
; Line 4792
  004a9	8b 55 e4	 mov	 edx, DWORD PTR tv5909[ebp]
  004ac	0f af d0	 imul	 edx, eax
  004af	8b 45 ec	 mov	 eax, DWORD PTR _x$1$[ebp]
; Line 4799
  004b2	f3 0f 10 54 8f
	fc		 movss	 xmm2, DWORD PTR [edi+ecx*4-4]
  004b8	40		 inc	 eax
  004b9	f3 0f 58 54 8f
	04		 addss	 xmm2, DWORD PTR [edi+ecx*4+4]
  004bf	f3 0f 10 44 b7
	04		 movss	 xmm0, DWORD PTR [edi+esi*4+4]
  004c5	f3 0f 58 44 b7
	fc		 addss	 xmm0, DWORD PTR [edi+esi*4-4]
  004cb	03 55 f8	 add	 edx, DWORD PTR tv5908[ebp]
  004ce	89 45 ec	 mov	 DWORD PTR _x$1$[ebp], eax
  004d1	f3 0f 10 4c 97
	fc		 movss	 xmm1, DWORD PTR [edi+edx*4-4]
  004d7	f3 0f 58 d0	 addss	 xmm2, xmm0
  004db	f3 0f 10 04 8f	 movss	 xmm0, DWORD PTR [edi+ecx*4]
  004e0	f3 0f 58 04 b7	 addss	 xmm0, DWORD PTR [edi+esi*4]
  004e5	f3 0f 58 4c 97
	04		 addss	 xmm1, DWORD PTR [edi+edx*4+4]
  004eb	f3 0f 59 d3	 mulss	 xmm2, xmm3
  004ef	f3 0f 58 c8	 addss	 xmm1, xmm0
  004f3	f3 0f 10 04 97	 movss	 xmm0, DWORD PTR [edi+edx*4]
  004f8	f3 0f 59 c5	 mulss	 xmm0, xmm5
  004fc	f3 0f 59 cc	 mulss	 xmm1, xmm4
  00500	f3 0f 58 d1	 addss	 xmm2, xmm1
  00504	f3 0f 58 d0	 addss	 xmm2, xmm0
  00508	f3 0f 11 14 97	 movss	 DWORD PTR [edi+edx*4], xmm2
  0050d	0f b7 8b 48 00
	00 00		 movzx	 ecx, WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+72]
  00514	0f b7 d0	 movzx	 edx, ax
  00517	8b f1		 mov	 esi, ecx
  00519	89 55 f8	 mov	 DWORD PTR tv5908[ebp], edx
  0051c	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  0051f	3b d0		 cmp	 edx, eax
  00521	0f 8c 69 ff ff
	ff		 jl	 $LL136@BT_BuildTe
  00527	8b 7d e0	 mov	 edi, DWORD PTR _y$1$[ebp]
$LN131@BT_BuildTe:
; Line 4786
  0052a	47		 inc	 edi
  0052b	0f b7 c6	 movzx	 eax, si
  0052e	0f b7 cf	 movzx	 ecx, di
  00531	48		 dec	 eax
  00532	89 7d e0	 mov	 DWORD PTR _y$1$[ebp], edi
  00535	89 4d e4	 mov	 DWORD PTR tv5909[ebp], ecx
  00538	0f b7 d6	 movzx	 edx, si
  0053b	3b c8		 cmp	 ecx, eax
  0053d	0f 8c 1e ff ff
	ff		 jl	 $LL133@BT_BuildTe
  00543	8a 55 ff	 mov	 dl, BYTE PTR _SmoothLevel$1$[ebp]
$LN128@BT_BuildTe:
; Line 4785
  00546	fe c2		 inc	 dl
  00548	0f b6 c2	 movzx	 eax, dl
  0054b	88 55 ff	 mov	 BYTE PTR _SmoothLevel$1$[ebp], dl
  0054e	3b 83 2c 00 00
	00		 cmp	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+44]
  00554	0f 82 e6 fe ff
	ff		 jb	 $LL130@BT_BuildTe
  0055a	8b 75 dc	 mov	 esi, DWORD PTR _Heightmapmemblock$1$[ebp]
$LN129@BT_BuildTe:
; Line 843
  0055d	8b 83 28 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+40]
  00563	85 c0		 test	 eax, eax
  00565	74 11		 je	 SHORT $LN55@BT_BuildTe
; Line 846
  00567	50		 push	 eax
  00568	56		 push	 esi
  00569	8b fe		 mov	 edi, esi
  0056b	89 75 f4	 mov	 DWORD PTR _Excludememblock$1$[ebp], esi
  0056e	e8 00 00 00 00	 call	 ?CreateMemblockFromImage@@YAXHH@Z ; CreateMemblockFromImage
  00573	83 c4 08	 add	 esp, 8
; Line 847
  00576	eb 05		 jmp	 SHORT $LN56@BT_BuildTe
$LN55@BT_BuildTe:
; Line 848
  00578	33 ff		 xor	 edi, edi
  0057a	89 7d f4	 mov	 DWORD PTR _Excludememblock$1$[ebp], edi
$LN56@BT_BuildTe:
; Line 852
  0057d	8b 75 0c	 mov	 esi, DWORD PTR _ObjectID$[ebp]
; Line 853
  00580	6a 01		 push	 1
  00582	56		 push	 esi
  00583	89 b3 14 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+20], esi
  00589	e8 00 00 00 00	 call	 ?BT_Intern_CreateBlankObject@@YAPAUsObject@@KK@Z ; BT_Intern_CreateBlankObject
  0058e	89 83 10 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+16], eax
; Line 854
  00594	6a 40		 push	 64			; 00000040H
  00596	6a 00		 push	 0
  00598	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0059b	6a 03		 push	 3
  0059d	ff b0 04 03 00
	00		 push	 DWORD PTR [eax+772]
  005a3	e8 00 00 00 00	 call	 ?BT_Intern_SetupMesh@@YAXPAUsMesh@@KKK@Z ; BT_Intern_SetupMesh
; Line 855
  005a8	56		 push	 esi
  005a9	e8 00 00 00 00	 call	 ?BT_Intern_FinnishObject@@YAXK@Z ; BT_Intern_FinnishObject
; Line 856
  005ae	8b 83 1c 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+28]
  005b4	83 c4 1c	 add	 esp, 28			; 0000001cH
  005b7	85 c0		 test	 eax, eax
  005b9	74 10		 je	 SHORT $LN57@BT_BuildTe
; Line 857
  005bb	6a 04		 push	 4
  005bd	6a 0a		 push	 10			; 0000000aH
  005bf	50		 push	 eax
  005c0	6a 00		 push	 0
  005c2	56		 push	 esi
  005c3	e8 00 00 00 00	 call	 ?SetObjectBlendMap@@YAXHHHHH@Z ; SetObjectBlendMap
  005c8	83 c4 14	 add	 esp, 20			; 00000014H
$LN57@BT_BuildTe:
; Line 858
  005cb	8b 8b 20 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+32]
  005d1	85 c9		 test	 ecx, ecx
  005d3	74 16		 je	 SHORT $LN58@BT_BuildTe
; Line 859
  005d5	0f b6 83 5d 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+93]
  005dc	50		 push	 eax
  005dd	6a 0b		 push	 11			; 0000000bH
  005df	51		 push	 ecx
  005e0	6a 01		 push	 1
  005e2	56		 push	 esi
  005e3	e8 00 00 00 00	 call	 ?SetObjectBlendMap@@YAXHHHHH@Z ; SetObjectBlendMap
  005e8	83 c4 14	 add	 esp, 20			; 00000014H
$LN58@BT_BuildTe:
; Line 862
  005eb	33 c0		 xor	 eax, eax
  005ed	66 89 83 42 00
	00 00		 mov	 WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+66], ax
; Line 863
  005f4	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  005fa	8a 40 08	 mov	 al, BYTE PTR [eax+8]
  005fd	88 45 ff	 mov	 BYTE PTR tv5969[ebp], al
  00600	88 45 88	 mov	 BYTE PTR _Generator$[ebp+8], al
  00603	0f b6 f0	 movzx	 esi, al
; Line 864
  00606	85 ff		 test	 edi, edi
  00608	74 27		 je	 SHORT $LN59@BT_BuildTe
; Line 866
  0060a	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0060d	0f af c0	 imul	 eax, eax
  00610	50		 push	 eax
  00611	e8 00 00 00 00	 call	 _malloc
  00616	8b f8		 mov	 edi, eax
  00618	83 c4 04	 add	 esp, 4
  0061b	89 7d 90	 mov	 DWORD PTR _Generator$[ebp+16], edi
  0061e	85 ff		 test	 edi, edi
; Line 867
  00620	75 0a		 jne	 SHORT $LN61@BT_BuildTe
; Line 868
  00622	6a 1b		 push	 27			; 0000001bH
  00624	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00629	83 c4 04	 add	 esp, 4
$LN61@BT_BuildTe:
; Line 869
  0062c	8a 45 ff	 mov	 al, BYTE PTR tv5969[ebp]
  0062f	eb 07		 jmp	 SHORT $LN60@BT_BuildTe
$LN59@BT_BuildTe:
; Line 870
  00631	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _Generator$[ebp+16], 0
$LN60@BT_BuildTe:
; Line 872
  00638	0f b6 c8	 movzx	 ecx, al
  0063b	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0063e	41		 inc	 ecx
  0063f	0f af c8	 imul	 ecx, eax
  00642	c1 e1 02	 shl	 ecx, 2
  00645	51		 push	 ecx
  00646	e8 00 00 00 00	 call	 _malloc
  0064b	83 c4 04	 add	 esp, 4
  0064e	89 45 f0	 mov	 DWORD PTR _Generator$2$[ebp], eax
  00651	89 45 8c	 mov	 DWORD PTR _Generator$[ebp+12], eax
  00654	85 c0		 test	 eax, eax
; Line 873
  00656	75 0a		 jne	 SHORT $LN62@BT_BuildTe
; Line 874
  00658	6a 1b		 push	 27			; 0000001bH
  0065a	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0065f	83 c4 04	 add	 esp, 4
$LN62@BT_BuildTe:
; Line 875
  00662	0f 10 45 80	 movups	 xmm0, XMMWORD PTR _Generator$[ebp]
  00666	8b 45 a0	 mov	 eax, DWORD PTR _Generator$[ebp+32]
  00669	83 ec 24	 sub	 esp, 36			; 00000024H
  0066c	8b cc		 mov	 ecx, esp
  0066e	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  00671	0f 10 45 90	 movups	 xmm0, XMMWORD PTR _Generator$[ebp+16]
  00675	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  00679	89 41 20	 mov	 DWORD PTR [ecx+32], eax
  0067c	e8 00 00 00 00	 call	 ?BT_Intern_StartQuadMapGeneration@@YAXUBT_Quadmap_Generator@@@Z ; BT_Intern_StartQuadMapGeneration
; Line 877
  00681	8a 83 32 00 00
	00		 mov	 al, BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+50]
  00687	32 c9		 xor	 cl, cl
  00689	83 c4 24	 add	 esp, 36			; 00000024H
  0068c	88 4d fe	 mov	 BYTE PTR _LODLevel$2$[ebp], cl
  0068f	84 c0		 test	 al, al
  00691	0f 84 d1 04 00
	00		 je	 $LN15@BT_BuildTe
  00697	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL320@BT_BuildTe:
; Line 879
  006a0	0f b6 c1	 movzx	 eax, cl
  006a3	8b 8b 44 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  006a9	89 45 b0	 mov	 DWORD PTR tv5917[ebp], eax
  006ac	8d 34 c0	 lea	 esi, DWORD PTR [eax+eax*8]
  006af	c1 e6 02	 shl	 esi, 2
  006b2	03 ce		 add	 ecx, esi
  006b4	89 75 e4	 mov	 DWORD PTR tv5984[ebp], esi
  006b7	89 4d e8	 mov	 DWORD PTR _LODLevelPtr$1$[ebp], ecx
; Line 882
  006ba	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  006bf	f3 0f 5e 83 34
	00 00 00	 divss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+52]
; Line 885
  006c7	0f b7 41 14	 movzx	 eax, WORD PTR [ecx+20]
  006cb	0f af c0	 imul	 eax, eax
  006ce	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@43000000
  006d6	0f b7 c0	 movzx	 eax, ax
  006d9	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0
; Line 886
  006de	66 01 83 42 00
	00 00		 add	 WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+66], ax
  006e5	89 45 d4	 mov	 DWORD PTR _Sectors$1$[ebp], eax
; Line 887
  006e8	66 89 41 0a	 mov	 WORD PTR [ecx+10], ax
; Line 888
  006ec	0f b7 c0	 movzx	 eax, ax
  006ef	69 f8 94 00 00
	00		 imul	 edi, eax, 148
  006f5	89 45 a8	 mov	 DWORD PTR tv5960[ebp], eax
  006f8	57		 push	 edi
  006f9	e8 00 00 00 00	 call	 _malloc
  006fe	8b 4d e8	 mov	 ecx, DWORD PTR _LODLevelPtr$1$[ebp]
  00701	83 c4 04	 add	 esp, 4
  00704	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; Line 889
  00707	85 c0		 test	 eax, eax
  00709	75 0a		 jne	 SHORT $LN63@BT_BuildTe
; Line 890
  0070b	6a 1b		 push	 27			; 0000001bH
  0070d	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00712	83 c4 04	 add	 esp, 4
$LN63@BT_BuildTe:
; Line 891
  00715	57		 push	 edi
  00716	8b 7d e8	 mov	 edi, DWORD PTR _LODLevelPtr$1$[ebp]
  00719	6a 00		 push	 0
  0071b	ff 77 10	 push	 DWORD PTR [edi+16]
  0071e	e8 00 00 00 00	 call	 _memset
; Line 898
  00723	0f b7 4f 14	 movzx	 ecx, WORD PTR [edi+20]
  00727	8d 83 00 00 00
	00		 lea	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx]
  0072d	89 47 18	 mov	 DWORD PTR [edi+24], eax
  00730	33 d2		 xor	 edx, edx
  00732	8a 45 fe	 mov	 al, BYTE PTR _LODLevel$2$[ebp]
  00735	88 07		 mov	 BYTE PTR [edi], al
  00737	8a 83 30 00 00
	00		 mov	 al, BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+48]
  0073d	88 45 80	 mov	 BYTE PTR _Generator$[ebp], al
  00740	8a 83 31 00 00
	00		 mov	 al, BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+49]
  00746	88 45 81	 mov	 BYTE PTR _Generator$[ebp+1], al
  00749	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
; Line 905
  0074f	6a 14		 push	 20			; 00000014H
  00751	c6 45 94 01	 mov	 BYTE PTR _Generator$[ebp+20], 1
  00755	0f b7 40 14	 movzx	 eax, WORD PTR [eax+20]
  00759	f7 f1		 div	 ecx
  0075b	88 47 16	 mov	 BYTE PTR [edi+22], al
  0075e	0f b6 c0	 movzx	 eax, al
  00761	66 0f 6e c0	 movd	 xmm0, eax
  00765	8a 83 40 00 00
	00		 mov	 al, BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+64]
  0076b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0076e	88 45 95	 mov	 BYTE PTR _Generator$[ebp+21], al
  00771	8b 45 b0	 mov	 eax, DWORD PTR tv5917[ebp]
  00774	89 45 9c	 mov	 DWORD PTR _Generator$[ebp+28], eax
  00777	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@43000000
  0077f	f3 0f 11 45 84	 movss	 DWORD PTR _Generator$[ebp+4], xmm0
  00784	e8 00 00 00 00	 call	 _malloc
  00789	8b f8		 mov	 edi, eax
  0078b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 906
  0078e	85 ff		 test	 edi, edi
  00790	75 0a		 jne	 SHORT $LN64@BT_BuildTe
; Line 907
  00792	6a 1b		 push	 27			; 0000001bH
  00794	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00799	83 c4 04	 add	 esp, 4
$LN64@BT_BuildTe:
; Line 921
  0079c	0f 57 c0	 xorps	 xmm0, xmm0
  0079f	33 c9		 xor	 ecx, ecx
  007a1	0f 11 07	 movups	 XMMWORD PTR [edi], xmm0
  007a4	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  007ab	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  007b1	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]
  007b5	89 47 08	 mov	 DWORD PTR [edi+8], eax
  007b8	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  007be	8a 44 06 08	 mov	 al, BYTE PTR [esi+eax+8]
  007c2	88 47 04	 mov	 BYTE PTR [edi+4], al
  007c5	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  007cb	0f b7 44 06 0a	 movzx	 eax, WORD PTR [esi+eax+10]
  007d0	66 89 47 06	 mov	 WORD PTR [edi+6], ax
  007d4	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  007da	8b 44 06 04	 mov	 eax, DWORD PTR [esi+eax+4]
  007de	89 07		 mov	 DWORD PTR [edi], eax
  007e0	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  007e6	0f b7 44 06 14	 movzx	 eax, WORD PTR [esi+eax+20]
  007eb	66 89 47 0c	 mov	 WORD PTR [edi+12], ax
  007ef	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  007f5	8a 44 06 16	 mov	 al, BYTE PTR [esi+eax+22]
  007f9	33 f6		 xor	 esi, esi
  007fb	88 47 0e	 mov	 BYTE PTR [edi+14], al
  007fe	8b 45 e8	 mov	 eax, DWORD PTR _LODLevelPtr$1$[ebp]
  00801	89 47 10	 mov	 DWORD PTR [edi+16], eax
  00804	89 78 20	 mov	 DWORD PTR [eax+32], edi
  00807	33 ff		 xor	 edi, edi
  00809	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
  00810	66 3b 4d d4	 cmp	 cx, WORD PTR _Sectors$1$[ebp]
  00814	0f 83 38 03 00
	00		 jae	 $LN14@BT_BuildTe
; Line 908
  0081a	89 4d e0	 mov	 DWORD PTR tv5815[ebp], ecx
  0081d	89 4d f8	 mov	 DWORD PTR tv5814[ebp], ecx
$LL321@BT_BuildTe:
; Line 924
  00820	0f b7 50 14	 movzx	 edx, WORD PTR [eax+20]
; Line 931
  00824	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00827	0f b7 c8	 movzx	 ecx, ax
  0082a	66 3b f2	 cmp	 si, dx
  0082d	0f b7 c7	 movzx	 eax, di
  00830	0f 45 c8	 cmovne	 ecx, eax
; Line 944
  00833	c6 45 ff 00	 mov	 BYTE PTR _Generator$3$[ebp], 0
  00837	0f b7 f9	 movzx	 edi, cx
  0083a	33 c9		 xor	 ecx, ecx
  0083c	66 3b f2	 cmp	 si, dx
  0083f	0f b7 c6	 movzx	 eax, si
  00842	0f b7 f7	 movzx	 esi, di
  00845	0f 45 c8	 cmovne	 ecx, eax
  00848	89 7d cc	 mov	 DWORD PTR tv5824[ebp], edi
  0084b	8b 45 e0	 mov	 eax, DWORD PTR tv5815[ebp]
  0084e	0f b7 d1	 movzx	 edx, cx
  00851	8b 4d e8	 mov	 ecx, DWORD PTR _LODLevelPtr$1$[ebp]
  00854	66 0f 6e c6	 movd	 xmm0, esi
  00858	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0085b	89 55 d4	 mov	 DWORD PTR tv5823[ebp], edx
  0085e	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00861	03 4d f8	 add	 ecx, DWORD PTR tv5814[ebp]
  00864	89 4d ac	 mov	 DWORD PTR _SectorPtr$1$[ebp], ecx
  00867	89 4d 98	 mov	 DWORD PTR _Generator$[ebp+24], ecx
  0086a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  00872	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00875	66 89 79 0a	 mov	 WORD PTR [ecx+10], di
  00879	66 89 51 08	 mov	 WORD PTR [ecx+8], dx
  0087d	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00883	8b 55 e4	 mov	 edx, DWORD PTR tv5984[ebp]
  00886	89 75 d8	 mov	 DWORD PTR _StartX$1$[ebp], esi
  00889	f3 0f 59 44 02
	04		 mulss	 xmm0, DWORD PTR [edx+eax+4]
  0088f	8b 45 d4	 mov	 eax, DWORD PTR tv5823[ebp]
  00892	0f b7 f8	 movzx	 edi, ax
  00895	c7 41 10 00 00
	00 00		 mov	 DWORD PTR [ecx+16], 0
  0089c	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0
  008a1	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  008a7	66 0f 6e c7	 movd	 xmm0, edi
  008ab	0f 5b c0	 cvtdq2ps xmm0, xmm0
  008ae	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f000000
  008b6	f3 0f 59 44 02
	04		 mulss	 xmm0, DWORD PTR [edx+eax+4]
  008bc	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0
  008c1	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  008c7	03 c2		 add	 eax, edx
  008c9	c7 81 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+136], 0
  008d3	89 41 60	 mov	 DWORD PTR [ecx+96], eax
  008d6	8d 83 00 00 00
	00		 lea	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx]
  008dc	89 41 64	 mov	 DWORD PTR [ecx+100], eax
; Line 945
  008df	8b 45 e8	 mov	 eax, DWORD PTR _LODLevelPtr$1$[ebp]
  008e2	0f b7 48 14	 movzx	 ecx, WORD PTR [eax+20]
  008e6	0f b6 45 ff	 movzx	 eax, BYTE PTR _Generator$3$[ebp]
  008ea	49		 dec	 ecx
  008eb	3b f9		 cmp	 edi, ecx
  008ed	0f 44 45 d0	 cmove	 eax, DWORD PTR tv5657[ebp]
  008f1	88 45 a0	 mov	 BYTE PTR _Generator$[ebp+32], al
; Line 947
  008f4	32 c0		 xor	 al, al
; Line 948
  008f6	3b f1		 cmp	 esi, ecx
  008f8	0f b6 c0	 movzx	 eax, al
; Line 3938
  008fb	8b b3 44 00 00
	00		 mov	 esi, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
; Line 948
  00901	b9 01 00 00 00	 mov	 ecx, 1
  00906	0f 44 c1	 cmove	 eax, ecx
  00909	88 45 a1	 mov	 BYTE PTR _Generator$[ebp+33], al
; Line 3938
  0090c	0f b6 44 16 08	 movzx	 eax, BYTE PTR [esi+edx+8]
  00911	0f b6 4c 16 16	 movzx	 ecx, BYTE PTR [esi+edx+22]
  00916	0f af c8	 imul	 ecx, eax
  00919	8b 45 d8	 mov	 eax, DWORD PTR _StartX$1$[ebp]
  0091c	0f af c1	 imul	 eax, ecx
; Line 3939
  0091f	0f af f9	 imul	 edi, ecx
; Line 3942
  00922	33 c9		 xor	 ecx, ecx
  00924	89 4d ec	 mov	 DWORD PTR _Y$1$[ebp], ecx
  00927	89 45 d8	 mov	 DWORD PTR _StartX$1$[ebp], eax
  0092a	89 7d b4	 mov	 DWORD PTR _StartY$1$[ebp], edi
  0092d	0f 1f 00	 npad	 3
$LL322@BT_BuildTe:
; Line 3944
  00930	33 ff		 xor	 edi, edi
$LL323@BT_BuildTe:
; Line 3946
  00932	0f b6 54 32 08	 movzx	 edx, BYTE PTR [edx+esi+8]
; Line 3948
  00937	8b 45 e4	 mov	 eax, DWORD PTR tv5984[ebp]
  0093a	42		 inc	 edx
  0093b	0f af d1	 imul	 edx, ecx
  0093e	8a 44 30 16	 mov	 al, BYTE PTR [eax+esi+22]
  00942	0f b6 f0	 movzx	 esi, al
  00945	89 75 bc	 mov	 DWORD PTR tv5974[ebp], esi
  00948	03 d7		 add	 edx, edi
  0094a	0f b7 b3 48 00
	00 00		 movzx	 esi, WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+72]
  00951	4e		 dec	 esi
  00952	88 45 ff	 mov	 BYTE PTR tv5948[ebp], al
  00955	89 75 b8	 mov	 DWORD PTR tv5844[ebp], esi
  00958	0f b6 f0	 movzx	 esi, al
  0095b	8b 45 bc	 mov	 eax, DWORD PTR tv5974[ebp]
  0095e	0f af c7	 imul	 eax, edi
  00961	0f af f7	 imul	 esi, edi
  00964	03 45 d8	 add	 eax, DWORD PTR _StartX$1$[ebp]
  00967	3b 45 b8	 cmp	 eax, DWORD PTR tv5844[ebp]
  0096a	76 01		 jbe	 SHORT $LN120@BT_BuildTe
; Line 3950
  0096c	4e		 dec	 esi
$LN120@BT_BuildTe:
; Line 3955
  0096d	8b c1		 mov	 eax, ecx
  0096f	0f af 45 bc	 imul	 eax, DWORD PTR tv5974[ebp]
  00973	03 45 b4	 add	 eax, DWORD PTR _StartY$1$[ebp]
  00976	3b 45 b8	 cmp	 eax, DWORD PTR tv5844[ebp]
  00979	0f b6 45 ff	 movzx	 eax, BYTE PTR tv5948[ebp]
  0097d	76 06		 jbe	 SHORT $LN122@BT_BuildTe
; Line 3957
  0097f	0f af c1	 imul	 eax, ecx
  00982	48		 dec	 eax
; Line 3958
  00983	eb 03		 jmp	 SHORT $LN123@BT_BuildTe
$LN122@BT_BuildTe:
; Line 3959
  00985	0f af c1	 imul	 eax, ecx
$LN123@BT_BuildTe:
; Line 3962
  00988	8b 4d b4	 mov	 ecx, DWORD PTR _StartY$1$[ebp]
  0098b	47		 inc	 edi
  0098c	03 c8		 add	 ecx, eax
  0098e	0f b7 83 48 00
	00 00		 movzx	 eax, WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+72]
  00995	0f af c8	 imul	 ecx, eax
; Line 3963
  00998	8b 83 0c 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+12]
  0099e	03 ce		 add	 ecx, esi
  009a0	03 4d d8	 add	 ecx, DWORD PTR _StartX$1$[ebp]
  009a3	8b 04 88	 mov	 eax, DWORD PTR [eax+ecx*4]
  009a6	8b 4d f0	 mov	 ecx, DWORD PTR _Generator$2$[ebp]
  009a9	89 04 91	 mov	 DWORD PTR [ecx+edx*4], eax
  009ac	8b b3 44 00 00
	00		 mov	 esi, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  009b2	8b 55 e4	 mov	 edx, DWORD PTR tv5984[ebp]
  009b5	8b 4d ec	 mov	 ecx, DWORD PTR _Y$1$[ebp]
  009b8	0f b6 44 32 08	 movzx	 eax, BYTE PTR [edx+esi+8]
  009bd	3b f8		 cmp	 edi, eax
  009bf	0f 86 6d ff ff
	ff		 jbe	 $LL323@BT_BuildTe
; Line 3942
  009c5	41		 inc	 ecx
  009c6	89 4d ec	 mov	 DWORD PTR _Y$1$[ebp], ecx
  009c9	3b c8		 cmp	 ecx, eax
  009cb	0f 86 5f ff ff
	ff		 jbe	 $LL322@BT_BuildTe
; Line 954
  009d1	8b 44 32 10	 mov	 eax, DWORD PTR [edx+esi+16]
  009d5	8b 7d f8	 mov	 edi, DWORD PTR tv5814[ebp]
  009d8	c6 04 07 00	 mov	 BYTE PTR [edi+eax], 0
; Line 961
  009dc	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  009e2	8b 44 02 10	 mov	 eax, DWORD PTR [edx+eax+16]
  009e6	80 3c 07 00	 cmp	 BYTE PTR [edi+eax], 0
  009ea	0f 85 df 00 00
	00		 jne	 $LN246@BT_BuildTe
; Line 964
  009f0	6a 14		 push	 20			; 00000014H
  009f2	e8 00 00 00 00	 call	 _malloc
  009f7	8b 8b 44 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  009fd	83 c4 04	 add	 esp, 4
  00a00	8b 75 e4	 mov	 esi, DWORD PTR tv5984[ebp]
  00a03	8b 4c 0e 10	 mov	 ecx, DWORD PTR [esi+ecx+16]
  00a07	89 84 39 84 00
	00 00		 mov	 DWORD PTR [ecx+edi+132], eax
; Line 965
  00a0e	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00a14	8b 44 06 10	 mov	 eax, DWORD PTR [esi+eax+16]
  00a18	83 bc 38 84 00
	00 00 00	 cmp	 DWORD PTR [eax+edi+132], 0
  00a20	75 0a		 jne	 SHORT $LN71@BT_BuildTe
; Line 966
  00a22	6a 1b		 push	 27			; 0000001bH
  00a24	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00a29	83 c4 04	 add	 esp, 4
$LN71@BT_BuildTe:
; Line 967
  00a2c	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00a32	0f 57 c0	 xorps	 xmm0, xmm0
; Line 968
  00a35	6a 14		 push	 20			; 00000014H
  00a37	8b 44 06 10	 mov	 eax, DWORD PTR [esi+eax+16]
  00a3b	8b 84 38 84 00
	00 00		 mov	 eax, DWORD PTR [eax+edi+132]
  00a42	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  00a45	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
  00a4c	e8 00 00 00 00	 call	 _malloc
  00a51	8b f0		 mov	 esi, eax
  00a53	83 c4 04	 add	 esp, 4
; Line 969
  00a56	85 f6		 test	 esi, esi
  00a58	75 0a		 jne	 SHORT $LN72@BT_BuildTe
; Line 970
  00a5a	6a 1b		 push	 27			; 0000001bH
  00a5c	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00a61	83 c4 04	 add	 esp, 4
$LN72@BT_BuildTe:
; Line 971
  00a64	8b 45 08	 mov	 eax, DWORD PTR _terrainid$[ebp]
; Line 974
  00a67	8b 7d ac	 mov	 edi, DWORD PTR _SectorPtr$1$[ebp]
  00a6a	89 06		 mov	 DWORD PTR [esi], eax
  00a6c	8b 45 b0	 mov	 eax, DWORD PTR tv5917[ebp]
  00a6f	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00a72	8b 45 e0	 mov	 eax, DWORD PTR tv5815[ebp]
  00a75	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00a78	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
; Line 975
  00a7b	8b 87 84 00 00
	00		 mov	 eax, DWORD PTR [edi+132]
; Line 977
  00a81	6a 58		 push	 88			; 00000058H
  00a83	89 70 10	 mov	 DWORD PTR [eax+16], esi
  00a86	e8 00 00 00 00	 call	 _malloc
  00a8b	83 c4 04	 add	 esp, 4
  00a8e	89 47 18	 mov	 DWORD PTR [edi+24], eax
; Line 978
  00a91	85 c0		 test	 eax, eax
  00a93	75 0a		 jne	 SHORT $LN73@BT_BuildTe
; Line 979
  00a95	6a 1b		 push	 27			; 0000001bH
  00a97	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00a9c	83 c4 04	 add	 esp, 4
$LN73@BT_BuildTe:
; Line 980
  00a9f	6a 58		 push	 88			; 00000058H
  00aa1	6a 00		 push	 0
  00aa3	ff 77 18	 push	 DWORD PTR [edi+24]
  00aa6	e8 00 00 00 00	 call	 _memset
; Line 981
  00aab	0f 10 45 80	 movups	 xmm0, XMMWORD PTR _Generator$[ebp]
  00aaf	8b 45 a0	 mov	 eax, DWORD PTR _Generator$[ebp+32]
  00ab2	83 ec 18	 sub	 esp, 24			; 00000018H
  00ab5	8b cc		 mov	 ecx, esp
  00ab7	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  00aba	0f 10 45 90	 movups	 xmm0, XMMWORD PTR _Generator$[ebp+16]
  00abe	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  00ac2	89 41 20	 mov	 DWORD PTR [ecx+32], eax
  00ac5	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00ac8	e8 00 00 00 00	 call	 ?Generate@BT_QuadMap@@QAEXUBT_Quadmap_Generator@@@Z ; BT_QuadMap::Generate
  00acd	eb 03		 jmp	 SHORT $LN70@BT_BuildTe
$LN246@BT_BuildTe:
; Line 961
  00acf	8b 7d ac	 mov	 edi, DWORD PTR _SectorPtr$1$[ebp]
$LN70@BT_BuildTe:
; Line 985
  00ad2	6a 1c		 push	 28			; 0000001cH
  00ad4	e8 00 00 00 00	 call	 _malloc
  00ad9	8b f0		 mov	 esi, eax
  00adb	83 c4 04	 add	 esp, 4
; Line 986
  00ade	85 f6		 test	 esi, esi
  00ae0	75 0a		 jne	 SHORT $LN74@BT_BuildTe
; Line 987
  00ae2	6a 1b		 push	 27			; 0000001bH
  00ae4	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00ae9	83 c4 04	 add	 esp, 4
$LN74@BT_BuildTe:
; Line 989
  00aec	8b 4d cc	 mov	 ecx, DWORD PTR tv5824[ebp]
  00aef	0f 57 c0	 xorps	 xmm0, xmm0
; Line 990
  00af2	8b 55 d4	 mov	 edx, DWORD PTR tv5823[ebp]
  00af5	ff 45 e0	 inc	 DWORD PTR tv5815[ebp]
  00af8	81 45 f8 94 00
	00 00		 add	 DWORD PTR tv5814[ebp], 148 ; 00000094H
  00aff	83 6d a8 01	 sub	 DWORD PTR tv5960[ebp], 1
  00b03	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  00b06	66 0f d6 46 10	 movq	 QWORD PTR [esi+16], xmm0
  00b0b	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  00b12	66 89 4e 04	 mov	 WORD PTR [esi+4], cx
  00b16	66 89 56 02	 mov	 WORD PTR [esi+2], dx
; Line 991
  00b1a	8a 07		 mov	 al, BYTE PTR [edi]
  00b1c	88 06		 mov	 BYTE PTR [esi], al
; Line 992
  00b1e	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00b21	89 46 08	 mov	 DWORD PTR [esi+8], eax
; Line 993
  00b24	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
; Line 994
  00b2b	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00b2e	89 46 10	 mov	 DWORD PTR [esi+16], eax
; Line 995
  00b31	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
  00b34	89 46 14	 mov	 DWORD PTR [esi+20], eax
; Line 999
  00b37	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  00b3a	89 7e 18	 mov	 DWORD PTR [esi+24], edi
  00b3d	89 b7 90 00 00
	00		 mov	 DWORD PTR [edi+144], esi
  00b43	0f b7 f0	 movzx	 esi, ax
  00b46	8b 45 e8	 mov	 eax, DWORD PTR _LODLevelPtr$1$[ebp]
  00b49	0f b7 f9	 movzx	 edi, cx
  00b4c	0f 85 ce fc ff
	ff		 jne	 $LL321@BT_BuildTe
$LN14@BT_BuildTe:
; Line 877
  00b52	8a 4d fe	 mov	 cl, BYTE PTR _LODLevel$2$[ebp]
  00b55	8a 83 32 00 00
	00		 mov	 al, BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+50]
  00b5b	fe c1		 inc	 cl
  00b5d	88 4d fe	 mov	 BYTE PTR _LODLevel$2$[ebp], cl
  00b60	3a c8		 cmp	 cl, al
  00b62	0f 82 38 fb ff
	ff		 jb	 $LL320@BT_BuildTe
$LN15@BT_BuildTe:
; Line 1004
  00b68	32 d2		 xor	 dl, dl
  00b6a	88 55 ff	 mov	 BYTE PTR _LODLevel$3$[ebp], dl
  00b6d	84 c0		 test	 al, al
  00b6f	0f 84 5e 01 00
	00		 je	 $LN241@BT_BuildTe
$LL324@BT_BuildTe:
; Line 1008
  00b75	0f b6 c2	 movzx	 eax, dl
  00b78	33 c9		 xor	 ecx, ecx
  00b7a	8b 93 44 00 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00b80	89 4d f8	 mov	 DWORD PTR _Sector$1$[ebp], ecx
  00b83	8d 3c c0	 lea	 edi, DWORD PTR [eax+eax*8]
  00b86	33 c0		 xor	 eax, eax
  00b88	66 3b 44 ba 0a	 cmp	 ax, WORD PTR [edx+edi*4+10]
  00b8d	0f 83 2c 01 00
	00		 jae	 $LN20@BT_BuildTe
$LL325@BT_BuildTe:
; Line 1010
  00b93	8b 74 ba 10	 mov	 esi, DWORD PTR [edx+edi*4+16]
  00b97	0f b7 c9	 movzx	 ecx, cx
  00b9a	69 c1 94 00 00
	00		 imul	 eax, ecx, 148
  00ba0	03 f0		 add	 esi, eax
  00ba2	89 45 cc	 mov	 DWORD PTR tv5941[ebp], eax
; Line 1011
  00ba5	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00ba8	0f 85 f9 00 00
	00		 jne	 $LN23@BT_BuildTe
; Line 1013
  00bae	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00bb1	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  00bb8	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00bbb	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  00bc2	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00bc5	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00bcc	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00bcf	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 1014
  00bd5	66 83 7e 0a 00	 cmp	 WORD PTR [esi+10], 0
  00bda	74 24		 je	 SHORT $LN77@BT_BuildTe
; Line 1016
  00bdc	8b 93 44 00 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00be2	0f b7 44 ba 14	 movzx	 eax, WORD PTR [edx+edi*4+20]
  00be7	2b c8		 sub	 ecx, eax
  00be9	69 c1 94 00 00
	00		 imul	 eax, ecx, 148
  00bef	03 44 ba 10	 add	 eax, DWORD PTR [edx+edi*4+16]
; Line 1017
  00bf3	80 38 00	 cmp	 BYTE PTR [eax], 0
  00bf6	75 08		 jne	 SHORT $LN77@BT_BuildTe
; Line 1018
  00bf8	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00bfb	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  00bfe	89 01		 mov	 DWORD PTR [ecx], eax
$LN77@BT_BuildTe:
; Line 1020
  00c00	8b 93 44 00 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00c06	0f b7 46 08	 movzx	 eax, WORD PTR [esi+8]
  00c0a	0f b7 4c ba 14	 movzx	 ecx, WORD PTR [edx+edi*4+20]
  00c0f	49		 dec	 ecx
  00c10	3b c1		 cmp	 eax, ecx
  00c12	74 28		 je	 SHORT $LN79@BT_BuildTe
; Line 1022
  00c14	8b 4c ba 10	 mov	 ecx, DWORD PTR [edx+edi*4+16]
; Line 1023
  00c18	8b 45 cc	 mov	 eax, DWORD PTR tv5941[ebp]
  00c1b	80 bc 01 94 00
	00 00 00	 cmp	 BYTE PTR [ecx+eax+148], 0
  00c23	75 17		 jne	 SHORT $LN79@BT_BuildTe
; Line 1024
  00c25	8b 54 ba 10	 mov	 edx, DWORD PTR [edx+edi*4+16]
  00c29	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00c2c	8b 84 02 ac 00
	00 00		 mov	 eax, DWORD PTR [edx+eax+172]
  00c33	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  00c36	8b 93 44 00 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
$LN79@BT_BuildTe:
; Line 1026
  00c3c	66 83 7e 08 00	 cmp	 WORD PTR [esi+8], 0
  00c41	74 24		 je	 SHORT $LN81@BT_BuildTe
; Line 1028
  00c43	8b 4d f8	 mov	 ecx, DWORD PTR _Sector$1$[ebp]
  00c46	8b 54 ba 10	 mov	 edx, DWORD PTR [edx+edi*4+16]
  00c4a	0f b7 c1	 movzx	 eax, cx
  00c4d	69 c0 94 00 00
	00		 imul	 eax, eax, 148
; Line 1029
  00c53	80 bc 02 6c ff
	ff ff 00	 cmp	 BYTE PTR [edx+eax-148], 0
  00c5b	75 0a		 jne	 SHORT $LN81@BT_BuildTe
; Line 1030
  00c5d	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00c60	8b 44 02 84	 mov	 eax, DWORD PTR [edx+eax-124]
  00c64	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN81@BT_BuildTe:
; Line 1032
  00c67	8b 93 44 00 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00c6d	0f b7 4e 0a	 movzx	 ecx, WORD PTR [esi+10]
  00c71	0f b7 44 ba 14	 movzx	 eax, WORD PTR [edx+edi*4+20]
  00c76	89 45 cc	 mov	 DWORD PTR tv5863[ebp], eax
  00c79	48		 dec	 eax
  00c7a	3b c8		 cmp	 ecx, eax
  00c7c	74 21		 je	 SHORT $LN83@BT_BuildTe
; Line 1034
  00c7e	8b 4d f8	 mov	 ecx, DWORD PTR _Sector$1$[ebp]
  00c81	0f b7 c1	 movzx	 eax, cx
  00c84	03 45 cc	 add	 eax, DWORD PTR tv5863[ebp]
  00c87	69 c0 94 00 00
	00		 imul	 eax, eax, 148
  00c8d	03 44 ba 10	 add	 eax, DWORD PTR [edx+edi*4+16]
; Line 1035
  00c91	80 38 00	 cmp	 BYTE PTR [eax], 0
  00c94	75 09		 jne	 SHORT $LN83@BT_BuildTe
; Line 1036
  00c96	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00c99	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  00c9c	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN83@BT_BuildTe:
; Line 1039
  00c9f	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00ca2	e8 00 00 00 00	 call	 ?CalculateNormals@BT_QuadMap@@QAEXXZ ; BT_QuadMap::CalculateNormals
$LN23@BT_BuildTe:
; Line 1008
  00ca7	8b 4d f8	 mov	 ecx, DWORD PTR _Sector$1$[ebp]
  00caa	8b 93 44 00 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00cb0	41		 inc	 ecx
  00cb1	89 4d f8	 mov	 DWORD PTR _Sector$1$[ebp], ecx
  00cb4	66 3b 4c ba 0a	 cmp	 cx, WORD PTR [edx+edi*4+10]
  00cb9	0f 82 d4 fe ff
	ff		 jb	 $LL325@BT_BuildTe
$LN20@BT_BuildTe:
; Line 1004
  00cbf	8a 55 ff	 mov	 dl, BYTE PTR _LODLevel$3$[ebp]
  00cc2	fe c2		 inc	 dl
  00cc4	88 55 ff	 mov	 BYTE PTR _LODLevel$3$[ebp], dl
  00cc7	3a 93 32 00 00
	00		 cmp	 dl, BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+50]
  00ccd	0f 82 a2 fe ff
	ff		 jb	 $LL324@BT_BuildTe
$LN241@BT_BuildTe:
; Line 1045
  00cd3	8b 45 f4	 mov	 eax, DWORD PTR _Excludememblock$1$[ebp]
  00cd6	85 c0		 test	 eax, eax
  00cd8	74 09		 je	 SHORT $LN84@BT_BuildTe
; Line 1046
  00cda	50		 push	 eax
  00cdb	e8 00 00 00 00	 call	 ?DeleteMemblock@@YAXH@Z	; DeleteMemblock
  00ce0	83 c4 04	 add	 esp, 4
$LN84@BT_BuildTe:
; Line 1047
  00ce3	8b 45 90	 mov	 eax, DWORD PTR _Generator$[ebp+16]
  00ce6	85 c0		 test	 eax, eax
  00ce8	74 09		 je	 SHORT $LN85@BT_BuildTe
; Line 1048
  00cea	50		 push	 eax
  00ceb	e8 00 00 00 00	 call	 _free
  00cf0	83 c4 04	 add	 esp, 4
$LN85@BT_BuildTe:
; Line 1051
  00cf3	8b 83 24 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+36]
  00cf9	85 c0		 test	 eax, eax
  00cfb	74 49		 je	 SHORT $LN86@BT_BuildTe
; Line 1054
  00cfd	8b 75 dc	 mov	 esi, DWORD PTR _Heightmapmemblock$1$[ebp]
  00d00	50		 push	 eax
  00d01	56		 push	 esi
  00d02	e8 00 00 00 00	 call	 ?CreateMemblockFromImage@@YAXHH@Z ; CreateMemblockFromImage
; Line 1057
  00d07	56		 push	 esi
  00d08	e8 00 00 00 00	 call	 ?GetMemblockPtr@@YAPADH@Z ; GetMemblockPtr
  00d0d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00d10	83 c0 04	 add	 eax, 4
  00d13	50		 push	 eax
  00d14	ff b3 24 00 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+36]
  00d1a	e8 00 00 00 00	 call	 ?ImageHeight@@YAHH@Z	; ImageHeight
  00d1f	83 c4 04	 add	 esp, 4
  00d22	50		 push	 eax
  00d23	ff b3 24 00 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+36]
  00d29	e8 00 00 00 00	 call	 ?ImageWidth@@YAHH@Z	; ImageWidth
  00d2e	83 c4 04	 add	 esp, 4
  00d31	50		 push	 eax
  00d32	ff b3 64 00 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+100]
  00d38	e8 00 00 00 00	 call	 ?BT_Intern_CreateEnvironmentMap@@YAXPAUBT_EnvironmentMap@@KKPAK@Z ; BT_Intern_CreateEnvironmentMap
; Line 1060
  00d3d	56		 push	 esi
  00d3e	e8 00 00 00 00	 call	 ?DeleteMemblock@@YAXH@Z	; DeleteMemblock
  00d43	83 c4 14	 add	 esp, 20			; 00000014H
$LN86@BT_BuildTe:
; Line 4328
  00d46	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00d4c	b1 01		 mov	 cl, 1
  00d4e	88 4d f4	 mov	 BYTE PTR _i$5[ebp], cl
  00d51	0f b7 50 14	 movzx	 edx, WORD PTR [eax+20]
  00d55	f6 c2 02	 test	 dl, 2
  00d58	75 14		 jne	 SHORT $LN111@BT_BuildTe
  00d5a	66 0f 1f 44 00
	00		 npad	 6
$LL110@BT_BuildTe:
; Line 4329
  00d60	fe c1		 inc	 cl
  00d62	8b c2		 mov	 eax, edx
  00d64	66 d3 e8	 shr	 ax, cl
  00d67	88 4d f4	 mov	 BYTE PTR _i$5[ebp], cl
  00d6a	a8 01		 test	 al, 1
  00d6c	74 f2		 je	 SHORT $LL110@BT_BuildTe
$LN111@BT_BuildTe:
; Line 4335
  00d6e	6a 00		 push	 0
  00d70	6a 00		 push	 0
  00d72	6a 00		 push	 0
  00d74	ff 75 f4	 push	 DWORD PTR _i$5[ebp]
  00d77	8d 83 00 00 00
	00		 lea	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx]
  00d7d	88 8b 54 00 00
	00		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+84], cl
  00d83	50		 push	 eax
  00d84	e8 00 00 00 00	 call	 ?BT_Intern_AllocateQuadTreeRec@@YAPAUs_BT_QuadTree@@PAUs_BT_terrain@@EPAU1@EE@Z ; BT_Intern_AllocateQuadTreeRec
; Line 1064
  00d89	89 83 50 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+80], eax
; Line 1067
  00d8f	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00d95	0f b7 40 14	 movzx	 eax, WORD PTR [eax+20]
  00d99	c1 e0 02	 shl	 eax, 2
  00d9c	50		 push	 eax
  00d9d	e8 00 00 00 00	 call	 _malloc
  00da2	83 c4 18	 add	 esp, 24			; 00000018H
  00da5	89 83 58 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+88], eax
; Line 1068
  00dab	85 c0		 test	 eax, eax
  00dad	75 0a		 jne	 SHORT $LN87@BT_BuildTe
; Line 1069
  00daf	6a 1b		 push	 27			; 0000001bH
  00db1	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00db6	83 c4 04	 add	 esp, 4
$LN87@BT_BuildTe:
; Line 1070
  00db9	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00dbf	0f b7 40 14	 movzx	 eax, WORD PTR [eax+20]
  00dc3	c1 e0 02	 shl	 eax, 2
  00dc6	50		 push	 eax
  00dc7	6a 00		 push	 0
  00dc9	ff b3 58 00 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+88]
  00dcf	e8 00 00 00 00	 call	 _memset
; Line 1071
  00dd4	8b 8b 44 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00dda	33 c0		 xor	 eax, eax
  00ddc	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ddf	33 f6		 xor	 esi, esi
  00de1	66 3b 41 14	 cmp	 ax, WORD PTR [ecx+20]
  00de5	73 5f		 jae	 SHORT $LN27@BT_BuildTe
$LL327@BT_BuildTe:
; Line 1073
  00de7	0f b7 41 14	 movzx	 eax, WORD PTR [ecx+20]
  00deb	c1 e0 02	 shl	 eax, 2
  00dee	50		 push	 eax
  00def	e8 00 00 00 00	 call	 _malloc
  00df4	8b 8b 58 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+88]
  00dfa	83 c4 04	 add	 esp, 4
  00dfd	89 04 b1	 mov	 DWORD PTR [ecx+esi*4], eax
; Line 1074
  00e00	8b 83 58 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+88]
  00e06	83 3c b0 00	 cmp	 DWORD PTR [eax+esi*4], 0
  00e0a	75 0a		 jne	 SHORT $LN88@BT_BuildTe
; Line 1075
  00e0c	6a 1b		 push	 27			; 0000001bH
  00e0e	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00e13	83 c4 04	 add	 esp, 4
$LN88@BT_BuildTe:
; Line 1076
  00e16	8b 83 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00e1c	0f b7 40 14	 movzx	 eax, WORD PTR [eax+20]
  00e20	c1 e0 02	 shl	 eax, 2
  00e23	50		 push	 eax
  00e24	8b 83 58 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+88]
  00e2a	6a 00		 push	 0
  00e2c	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  00e2f	e8 00 00 00 00	 call	 _memset
  00e34	8b 8b 44 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  00e3a	46		 inc	 esi
  00e3b	83 c4 0c	 add	 esp, 12			; 0000000cH
  00e3e	0f b7 41 14	 movzx	 eax, WORD PTR [ecx+20]
  00e42	3b f0		 cmp	 esi, eax
  00e44	72 a1		 jb	 SHORT $LL327@BT_BuildTe
$LN27@BT_BuildTe:
; Line 1084
  00e46	6a 70		 push	 112			; 00000070H
  00e48	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00e4d	8b f0		 mov	 esi, eax
  00e4f	83 c4 04	 add	 esp, 4
; Line 1092
  00e52	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_C@_08JPMAAECC@POSITION@
  00e58	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00e5f	c7 46 08 06 00
	00 00		 mov	 DWORD PTR [esi+8], 6
  00e66	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00e6d	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  00e74	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00e7b	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  00e82	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], OFFSET ??_C@_06IOJAGNKJ@NORMAL@
  00e89	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  00e90	c7 46 24 06 00
	00 00		 mov	 DWORD PTR [esi+36], 6
  00e97	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  00e9e	c7 46 2c ff ff
	ff ff		 mov	 DWORD PTR [esi+44], -1
  00ea5	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0
  00eac	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
  00eb3	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], OFFSET ??_C@_08CMDKBPJM@TEXCOORD@
  00eba	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
  00ec1	c7 46 40 10 00
	00 00		 mov	 DWORD PTR [esi+64], 16	; 00000010H
  00ec8	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
  00ecf	c7 46 48 ff ff
	ff ff		 mov	 DWORD PTR [esi+72], -1
  00ed6	c7 46 4c 00 00
	00 00		 mov	 DWORD PTR [esi+76], 0
  00edd	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0
  00ee4	c7 46 54 00 00
	00 00		 mov	 DWORD PTR [esi+84], OFFSET ??_C@_08CMDKBPJM@TEXCOORD@
  00eeb	c7 46 58 01 00
	00 00		 mov	 DWORD PTR [esi+88], 1
  00ef2	c7 46 5c 10 00
	00 00		 mov	 DWORD PTR [esi+92], 16	; 00000010H
  00ef9	c7 46 60 00 00
	00 00		 mov	 DWORD PTR [esi+96], 0
  00f00	c7 46 64 ff ff
	ff ff		 mov	 DWORD PTR [esi+100], -1
  00f07	c7 46 68 00 00
	00 00		 mov	 DWORD PTR [esi+104], 0
  00f0e	c7 46 6c 00 00
	00 00		 mov	 DWORD PTR [esi+108], 0
; Line 1098
  00f15	a1 10 04 00 00	 mov	 eax, DWORD PTR ?g_sShaders@@3PAUsShaderGlobalsType@@A+1040
  00f1a	6a 00		 push	 0
  00f1c	50		 push	 eax
  00f1d	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f1f	ff 51 34	 call	 DWORD PTR [ecx+52]
  00f22	8b f8		 mov	 edi, eax
  00f24	c7 45 dc 01 00
	00 00		 mov	 DWORD PTR _tIndex$1$[ebp], 1
  00f2b	57		 push	 edi
  00f2c	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00f2e	ff 51 0c	 call	 DWORD PTR [ecx+12]
  00f31	84 c0		 test	 al, al
  00f33	0f 84 7b 00 00
	00		 je	 $LN245@BT_BuildTe
  00f39	0f 1f 80 00 00
	00 00		 npad	 7
$LL29@BT_BuildTe:
; Line 1102
  00f40	8b 07		 mov	 eax, DWORD PTR [edi]
  00f42	6a 00		 push	 0
  00f44	57		 push	 edi
  00f45	ff 50 1c	 call	 DWORD PTR [eax+28]
  00f48	8b f8		 mov	 edi, eax
  00f4a	57		 push	 edi
  00f4b	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00f4d	ff 51 0c	 call	 DWORD PTR [ecx+12]
  00f50	84 c0		 test	 al, al
  00f52	74 3a		 je	 SHORT $LN32@BT_BuildTe
; Line 1105
  00f54	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00f56	8d 45 c8	 lea	 eax, DWORD PTR _vs_desc$3[ebp]
  00f59	50		 push	 eax
  00f5a	57		 push	 edi
  00f5b	ff 51 14	 call	 DWORD PTR [ecx+20]
; Line 1107
  00f5e	8b 45 c8	 mov	 eax, DWORD PTR _vs_desc$3[ebp]
  00f61	8d 95 74 ff ff
	ff		 lea	 edx, DWORD PTR _s_desc$1[ebp]
  00f67	52		 push	 edx
  00f68	6a 00		 push	 0
  00f6a	50		 push	 eax
  00f6b	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f6d	ff 51 7c	 call	 DWORD PTR [ecx+124]
; Line 1108
  00f70	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pD3D@@3PAUID3D11Device@@A ; m_pD3D
  00f75	8d 93 60 00 00
	00		 lea	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+96]
  00f7b	52		 push	 edx
  00f7c	ff 75 80	 push	 DWORD PTR _s_desc$1[ebp+12]
  00f7f	ff b5 7c ff ff
	ff		 push	 DWORD PTR _s_desc$1[ebp+8]
  00f85	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f87	6a 04		 push	 4
  00f89	56		 push	 esi
  00f8a	50		 push	 eax
  00f8b	ff 51 2c	 call	 DWORD PTR [ecx+44]
$LN32@BT_BuildTe:
; Line 1111
  00f8e	83 bb 60 00 00
	00 00		 cmp	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+96], 0
  00f95	75 1d		 jne	 SHORT $LN245@BT_BuildTe
; Line 1098
  00f97	a1 10 04 00 00	 mov	 eax, DWORD PTR ?g_sShaders@@3PAUsShaderGlobalsType@@A+1040
  00f9c	ff 75 dc	 push	 DWORD PTR _tIndex$1$[ebp]
  00f9f	50		 push	 eax
  00fa0	8b 08		 mov	 ecx, DWORD PTR [eax]
  00fa2	ff 51 34	 call	 DWORD PTR [ecx+52]
  00fa5	ff 45 dc	 inc	 DWORD PTR _tIndex$1$[ebp]
  00fa8	8b f8		 mov	 edi, eax
  00faa	57		 push	 edi
  00fab	8b 07		 mov	 eax, DWORD PTR [edi]
  00fad	ff 50 0c	 call	 DWORD PTR [eax+12]
  00fb0	84 c0		 test	 al, al
  00fb2	75 8c		 jne	 SHORT $LL29@BT_BuildTe
$LN245@BT_BuildTe:
; Line 1113
  00fb4	56		 push	 esi
  00fb5	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
; Line 1131
  00fba	e8 00 00 00 00	 call	 ?BT_Intern_EndQuadMapGeneration@@YAXXZ ; BT_Intern_EndQuadMapGeneration
; Line 1132
  00fbf	ff 75 f0	 push	 DWORD PTR _Generator$2$[ebp]
  00fc2	e8 00 00 00 00	 call	 _free
; Line 1133
  00fc7	ff b3 0c 00 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+12]
  00fcd	e8 00 00 00 00	 call	 _free
; Line 1136
  00fd2	8b 83 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+112]
; Line 1141
  00fd8	8d b3 00 00 00
	00		 lea	 esi, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx]
  00fde	8a 55 10	 mov	 dl, BYTE PTR _GenerateTerrain$[ebp]
  00fe1	83 c4 0c	 add	 esp, 12			; 0000000cH
  00fe4	c6 00 01	 mov	 BYTE PTR [eax], 1
  00fe7	8b 83 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+112]
  00fed	88 50 01	 mov	 BYTE PTR [eax+1], dl
  00ff0	8b 8b 70 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+112]
  00ff6	8a 83 5c 00 00
	00		 mov	 al, BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+92]
  00ffc	88 41 32	 mov	 BYTE PTR [ecx+50], al
  00fff	8b 8b 70 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+112]
  01005	66 8b 83 42 00
	00 00		 mov	 ax, WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+66]
  0100c	66 89 41 1e	 mov	 WORD PTR [ecx+30], ax
  01010	f3 0f 10 83 4c
	00 00 00	 movss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+76]
  01018	8b 83 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+112]
  0101e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c000000
  01026	f3 0f 59 83 34
	00 00 00	 mulss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+52]
  0102e	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0
  01033	8b 83 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+112]
  01039	89 70 34	 mov	 DWORD PTR [eax+52], esi
; Line 1142
  0103c	8b 8b 70 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+112]
  01042	8b 83 10 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+16]
  01048	89 41 3c	 mov	 DWORD PTR [ecx+60], eax
; Line 1145
  0104b	66 c7 05 8c 73
	00 00 01 00	 mov	 WORD PTR ?BT_Main@@3Us_BT_main@@A+29580, 1
; Line 1147
  01054	89 35 90 73 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29584, esi
; Line 1148
  0105a	c7 05 94 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29588, 0
; Line 1149
  01064	c7 05 98 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29592, 0
; Line 1150
  0106e	c7 05 9c 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29596, 0
; Line 1151
  01078	c7 05 a4 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29604, 0
; Line 1152
  01082	c6 83 08 00 00
	00 01		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+8], 1
; Line 1155
  01089	80 fa 01	 cmp	 dl, 1
  0108c	0f 85 3a 01 00
	00		 jne	 $LN90@BT_BuildTe
; Line 1157
  01092	8b 0d ac 73 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29612
  01098	89 4d cc	 mov	 DWORD PTR _tempbuildstep$1$[ebp], ecx
; Line 1158
  0109b	c7 05 ac 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29612, 0
; Line 1187
  010a5	c7 05 a8 73 00
	00 13 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 19 ; 00000013H
; Line 1196
  010af	38 15 8c 73 00
	00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29580, dl
  010b5	0f 85 0b 01 00
	00		 jne	 $LN101@BT_BuildTe
; Line 1204
  010bb	8b 3d 90 73 00
	00		 mov	 edi, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29584
  010c1	8b 1d a4 73 00
	00		 mov	 ebx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29604
  010c7	89 7d f0	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A$1[ebp], edi
  010ca	0f b7 47 42	 movzx	 eax, WORD PTR [edi+66]
  010ce	2b c3		 sub	 eax, ebx
  010d0	89 45 f4	 mov	 DWORD PTR tv5975[ebp], eax
; Line 1212
  010d3	85 c0		 test	 eax, eax
  010d5	0f 8e 9a 00 00
	00		 jle	 $LN94@BT_BuildTe
  010db	8b 15 a0 73 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29600
  010e1	8b 35 94 73 00
	00		 mov	 esi, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29588
  010e7	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL329@BT_BuildTe:
; Line 3625
  010f0	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
  010f3	8d 0c d2	 lea	 ecx, DWORD PTR [edx+edx*8]
  010f6	69 fe 94 00 00
	00		 imul	 edi, esi, 148
  010fc	03 7c 88 10	 add	 edi, DWORD PTR [eax+ecx*4+16]
; Line 3628
  01100	80 3f 00	 cmp	 BYTE PTR [edi], 0
  01103	75 23		 jne	 SHORT $LN106@BT_BuildTe
; Line 3635
  01105	57		 push	 edi
  01106	e8 00 00 00 00	 call	 ?BT_Intern_BuildSector@@YAXPAUs_BT_Sector@@@Z ; BT_Intern_BuildSector
  0110b	a1 90 73 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29584
  01110	83 c4 04	 add	 esp, 4
  01113	8b 1d a4 73 00
	00		 mov	 ebx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29604
  01119	8b 15 a0 73 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29600
  0111f	8b 35 94 73 00
	00		 mov	 esi, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29588
  01125	89 45 f0	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A$1[ebp], eax
$LN106@BT_BuildTe:
; Line 3640
  01128	0f b7 47 08	 movzx	 eax, WORD PTR [edi+8]
; Line 3648
  0112c	8d 0c d2	 lea	 ecx, DWORD PTR [edx+edx*8]
  0112f	a3 98 73 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29592, eax
  01134	46		 inc	 esi
  01135	0f b7 47 0a	 movzx	 eax, WORD PTR [edi+10]
  01139	43		 inc	 ebx
  0113a	8b 7d f0	 mov	 edi, DWORD PTR ?BT_Main@@3Us_BT_main@@A$1[ebp]
  0113d	a3 9c 73 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29596, eax
  01142	89 35 94 73 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29588, esi
  01148	89 1d a4 73 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29604, ebx
  0114e	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
  01151	0f b7 44 88 0a	 movzx	 eax, WORD PTR [eax+ecx*4+10]
  01156	3b f0		 cmp	 esi, eax
  01158	75 0f		 jne	 SHORT $LN93@BT_BuildTe
; Line 3650
  0115a	33 f6		 xor	 esi, esi
; Line 3651
  0115c	42		 inc	 edx
  0115d	89 35 94 73 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29588, esi
  01163	89 15 a0 73 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29600, edx
$LN93@BT_BuildTe:
; Line 1212
  01169	83 6d f4 01	 sub	 DWORD PTR tv5975[ebp], 1
  0116d	75 81		 jne	 SHORT $LL329@BT_BuildTe
  0116f	8b 4d cc	 mov	 ecx, DWORD PTR _tempbuildstep$1$[ebp]
  01172	8b 75 a4	 mov	 esi, DWORD PTR _Terrain$1$[ebp]
$LN94@BT_BuildTe:
; Line 1218
  01175	0f b7 47 42	 movzx	 eax, WORD PTR [edi+66]
  01179	3b d8		 cmp	 ebx, eax
  0117b	75 49		 jne	 SHORT $LN101@BT_BuildTe
; Line 1221
  0117d	c6 05 8c 73 00
	00 00		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29580, 0
; Line 1222
  01184	c6 47 09 01	 mov	 BYTE PTR [edi+9], 1
; Line 1223
  01188	a1 90 73 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29584
  0118d	8b 40 70	 mov	 eax, DWORD PTR [eax+112]
  01190	c6 40 01 01	 mov	 BYTE PTR [eax+1], 1
; Line 1224
  01194	c7 05 90 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29584, 0
; Line 1225
  0119e	c7 05 a0 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29600, 0
; Line 1226
  011a8	c7 05 94 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29588, 0
; Line 1227
  011b2	c7 05 98 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29592, 0
; Line 1228
  011bc	c7 05 9c 73 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29596, 0
$LN101@BT_BuildTe:
; Line 1160
  011c6	89 0d ac 73 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29612, ecx
$LN90@BT_BuildTe:
; Line 1164
  011cc	68 00 00 00 00	 push	 OFFSET ?BT_Intern_RTTMSUpdateHandler@@YAXKKKGGPAM@Z ; BT_Intern_RTTMSUpdateHandler
  011d1	ff 75 08	 push	 DWORD PTR _terrainid$[ebp]
  011d4	e8 00 00 00 00	 call	 ?BT_RTTMS_AddUpdateHandler@@YAXKP6AXKKKGGPAM@Z@Z ; BT_RTTMS_AddUpdateHandler
; Line 1167
  011d9	56		 push	 esi
  011da	e8 00 00 00 00	 call	 ?BT_Intern_FixLODSeams@@YAXPAUs_BT_terrain@@@Z ; BT_Intern_FixLODSeams
; Line 1171
  011df	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR [esp+8], 0
  011e7	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR [esp+4], 0
  011ef	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  011f6	51		 push	 ecx
  011f7	c7 04 24 00 00
	00 00		 mov	 DWORD PTR [esp], 0
  011fe	e8 00 00 00 00	 call	 ?SetAutoCam@@YAXMMMM@Z	; SetAutoCam
  01203	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1176
  01206	5f		 pop	 edi
  01207	5e		 pop	 esi
  01208	5b		 pop	 ebx
  01209	8b e5		 mov	 esp, ebp
  0120b	5d		 pop	 ebp
  0120c	c3		 ret	 0
$LN232@BT_BuildTe:
; Line 710
  0120d	6a 04		 push	 4
; Line 1176
  0120f	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  01214	83 c4 04	 add	 esp, 4
  01217	5f		 pop	 edi
  01218	5e		 pop	 esi
  01219	5b		 pop	 ebx
  0121a	8b e5		 mov	 esp, ebp
  0121c	5d		 pop	 ebp
  0121d	c3		 ret	 0
$LN34@BT_BuildTe:
; Line 1173
  0121e	6a 02		 push	 2
; Line 1176
  01220	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  01225	83 c4 04	 add	 esp, 4
  01228	5f		 pop	 edi
  01229	5e		 pop	 esi
  0122a	5b		 pop	 ebx
  0122b	8b e5		 mov	 esp, ebp
  0122d	5d		 pop	 ebp
  0122e	c3		 ret	 0
?BT_BuildTerrain@@YAXKK_N@Z ENDP			; BT_BuildTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_BuildTerrain@@YAXKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_ObjectID$ = 12						; size = 4
?BT_BuildTerrain@@YAXKK@Z PROC				; BT_BuildTerrain, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 659
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 660
  00003	6a 00		 push	 0
  00005	ff 75 0c	 push	 DWORD PTR _ObjectID$[ebp]
  00008	ff 75 08	 push	 DWORD PTR _terrainid$[ebp]
  0000b	e8 00 00 00 00	 call	 ?BT_BuildTerrain@@YAXKK_N@Z ; BT_BuildTerrain
  00010	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 661
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?BT_BuildTerrain@@YAXKK@Z ENDP				; BT_BuildTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainLODDistance@@YAXKEM@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_LODLevel$ = 12						; size = 1
_value$ = 16						; size = 4
?BT_SetTerrainLODDistance@@YAXKEM@Z PROC		; BT_SetTerrainLODDistance, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 623
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 625
  00006	c7 05 a8 73 00
	00 11 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 17 ; 00000011H
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 64		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001a	6b c9 74	 imul	 ecx, ecx, 116
; Line 628
  0001d	80 b9 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 0
  00024	74 58		 je	 SHORT $LN2@BT_SetTerr
; Line 630
  00026	8a 45 0c	 mov	 al, BYTE PTR _LODLevel$[ebp]
  00029	3a 81 32 00 00
	00		 cmp	 al, BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx+50]
  0002f	73 41		 jae	 SHORT $LN4@BT_SetTerr
; Line 633
  00031	80 b9 08 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx+8], 1
  00038	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _value$[ebp]
  0003d	0f b6 c0	 movzx	 eax, al
  00040	8d 14 c0	 lea	 edx, DWORD PTR [eax+eax*8]
  00043	8b 81 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+68]
  00049	75 1f		 jne	 SHORT $LN6@BT_SetTerr
; Line 634
  0004b	8b 44 90 20	 mov	 eax, DWORD PTR [eax+edx*4+32]
  0004f	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
; Line 635
  00054	f3 0f 5e 81 34
	00 00 00	 divss	 xmm0, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+52]
  0005c	8b 81 44 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+68]
  00062	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@43000000
$LN6@BT_SetTerr:
; Line 650
  0006a	f3 0f 11 44 90
	0c		 movss	 DWORD PTR [eax+edx*4+12], xmm0
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
$LN4@BT_SetTerr:
; Line 642
  00072	6a 05		 push	 5
; Line 650
  00074	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00079	83 c4 04	 add	 esp, 4
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 647
  0007e	6a 02		 push	 2
; Line 650
  00080	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00085	83 c4 04	 add	 esp, 4
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
?BT_SetTerrainLODDistance@@YAXKEM@Z ENDP		; BT_SetTerrainLODDistance
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainYScale@@YAXKM@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_YScale$ = 12						; size = 4
?BT_SetTerrainYScale@@YAXKM@Z PROC			; BT_SetTerrainYScale, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 597
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 599
  00006	c7 05 a8 73 00
	00 10 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 16 ; 00000010H
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 26		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001a	6b c9 74	 imul	 ecx, ecx, 116
; Line 602
  0001d	80 b9 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 0
  00024	74 1a		 je	 SHORT $LN2@BT_SetTerr
; Line 608
  00026	8b 81 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+112]
  0002c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _YScale$[ebp]
  00031	f3 0f 11 81 38
	00 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+56], xmm0
  00039	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0
; Line 614
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 611
  00040	6a 02		 push	 2
  00042	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00047	83 c4 04	 add	 esp, 4
; Line 614
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?BT_SetTerrainYScale@@YAXKM@Z ENDP			; BT_SetTerrainYScale
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainScale@@YAXKM@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_Scale$ = 12						; size = 4
?BT_SetTerrainScale@@YAXKM@Z PROC			; BT_SetTerrainScale, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 573
  00006	c7 05 a8 73 00
	00 0f 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 15 ; 0000000fH
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 26		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001a	6b c9 74	 imul	 ecx, ecx, 116
; Line 576
  0001d	80 b9 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 0
  00024	74 1a		 je	 SHORT $LN2@BT_SetTerr
; Line 582
  00026	8b 81 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+112]
  0002c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _Scale$[ebp]
  00031	f3 0f 11 81 34
	00 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+52], xmm0
  00039	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0
; Line 588
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 585
  00040	6a 02		 push	 2
  00042	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00047	83 c4 04	 add	 esp, 4
; Line 588
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?BT_SetTerrainScale@@YAXKM@Z ENDP			; BT_SetTerrainScale
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainSmoothing@@YAXKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_Amount$ = 12						; size = 4
?BT_SetTerrainSmoothing@@YAXKK@Z PROC			; BT_SetTerrainSmoothing, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 541
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 541
  00006	56		 push	 esi
; Line 543
  00007	c7 05 a8 73 00
	00 0e 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 14 ; 0000000eH
; Line 3666
  00011	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00014	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00019	77 38		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001b	6b f1 74	 imul	 esi, ecx, 116
; Line 546
  0001e	80 be 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[esi], 0
  00025	74 2c		 je	 SHORT $LN2@BT_SetTerr
; Line 556
  00027	8b 86 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[esi+112]
  0002d	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  00032	39 55 0c	 cmp	 DWORD PTR _Amount$[ebp], edx
  00035	0f 46 55 0c	 cmovbe	 edx, DWORD PTR _Amount$[ebp]
  00039	85 d2		 test	 edx, edx
  0003b	89 96 2c 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[esi+44], edx
  00041	0f 95 c1	 setne	 cl
  00044	88 48 0c	 mov	 BYTE PTR [eax+12], cl
; Line 557
  00047	8b 86 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[esi+112]
  0004d	5e		 pop	 esi
  0004e	89 50 38	 mov	 DWORD PTR [eax+56], edx
; Line 562
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 559
  00053	6a 02		 push	 2
  00055	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0005a	83 c4 04	 add	 esp, 4
  0005d	5e		 pop	 esi
; Line 562
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
?BT_SetTerrainSmoothing@@YAXKK@Z ENDP			; BT_SetTerrainSmoothing
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainQuadRotation@@YAXK_N@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_Enabled$ = 12						; size = 1
?BT_SetTerrainQuadRotation@@YAXK_N@Z PROC		; BT_SetTerrainQuadRotation, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 515
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 517
  00006	c7 05 a8 73 00
	00 0d 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 13 ; 0000000dH
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 20		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001a	6b d1 74	 imul	 edx, ecx, 116
; Line 520
  0001d	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00024	74 14		 je	 SHORT $LN2@BT_SetTerr
; Line 527
  00026	8b 82 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+112]
  0002c	8a 4d 0c	 mov	 cl, BYTE PTR _Enabled$[ebp]
  0002f	88 8a 30 00 00
	00		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+48], cl
  00035	88 48 0e	 mov	 BYTE PTR [eax+14], cl
; Line 532
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 529
  0003a	6a 02		 push	 2
  0003c	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00041	83 c4 04	 add	 esp, 4
; Line 532
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?BT_SetTerrainQuadRotation@@YAXK_N@Z ENDP		; BT_SetTerrainQuadRotation
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainQuadReduction@@YAXK_N@Z
_TEXT	SEGMENT
_terrainID$ = 8						; size = 4
_enabled$ = 12						; size = 1
?BT_SetTerrainQuadReduction@@YAXK_N@Z PROC		; BT_SetTerrainQuadReduction, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 490
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainID$[ebp]
; Line 492
  00006	c7 05 a8 73 00
	00 0c 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 12 ; 0000000cH
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 1e		 ja	 SHORT $LN1@BT_SetTerr
; Line 3669
  0001a	6b d1 74	 imul	 edx, ecx, 116
; Line 495
  0001d	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00024	74 12		 je	 SHORT $LN1@BT_SetTerr
; Line 505
  00026	8b 82 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+112]
  0002c	8a 4d 0c	 mov	 cl, BYTE PTR _enabled$[ebp]
  0002f	88 8a 31 00 00
	00		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+49], cl
  00035	88 48 0d	 mov	 BYTE PTR [eax+13], cl
$LN1@BT_SetTerr:
; Line 506
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?BT_SetTerrainQuadReduction@@YAXK_N@Z ENDP		; BT_SetTerrainQuadReduction
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainDetailTile@@YAXKM@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_Tile$ = 12						; size = 4
?BT_SetTerrainDetailTile@@YAXKM@Z PROC			; BT_SetTerrainDetailTile, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 464
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 466
  00006	c7 05 a8 73 00
	00 0a 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 10 ; 0000000aH
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 26		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001a	6b c9 74	 imul	 ecx, ecx, 116
; Line 469
  0001d	80 b9 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 0
  00024	74 1a		 je	 SHORT $LN2@BT_SetTerr
; Line 475
  00026	8b 81 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+112]
  0002c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _Tile$[ebp]
  00031	f3 0f 11 81 3c
	00 00 00	 movss	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+60], xmm0
  00039	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0
; Line 481
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 478
  00040	6a 02		 push	 2
  00042	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00047	83 c4 04	 add	 esp, 4
; Line 481
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?BT_SetTerrainDetailTile@@YAXKM@Z ENDP			; BT_SetTerrainDetailTile
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainSplit@@YAXKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_Split$ = 12						; size = 4
?BT_SetTerrainSplit@@YAXKK@Z PROC			; BT_SetTerrainSplit, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 441
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 443
  00006	c7 05 a8 73 00
	00 09 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 9
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 1c		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001a	6b c9 74	 imul	 ecx, ecx, 116
; Line 446
  0001d	80 b9 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 0
  00024	74 10		 je	 SHORT $LN2@BT_SetTerr
; Line 449
  00026	8b 89 44 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+68]
  0002c	66 8b 45 0c	 mov	 ax, WORD PTR _Split$[ebp]
  00030	66 89 41 14	 mov	 WORD PTR [ecx+20], ax
; Line 455
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 452
  00036	6a 02		 push	 2
  00038	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0003d	83 c4 04	 add	 esp, 4
; Line 455
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?BT_SetTerrainSplit@@YAXKK@Z ENDP			; BT_SetTerrainSplit
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainLOD@@YAXKE@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_LODLevels$ = 12					; size = 1
?BT_SetTerrainLOD@@YAXKE@Z PROC				; BT_SetTerrainLOD, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 408
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 410
  00006	c7 05 a8 73 00
	00 08 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 8
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 33		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001a	6b d1 74	 imul	 edx, ecx, 116
; Line 413
  0001d	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00024	74 27		 je	 SHORT $LN2@BT_SetTerr
; Line 416
  00026	8a 4d 0c	 mov	 cl, BYTE PTR _LODLevels$[ebp]
  00029	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  0002c	3c 0f		 cmp	 al, 15			; 0000000fH
  0002e	77 11		 ja	 SHORT $LN4@BT_SetTerr
; Line 422
  00030	8b 82 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+112]
  00036	88 8a 32 00 00
	00		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+50], cl
  0003c	88 48 0f	 mov	 BYTE PTR [eax+15], cl
; Line 432
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
$LN4@BT_SetTerr:
; Line 425
  00041	6a 03		 push	 3
; Line 432
  00043	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00048	83 c4 04	 add	 esp, 4
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 429
  0004d	6a 02		 push	 2
; Line 432
  0004f	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00054	83 c4 04	 add	 esp, 4
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
?BT_SetTerrainLOD@@YAXKE@Z ENDP				; BT_SetTerrainLOD
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_AddTerrainEnvironment@@YAKKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_Colour$ = 12						; size = 4
?BT_AddTerrainEnvironment@@YAKKK@Z PROC			; BT_AddTerrainEnvironment, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 380
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 382
  00006	c7 05 a8 73 00
	00 3a 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 58 ; 0000003aH
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 39		 ja	 SHORT $LN2@BT_AddTerr
; Line 3669
  0001a	6b c9 74	 imul	 ecx, ecx, 116
; Line 385
  0001d	80 b9 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 0
  00024	74 2d		 je	 SHORT $LN2@BT_AddTerr
; Line 387
  00026	80 b9 08 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx+8], 1
  0002d	75 0e		 jne	 SHORT $LN4@BT_AddTerr
; Line 389
  0002f	6a 12		 push	 18			; 00000012H
; Line 399
  00031	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00036	83 c4 04	 add	 esp, 4
  00039	33 c0		 xor	 eax, eax
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
$LN4@BT_AddTerr:
; Line 393
  0003d	ff 75 0c	 push	 DWORD PTR _Colour$[ebp]
  00040	ff b1 64 00 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+100]
  00046	e8 00 00 00 00	 call	 ?BT_Intern_AddEnvironment@@YAGPAUBT_EnvironmentMap@@K@Z ; BT_Intern_AddEnvironment
  0004b	83 c4 08	 add	 esp, 8
  0004e	0f b7 c0	 movzx	 eax, ax
; Line 399
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
$LN2@BT_AddTerr:
; Line 396
  00053	6a 02		 push	 2
; Line 399
  00055	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0005a	83 c4 04	 add	 esp, 4
  0005d	33 c0		 xor	 eax, eax
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
?BT_AddTerrainEnvironment@@YAKKK@Z ENDP			; BT_AddTerrainEnvironment
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainEnvironment@@YAXKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_image$ = 12						; size = 4
?BT_SetTerrainEnvironment@@YAXKK@Z PROC			; BT_SetTerrainEnvironment, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 358
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 360
  00006	c7 05 a8 73 00
	00 07 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 7
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 17		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001a	6b c9 74	 imul	 ecx, ecx, 116
; Line 363
  0001d	80 b9 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 0
  00024	74 0b		 je	 SHORT $LN2@BT_SetTerr
; Line 366
  00026	8b 45 0c	 mov	 eax, DWORD PTR _image$[ebp]
  00029	89 81 24 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+36], eax
; Line 371
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 368
  00031	6a 02		 push	 2
  00033	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00038	83 c4 04	 add	 esp, 4
; Line 371
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
?BT_SetTerrainEnvironment@@YAXKK@Z ENDP			; BT_SetTerrainEnvironment
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainDetailBlendMode@@YAXKE@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_mode$ = 12						; size = 1
?BT_SetTerrainDetailBlendMode@@YAXKE@Z PROC		; BT_SetTerrainDetailBlendMode, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 326
  00006	53		 push	 ebx
  00007	8a 5d 0c	 mov	 bl, BYTE PTR _mode$[ebp]
  0000a	56		 push	 esi
; Line 3666
  0000b	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
; Line 328
  0000e	c7 05 a8 73 00
	00 38 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 56 ; 00000038H
; Line 3666
  00018	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  0001d	77 49		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001f	6b f1 74	 imul	 esi, ecx, 116
; Line 331
  00022	80 be 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[esi], 0
  00029	74 3d		 je	 SHORT $LN2@BT_SetTerr
; Line 333
  0002b	88 9e 5d 00 00
	00		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[esi+93], bl
  00031	80 be 08 00 00
	00 01		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[esi+8], 1
  00038	75 21		 jne	 SHORT $LN4@BT_SetTerr
; Line 337
  0003a	8b 8e 20 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[esi+32]
  00040	85 c9		 test	 ecx, ecx
  00042	74 17		 je	 SHORT $LN4@BT_SetTerr
; Line 338
  00044	0f b6 c3	 movzx	 eax, bl
  00047	50		 push	 eax
  00048	6a 0b		 push	 11			; 0000000bH
  0004a	51		 push	 ecx
  0004b	6a 01		 push	 1
  0004d	ff b6 14 00 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[esi+20]
  00053	e8 00 00 00 00	 call	 ?SetObjectBlendMap@@YAXHHHHH@Z ; SetObjectBlendMap
  00058	83 c4 14	 add	 esp, 20			; 00000014H
$LN4@BT_SetTerr:
; Line 344
  0005b	8b 86 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[esi+112]
  00061	5e		 pop	 esi
  00062	88 58 33	 mov	 BYTE PTR [eax+51], bl
; Line 349
  00065	5b		 pop	 ebx
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 346
  00068	6a 02		 push	 2
  0006a	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0006f	83 c4 04	 add	 esp, 4
  00072	5e		 pop	 esi
; Line 349
  00073	5b		 pop	 ebx
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
?BT_SetTerrainDetailBlendMode@@YAXKE@Z ENDP		; BT_SetTerrainDetailBlendMode
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainDetail@@YAXKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_image$ = 12						; size = 4
?BT_SetTerrainDetail@@YAXKK@Z PROC			; BT_SetTerrainDetail, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 296
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 296
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR _image$[ebp]
; Line 3666
  0000b	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
; Line 298
  0000e	c7 05 a8 73 00
	00 06 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 6
; Line 3666
  00018	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  0001d	77 43		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001f	6b f1 74	 imul	 esi, ecx, 116
; Line 301
  00022	80 be 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[esi], 0
  00029	74 37		 je	 SHORT $LN2@BT_SetTerr
; Line 303
  0002b	89 be 20 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[esi+32], edi
  00031	80 be 08 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[esi+8], 0
  00038	74 1b		 je	 SHORT $LN4@BT_SetTerr
; Line 307
  0003a	0f b6 86 5d 00
	00 00		 movzx	 eax, BYTE PTR ?BT_Main@@3Us_BT_main@@A[esi+93]
  00041	50		 push	 eax
  00042	6a 0b		 push	 11			; 0000000bH
  00044	57		 push	 edi
  00045	6a 01		 push	 1
  00047	ff b6 14 00 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[esi+20]
  0004d	e8 00 00 00 00	 call	 ?SetObjectBlendMap@@YAXHHHHH@Z ; SetObjectBlendMap
  00052	83 c4 14	 add	 esp, 20			; 00000014H
$LN4@BT_SetTerr:
; Line 312
  00055	8b 86 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[esi+112]
  0005b	89 78 08	 mov	 DWORD PTR [eax+8], edi
  0005e	5f		 pop	 edi
; Line 317
  0005f	5e		 pop	 esi
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 314
  00062	6a 02		 push	 2
  00064	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00069	83 c4 04	 add	 esp, 4
  0006c	5f		 pop	 edi
; Line 317
  0006d	5e		 pop	 esi
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
?BT_SetTerrainDetail@@YAXKK@Z ENDP			; BT_SetTerrainDetail
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainExclusionThreshold@@YAXKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_threshold$ = 12					; size = 4
?BT_SetTerrainExclusionThreshold@@YAXKK@Z PROC		; BT_SetTerrainExclusionThreshold, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 263
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 265
  00006	c7 05 a8 73 00
	00 33 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 51 ; 00000033H
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 35		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001a	6b d1 74	 imul	 edx, ecx, 116
; Line 268
  0001d	80 ba 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx], 0
  00024	74 29		 je	 SHORT $LN2@BT_SetTerr
; Line 270
  00026	80 ba 08 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+8], 0
  0002d	75 14		 jne	 SHORT $LN4@BT_SetTerr
; Line 277
  0002f	8b 82 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[edx+112]
  00035	8a 4d 0c	 mov	 cl, BYTE PTR _threshold$[ebp]
  00038	88 8a 55 00 00
	00		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[edx+85], cl
  0003e	88 48 31	 mov	 BYTE PTR [eax+49], cl
; Line 287
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
$LN4@BT_SetTerr:
; Line 280
  00043	6a 11		 push	 17			; 00000011H
; Line 287
  00045	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0004a	83 c4 04	 add	 esp, 4
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 284
  0004f	6a 02		 push	 2
; Line 287
  00051	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00056	83 c4 04	 add	 esp, 4
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
?BT_SetTerrainExclusionThreshold@@YAXKK@Z ENDP		; BT_SetTerrainExclusionThreshold
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainExclusion@@YAXKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_image$ = 12						; size = 4
?BT_SetTerrainExclusion@@YAXKK@Z PROC			; BT_SetTerrainExclusion, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 232
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 234
  00006	c7 05 a8 73 00
	00 05 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 5
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 36		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001a	6b c9 74	 imul	 ecx, ecx, 116
; Line 237
  0001d	80 b9 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 0
  00024	74 2a		 je	 SHORT $LN2@BT_SetTerr
; Line 239
  00026	80 b9 08 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx+8], 0
  0002d	75 15		 jne	 SHORT $LN4@BT_SetTerr
; Line 243
  0002f	8b 45 0c	 mov	 eax, DWORD PTR _image$[ebp]
  00032	89 81 28 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+40], eax
; Line 245
  00038	8b 81 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+112]
  0003e	c6 40 30 01	 mov	 BYTE PTR [eax+48], 1
; Line 255
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
$LN4@BT_SetTerr:
; Line 248
  00044	6a 11		 push	 17			; 00000011H
; Line 255
  00046	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0004b	83 c4 04	 add	 esp, 4
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 252
  00050	6a 02		 push	 2
; Line 255
  00052	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00057	83 c4 04	 add	 esp, 4
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?BT_SetTerrainExclusion@@YAXKK@Z ENDP			; BT_SetTerrainExclusion
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainTexture@@YAXKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_image$ = 12						; size = 4
?BT_SetTerrainTexture@@YAXKK@Z PROC			; BT_SetTerrainTexture, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 201
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 201
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR _image$[ebp]
; Line 3666
  0000b	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
; Line 203
  0000e	c7 05 a8 73 00
	00 04 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 4
; Line 3666
  00018	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  0001d	77 3d		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001f	6b f1 74	 imul	 esi, ecx, 116
; Line 206
  00022	80 be 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[esi], 0
  00029	74 31		 je	 SHORT $LN2@BT_SetTerr
; Line 208
  0002b	89 be 1c 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[esi+28], edi
  00031	80 be 08 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[esi+8], 0
  00038	74 15		 je	 SHORT $LN4@BT_SetTerr
; Line 212
  0003a	6a 04		 push	 4
  0003c	6a 0a		 push	 10			; 0000000aH
  0003e	57		 push	 edi
  0003f	6a 00		 push	 0
  00041	ff b6 14 00 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[esi+20]
  00047	e8 00 00 00 00	 call	 ?SetObjectBlendMap@@YAXHHHHH@Z ; SetObjectBlendMap
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
$LN4@BT_SetTerr:
; Line 218
  0004f	8b 86 70 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[esi+112]
  00055	89 78 04	 mov	 DWORD PTR [eax+4], edi
  00058	5f		 pop	 edi
; Line 223
  00059	5e		 pop	 esi
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 220
  0005c	6a 02		 push	 2
  0005e	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00063	83 c4 04	 add	 esp, 4
  00066	5f		 pop	 edi
; Line 223
  00067	5e		 pop	 esi
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
?BT_SetTerrainTexture@@YAXKK@Z ENDP			; BT_SetTerrainTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_SetTerrainHeightmap@@YAXKK@Z
_TEXT	SEGMENT
_terrainid$ = 8						; size = 4
_image$ = 12						; size = 4
?BT_SetTerrainHeightmap@@YAXKK@Z PROC			; BT_SetTerrainHeightmap, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 176
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 3666
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _terrainid$[ebp]
; Line 178
  00006	c7 05 a8 73 00
	00 02 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 2
; Line 3666
  00010	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00013	3d fe 00 00 00	 cmp	 eax, 254		; 000000feH
  00018	77 2c		 ja	 SHORT $LN2@BT_SetTerr
; Line 3669
  0001a	6b c9 74	 imul	 ecx, ecx, 116
; Line 181
  0001d	80 b9 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx], 0
  00024	74 20		 je	 SHORT $LN2@BT_SetTerr
; Line 183
  00026	80 b9 08 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ecx+8], 0
  0002d	75 0b		 jne	 SHORT $LN4@BT_SetTerr
; Line 186
  0002f	8b 45 0c	 mov	 eax, DWORD PTR _image$[ebp]
  00032	89 81 18 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ecx+24], eax
; Line 195
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
$LN4@BT_SetTerr:
; Line 188
  0003a	6a 11		 push	 17			; 00000011H
; Line 195
  0003c	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00041	83 c4 04	 add	 esp, 4
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
$LN2@BT_SetTerr:
; Line 192
  00046	6a 02		 push	 2
; Line 195
  00048	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0004d	83 c4 04	 add	 esp, 4
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?BT_SetTerrainHeightmap@@YAXKK@Z ENDP			; BT_SetTerrainHeightmap
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_MakeTerrain@@YAKXZ
_TEXT	SEGMENT
?BT_MakeTerrain@@YAKXZ PROC				; BT_MakeTerrain, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 100
  00000	80 3d 68 74 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29800, 0
  00007	c7 05 a8 73 00
	00 01 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29608, 1
  00011	0f 84 81 01 00
	00		 je	 $LN4@BT_MakeTer
; Line 103
  00017	56		 push	 esi
  00018	be 01 00 00 00	 mov	 esi, 1
  0001d	0f 1f 00	 npad	 3
$LL2@BT_MakeTer:
; Line 107
  00020	81 fe 00 01 00
	00		 cmp	 esi, 256		; 00000100H
  00026	0f 87 5e 01 00
	00		 ja	 $LN14@BT_MakeTer
; Line 113
  0002c	6b c6 74	 imul	 eax, esi, 116
  0002f	80 b8 00 00 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[eax], 0
  00036	74 03		 je	 SHORT $LN18@BT_MakeTer
; Line 104
  00038	46		 inc	 esi
  00039	eb e5		 jmp	 SHORT $LL2@BT_MakeTer
$LN18@BT_MakeTer:
  0003b	53		 push	 ebx
; Line 122
  0003c	6b de 74	 imul	 ebx, esi, 116
  0003f	57		 push	 edi
  00040	6a 73		 push	 115			; 00000073H
  00042	6a 00		 push	 0
  00044	8d 83 01 00 00
	00		 lea	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+1]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 _memset
; Line 129
  00050	68 40 02 00 00	 push	 576			; 00000240H
  00055	c6 83 00 00 00
	00 01		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx], 1
  0005c	89 b3 04 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+4], esi
  00062	c7 83 34 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+52], 1065353216 ; 3f800000H
  0006c	c7 83 38 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+56], 1065353216 ; 3f800000H
  00076	c7 83 3c 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+60], 1065353216 ; 3f800000H
  00080	c6 83 32 00 00
	00 01		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+50], 1
  00087	e8 00 00 00 00	 call	 _malloc
  0008c	83 c4 10	 add	 esp, 16			; 00000010H
  0008f	89 83 44 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68], eax
; Line 130
  00095	85 c0		 test	 eax, eax
  00097	75 0a		 jne	 SHORT $LN8@BT_MakeTer
; Line 131
  00099	6a 1b		 push	 27			; 0000001bH
  0009b	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  000a0	83 c4 04	 add	 esp, 4
$LN8@BT_MakeTer:
; Line 132
  000a3	68 40 02 00 00	 push	 576			; 00000240H
  000a8	6a 00		 push	 0
  000aa	ff b3 44 00 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+68]
  000b0	e8 00 00 00 00	 call	 _memset
; Line 140
  000b5	6a 1c		 push	 28			; 0000001cH
  000b7	66 c7 83 08 00
	00 00 00 00	 mov	 WORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+8], 0
  000c0	c6 83 40 00 00
	00 01		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+64], 1
  000c7	c6 83 55 00 00
	00 80		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+85], 128 ; 00000080H
  000ce	c6 83 5d 00 00
	00 08		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A[ebx+93], 8
  000d5	e8 00 00 00 00	 call	 _malloc
  000da	83 c4 10	 add	 esp, 16			; 00000010H
  000dd	89 83 64 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+100], eax
; Line 141
  000e3	85 c0		 test	 eax, eax
  000e5	75 0a		 jne	 SHORT $LN9@BT_MakeTer
; Line 142
  000e7	6a 1b		 push	 27			; 0000001bH
  000e9	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  000ee	83 c4 04	 add	 esp, 4
$LN9@BT_MakeTer:
; Line 143
  000f1	8b 83 64 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+100]
  000f7	0f 57 c0	 xorps	 xmm0, xmm0
; Line 144
  000fa	6a 04		 push	 4
  000fc	0f 11 00	 movups	 XMMWORD PTR [eax], xmm0
  000ff	66 0f d6 40 10	 movq	 QWORD PTR [eax+16], xmm0
  00104	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
  0010b	e8 00 00 00 00	 call	 _malloc
  00110	8b 8b 64 00 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+100]
  00116	83 c4 04	 add	 esp, 4
  00119	89 41 14	 mov	 DWORD PTR [ecx+20], eax
; Line 145
  0011c	8b 83 64 00 00
	00		 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+100]
  00122	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00126	75 0a		 jne	 SHORT $LN10@BT_MakeTer
; Line 146
  00128	6a 1b		 push	 27			; 0000001bH
  0012a	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0012f	83 c4 04	 add	 esp, 4
$LN10@BT_MakeTer:
; Line 149
  00132	6a 40		 push	 64			; 00000040H
  00134	e8 00 00 00 00	 call	 _malloc
  00139	8b f8		 mov	 edi, eax
  0013b	83 c4 04	 add	 esp, 4
; Line 150
  0013e	85 ff		 test	 edi, edi
  00140	75 0a		 jne	 SHORT $LN11@BT_MakeTer
; Line 151
  00142	6a 1b		 push	 27			; 0000001bH
  00144	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00149	83 c4 04	 add	 esp, 4
$LN11@BT_MakeTer:
; Line 152
  0014c	6a 40		 push	 64			; 00000040H
  0014e	6a 00		 push	 0
  00150	57		 push	 edi
  00151	e8 00 00 00 00	 call	 _memset
  00156	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 160
  00159	89 bb 70 00 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A[ebx+112], edi
  0015f	c7 47 10 00 00
	80 3f		 mov	 DWORD PTR [edi+16], 1065353216 ; 3f800000H
; Line 163
  00166	8b c6		 mov	 eax, esi
  00168	c7 47 14 00 00
	80 3f		 mov	 DWORD PTR [edi+20], 1065353216 ; 3f800000H
  0016f	c7 47 18 00 00
	80 3f		 mov	 DWORD PTR [edi+24], 1065353216 ; 3f800000H
  00176	c6 47 0f 01	 mov	 BYTE PTR [edi+15], 1
  0017a	c6 47 1c 01	 mov	 BYTE PTR [edi+28], 1
  0017e	c6 47 31 80	 mov	 BYTE PTR [edi+49], 128	; 00000080H
  00182	c6 47 33 08	 mov	 BYTE PTR [edi+51], 8
  00186	5f		 pop	 edi
  00187	5b		 pop	 ebx
  00188	5e		 pop	 esi
; Line 167
  00189	c3		 ret	 0
$LN14@BT_MakeTer:
; Line 109
  0018a	6a 01		 push	 1
  0018c	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00191	83 c4 04	 add	 esp, 4
; Line 110
  00194	33 c0		 xor	 eax, eax
  00196	5e		 pop	 esi
; Line 167
  00197	c3		 ret	 0
$LN4@BT_MakeTer:
; Line 166
  00198	33 c0		 xor	 eax, eax
; Line 167
  0019a	c3		 ret	 0
?BT_MakeTerrain@@YAKXZ ENDP				; BT_MakeTerrain
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BTDestructor@@YAXXZ
_TEXT	SEGMENT
?BTDestructor@@YAXXZ PROC				; BTDestructor, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 83
  00000	c2 00 00	 ret	 0
?BTDestructor@@YAXXZ ENDP				; BTDestructor
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BTConstructor@@YAXXZ
_TEXT	SEGMENT
?BTConstructor@@YAXXZ PROC				; BTConstructor, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\main.cpp
; Line 67
  00000	68 4c 1d 00 00	 push	 7500			; 00001d4cH
  00005	68 00 00 00 00	 push	 OFFSET ?BT_Intern_Render@@YAXXZ ; BT_Intern_Render
  0000a	c7 05 ac 73 00
	00 01 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29612, 1
  00014	e8 00 00 00 00	 call	 ?AddToRenderList@@YAXPAXH@Z ; AddToRenderList
; Line 68
  00019	68 6c 74 00 00	 push	 29804			; 0000746cH
  0001e	6a 00		 push	 0
  00020	68 00 00 00 00	 push	 OFFSET ?BT_Main@@3Us_BT_main@@A ; BT_Main
  00025	e8 00 00 00 00	 call	 _memset
; Line 71
  0002a	68 e8 03 00 00	 push	 1000			; 000003e8H
  0002f	c7 05 58 74 00
	00 e8 03 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29784, 1000 ; 000003e8H
  00039	c7 05 5c 74 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29788, 0
  00043	e8 00 00 00 00	 call	 ??_U@YAPAXI@Z		; operator new[]
  00048	a3 54 74 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29780, eax
  0004d	83 c4 18	 add	 esp, 24			; 00000018H
; Line 72
  00050	c6 00 00	 mov	 BYTE PTR [eax], 0
; Line 73
  00053	c6 05 68 74 00
	00 01		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29800, 1
; Line 74
  0005a	c7 05 ac 73 00
	00 01 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29612, 1
; Line 75
  00064	c3		 ret	 0
?BTConstructor@@YAXXZ ENDP				; BTConstructor
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??0Vector3@KMaths@@QAE@XZ
_TEXT	SEGMENT
??0Vector3@KMaths@@QAE@XZ PROC				; KMaths::Vector3::Vector3, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\SDK\DirectX\K3D_Vector3D.h
; Line 42
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0Vector3@KMaths@@QAE@XZ ENDP				; KMaths::Vector3::Vector3
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ___use_char_max
_TEXT	SEGMENT
___use_char_max PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\locale.h
; Line 66
  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ___do_unsigned_char_lconv_initialization
; Line 67
  00005	c3		 ret	 0
___use_char_max ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b 75 10	 mov	 esi, DWORD PTR ___n$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 16		 je	 SHORT $LN6@vector
  0000b	53		 push	 ebx
  0000c	8b 5d 14	 mov	 ebx, DWORD PTR ___f$[ebp]
  0000f	57		 push	 edi
  00010	8b 7d 08	 mov	 edi, DWORD PTR ___t$[ebp]
$LL2@vector:
  00013	8b cf		 mov	 ecx, edi
  00015	ff d3		 call	 ebx
  00017	03 7d 0c	 add	 edi, DWORD PTR ___s$[ebp]
  0001a	83 ee 01	 sub	 esi, 1
  0001d	75 f4		 jne	 SHORT $LL2@vector
  0001f	5f		 pop	 edi
  00020	5b		 pop	 ebx
$LN6@vector:
  00021	5e		 pop	 esi
  00022	5d		 pop	 ebp
  00023	c2 10 00	 ret	 16			; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
