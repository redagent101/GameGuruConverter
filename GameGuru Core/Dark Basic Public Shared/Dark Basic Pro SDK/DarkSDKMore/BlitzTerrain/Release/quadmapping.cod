; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33139.0 

	TITLE	D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\Release\quadmapping.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___use_char_max
PUBLIC	?Generate@BT_QuadMap@@QAEXUBT_Quadmap_Generator@@@Z ; BT_QuadMap::Generate
PUBLIC	?CalculateNormals@BT_QuadMap@@QAEXXZ		; BT_QuadMap::CalculateNormals
PUBLIC	?CalculateBounds@BT_QuadMap@@QAEXXZ		; BT_QuadMap::CalculateBounds
PUBLIC	?GenerateMeshData@BT_QuadMap@@QAEXXZ		; BT_QuadMap::GenerateMeshData
PUBLIC	?DeleteMeshData@BT_QuadMap@@QAEXXZ		; BT_QuadMap::DeleteMeshData
PUBLIC	?SetToMesh@BT_QuadMap@@QAEXPAUs_BT_DrawBuffer@@@Z ; BT_QuadMap::SetToMesh
PUBLIC	?UpdateMesh@BT_QuadMap@@QAEXPAUs_BT_DrawBuffer@@_N@Z ; BT_QuadMap::UpdateMesh
PUBLIC	?GeneratePlain@BT_QuadMap@@QAEPAUs_BT_DrawBuffer@@XZ ; BT_QuadMap::GeneratePlain
PUBLIC	?GenerateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z	; BT_QuadMap::GenerateDBPMesh
PUBLIC	?UpdateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z	; BT_QuadMap::UpdateDBPMesh
PUBLIC	?GetPointExcluded@BT_QuadMap@@QAE_NMM@Z		; BT_QuadMap::GetPointExcluded
PUBLIC	?GetPointHeight@BT_QuadMap@@QAEMMM_N@Z		; BT_QuadMap::GetPointHeight
PUBLIC	?SetSideLOD@BT_QuadMap@@QAEXEK@Z		; BT_QuadMap::SetSideLOD
PUBLIC	?FillMeshData@BT_QuadMap@@QAEXPAUBT_RTTMS_STRUCT@@@Z ; BT_QuadMap::FillMeshData
PUBLIC	?DeleteInternalData@BT_QuadMap@@QAEXXZ		; BT_QuadMap::DeleteInternalData
PUBLIC	?ReduceQuad@BT_QuadMap@@QAEXGGGGPAUBT_Quadmap_Quad@@_N@Z ; BT_QuadMap::ReduceQuad
PUBLIC	?ChangeMeshData@BT_QuadMap@@QAEXGGPAM@Z		; BT_QuadMap::ChangeMeshData
PUBLIC	?FindVertex@BT_QuadMap@@QAEGGG@Z		; BT_QuadMap::FindVertex
PUBLIC	?BT_Intern_StartQuadMapGeneration@@YAXUBT_Quadmap_Generator@@@Z ; BT_Intern_StartQuadMapGeneration
PUBLIC	?BT_Intern_EndQuadMapGeneration@@YAXXZ		; BT_Intern_EndQuadMapGeneration
PUBLIC	__real@00000000
PUBLIC	__real@3c000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3f80204081020408
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@405fc00000000000
PUBLIC	__real@461c4000
PUBLIC	__real@46800000
PUBLIC	__real@4b000000
PUBLIC	__real@80000000
PUBLIC	__real@c3000000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
EXTRN	_calloc:PROC
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	?BT_Intern_Error@@YAXH@Z:PROC			; BT_Intern_Error
EXTRN	?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z:PROC ; BT_Intern_GetPointHeight
EXTRN	?BT_Intern_RefreshVB@@YAXPAUs_BT_DrawBuffer@@KKPAUBT_Meshdata_Vertex@@@Z:PROC ; BT_Intern_RefreshVB
EXTRN	?BT_Intern_RefreshIB@@YAXPAUs_BT_DrawBuffer@@KKPAG@Z:PROC ; BT_Intern_RefreshIB
EXTRN	?BT_Intern_SetupMesh@@YAXPAUsMesh@@KKK@Z:PROC	; BT_Intern_SetupMesh
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__ftol3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___do_unsigned_char_lconv_initialization:DWORD
EXTRN	?BT_Main@@3Us_BT_main@@A:BYTE			; BT_Main
EXTRN	?m_pD3D@@3PAUID3D11Device@@A:DWORD		; m_pD3D
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __real@c3000000
CONST	SEGMENT
__real@c3000000 DD 0c3000000r			; -128
CONST	ENDS
;	COMDAT __real@80000000
CONST	SEGMENT
__real@80000000 DD 080000000r			; -0
CONST	ENDS
;	COMDAT __real@4b000000
CONST	SEGMENT
__real@4b000000 DD 04b000000r			; 8.38861e+06
CONST	ENDS
;	COMDAT __real@46800000
CONST	SEGMENT
__real@46800000 DD 046800000r			; 16384
CONST	ENDS
;	COMDAT __real@461c4000
CONST	SEGMENT
__real@461c4000 DD 0461c4000r			; 10000
CONST	ENDS
;	COMDAT __real@405fc00000000000
CONST	SEGMENT
__real@405fc00000000000 DQ 0405fc00000000000r	; 127
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f80204081020408
CONST	SEGMENT
__real@3f80204081020408 DQ 03f80204081020408r	; 0.00787402
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3c000000
CONST	SEGMENT
__real@3c000000 DD 03c000000r			; 0.0078125
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_EndQuadMapGeneration@@YAXXZ
_TEXT	SEGMENT
?BT_Intern_EndQuadMapGeneration@@YAXXZ PROC		; BT_Intern_EndQuadMapGeneration, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 38
  00000	80 3d 3c 74 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29756, 0
  00007	74 3f		 je	 SHORT $LN2@BT_Intern_
; Line 39
  00009	ff 35 40 74 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29760
  0000f	e8 00 00 00 00	 call	 _free
; Line 40
  00014	ff 35 44 74 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29764
  0001a	e8 00 00 00 00	 call	 _free
; Line 41
  0001f	ff 35 48 74 00
	00		 push	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29768
  00025	e8 00 00 00 00	 call	 _free
  0002a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 42
  0002d	c7 05 4c 74 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29772, 0
; Line 43
  00037	c7 05 50 74 00
	00 00 00 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29776, 0
; Line 44
  00041	c6 05 3c 74 00
	00 00		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29756, 0
$LN2@BT_Intern_:
; Line 46
  00048	c3		 ret	 0
?BT_Intern_EndQuadMapGeneration@@YAXXZ ENDP		; BT_Intern_EndQuadMapGeneration
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?BT_Intern_StartQuadMapGeneration@@YAXUBT_Quadmap_Generator@@@Z
_TEXT	SEGMENT
_Generator$ = 8						; size = 36
?BT_Intern_StartQuadMapGeneration@@YAXUBT_Quadmap_Generator@@@Z PROC ; BT_Intern_StartQuadMapGeneration, COMDAT
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 10
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 11
  00003	80 3d 3c 74 00
	00 00		 cmp	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29756, 0
  0000a	0f 85 39 01 00
	00		 jne	 $LN3@BT_Intern_
; Line 13
  00010	53		 push	 ebx
  00011	57		 push	 edi
  00012	0f b6 7d 10	 movzx	 edi, BYTE PTR _Generator$[ebp+8]
  00016	c6 05 3c 74 00
	00 01		 mov	 BYTE PTR ?BT_Main@@3Us_BT_main@@A+29756, 1
  0001d	8d 5f 01	 lea	 ebx, DWORD PTR [edi+1]
  00020	8b cb		 mov	 ecx, ebx
  00022	0f af cb	 imul	 ecx, ebx
  00025	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
; Line 15
  00028	83 c1 02	 add	 ecx, 2
  0002b	a3 4c 74 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29772, eax
  00030	8b c7		 mov	 eax, edi
  00032	0f af c7	 imul	 eax, edi
  00035	a3 50 74 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29776, eax
  0003a	8d 04 89	 lea	 eax, DWORD PTR [ecx+ecx*4]
  0003d	c1 e0 02	 shl	 eax, 2
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 _malloc
  00046	8b c8		 mov	 ecx, eax
  00048	83 c4 04	 add	 esp, 4
  0004b	89 0d 40 74 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29760, ecx
  00051	85 c9		 test	 ecx, ecx
; Line 16
  00053	75 10		 jne	 SHORT $LN6@BT_Intern_
; Line 17
  00055	6a 1b		 push	 27			; 0000001bH
  00057	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0005c	8b 0d 40 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29760
  00062	83 c4 04	 add	 esp, 4
$LN6@BT_Intern_:
; Line 18
  00065	a1 4c 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29772
  0006a	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0006d	83 c0 05	 add	 eax, 5
  00070	c1 e0 02	 shl	 eax, 2
  00073	50		 push	 eax
  00074	6a 00		 push	 0
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 _memset
; Line 19
  0007c	a1 50 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29776
  00081	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  00088	2b c8		 sub	 ecx, eax
  0008a	c1 e1 02	 shl	 ecx, 2
  0008d	51		 push	 ecx
  0008e	e8 00 00 00 00	 call	 _malloc
  00093	8b d0		 mov	 edx, eax
  00095	83 c4 10	 add	 esp, 16			; 00000010H
  00098	89 15 44 74 00
	00		 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29764, edx
  0009e	85 d2		 test	 edx, edx
; Line 20
  000a0	75 10		 jne	 SHORT $LN7@BT_Intern_
; Line 21
  000a2	6a 1b		 push	 27			; 0000001bH
  000a4	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  000a9	8b 15 44 74 00
	00		 mov	 edx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29764
  000af	83 c4 04	 add	 esp, 4
$LN7@BT_Intern_:
; Line 22
  000b2	a1 50 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29776
  000b7	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  000be	2b c8		 sub	 ecx, eax
  000c0	c1 e1 02	 shl	 ecx, 2
  000c3	51		 push	 ecx
  000c4	6a 00		 push	 0
  000c6	52		 push	 edx
  000c7	e8 00 00 00 00	 call	 _memset
; Line 23
  000cc	8d 3c bd 04 00
	00 00		 lea	 edi, DWORD PTR [edi*4+4]
  000d3	57		 push	 edi
  000d4	e8 00 00 00 00	 call	 _malloc
  000d9	83 c4 10	 add	 esp, 16			; 00000010H
  000dc	a3 48 74 00 00	 mov	 DWORD PTR ?BT_Main@@3Us_BT_main@@A+29768, eax
  000e1	85 c0		 test	 eax, eax
; Line 24
  000e3	75 0f		 jne	 SHORT $LN8@BT_Intern_
; Line 25
  000e5	6a 1b		 push	 27			; 0000001bH
  000e7	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  000ec	a1 48 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29768
  000f1	83 c4 04	 add	 esp, 4
$LN8@BT_Intern_:
; Line 26
  000f4	56		 push	 esi
  000f5	57		 push	 edi
  000f6	6a 00		 push	 0
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 _memset
  000fe	83 c4 0c	 add	 esp, 12			; 0000000cH
  00101	33 f6		 xor	 esi, esi
; Line 27
  00103	85 db		 test	 ebx, ebx
  00105	74 3f		 je	 SHORT $LN23@BT_Intern_
$LL4@BT_Intern_:
; Line 28
  00107	57		 push	 edi
  00108	e8 00 00 00 00	 call	 _malloc
  0010d	8b 0d 48 74 00
	00		 mov	 ecx, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29768
  00113	83 c4 04	 add	 esp, 4
  00116	89 04 b1	 mov	 DWORD PTR [ecx+esi*4], eax
; Line 29
  00119	a1 48 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29768
  0011e	83 3c b0 00	 cmp	 DWORD PTR [eax+esi*4], 0
  00122	75 0f		 jne	 SHORT $LN9@BT_Intern_
; Line 30
  00124	6a 1b		 push	 27			; 0000001bH
  00126	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0012b	a1 48 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29768
  00130	83 c4 04	 add	 esp, 4
$LN9@BT_Intern_:
; Line 31
  00133	57		 push	 edi
  00134	6a 00		 push	 0
  00136	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  00139	e8 00 00 00 00	 call	 _memset
  0013e	46		 inc	 esi
  0013f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00142	3b f3		 cmp	 esi, ebx
  00144	72 c1		 jb	 SHORT $LL4@BT_Intern_
$LN23@BT_Intern_:
  00146	5e		 pop	 esi
  00147	5f		 pop	 edi
  00148	5b		 pop	 ebx
$LN3@BT_Intern_:
; Line 34
  00149	5d		 pop	 ebp
  0014a	c3		 ret	 0
?BT_Intern_StartQuadMapGeneration@@YAXUBT_Quadmap_Generator@@@Z ENDP ; BT_Intern_StartQuadMapGeneration
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?FindVertex@BT_QuadMap@@QAEGGG@Z
_TEXT	SEGMENT
_Vcol$ = 8						; size = 2
tv498 = 12						; size = 4
_Vrow$ = 12						; size = 2
?FindVertex@BT_QuadMap@@QAEGGG@Z PROC			; BT_QuadMap::FindVertex, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 1088
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	57		 push	 edi
; Line 1090
  00007	80 7e 10 01	 cmp	 BYTE PTR [esi+16], 1
  0000b	75 7c		 jne	 SHORT $LN9@FindVertex
; Line 1093
  0000d	0f b6 56 45	 movzx	 edx, BYTE PTR [esi+69]
  00011	66 8b 7d 08	 mov	 di, WORD PTR _Vcol$[ebp]
  00015	8b ca		 mov	 ecx, edx
  00017	53		 push	 ebx
  00018	66 8b 5d 0c	 mov	 bx, WORD PTR _Vrow$[ebp]
  0001c	89 4d 0c	 mov	 DWORD PTR tv498[ebp], ecx
  0001f	66 3b da	 cmp	 bx, dx
  00022	0f b6 4e 45	 movzx	 ecx, BYTE PTR [esi+69]
  00026	8b 76 1c	 mov	 esi, DWORD PTR [esi+28]
  00029	0f b7 c3	 movzx	 eax, bx
  0002c	0f b7 d7	 movzx	 edx, di
  0002f	75 1e		 jne	 SHORT $LN3@FindVertex
; Line 1094
  00031	48		 dec	 eax
  00032	0f af c1	 imul	 eax, ecx
  00035	03 c2		 add	 eax, edx
  00037	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]
  0003a	66 3b 7d 0c	 cmp	 di, WORD PTR tv498[ebp]
  0003e	75 08		 jne	 SHORT $LN5@FindVertex
; Line 1095
  00040	8b 40 fc	 mov	 eax, DWORD PTR [eax-4]
  00043	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
; Line 1096
  00046	eb 22		 jmp	 SHORT $LN8@FindVertex
$LN5@FindVertex:
; Line 1097
  00048	8b 00		 mov	 eax, DWORD PTR [eax]
  0004a	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
; Line 1099
  0004d	eb 1b		 jmp	 SHORT $LN8@FindVertex
$LN3@FindVertex:
; Line 1100
  0004f	0f af c8	 imul	 ecx, eax
  00052	03 ca		 add	 ecx, edx
  00054	8d 04 8e	 lea	 eax, DWORD PTR [esi+ecx*4]
  00057	66 3b 7d 0c	 cmp	 di, WORD PTR tv498[ebp]
  0005b	75 08		 jne	 SHORT $LN7@FindVertex
; Line 1101
  0005d	8b 40 fc	 mov	 eax, DWORD PTR [eax-4]
  00060	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; Line 1102
  00063	eb 05		 jmp	 SHORT $LN8@FindVertex
$LN7@FindVertex:
; Line 1103
  00065	8b 00		 mov	 eax, DWORD PTR [eax]
  00067	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
$LN8@FindVertex:
; Line 1108
  0006a	0f b6 41 08	 movzx	 eax, BYTE PTR [ecx+8]
  0006e	66 3b c3	 cmp	 ax, bx
  00071	5b		 pop	 ebx
  00072	75 15		 jne	 SHORT $LN9@FindVertex
  00074	0f b6 41 09	 movzx	 eax, BYTE PTR [ecx+9]
  00078	66 3b c7	 cmp	 ax, di
  0007b	75 0c		 jne	 SHORT $LN9@FindVertex
; Line 1110
  0007d	66 8b 41 0e	 mov	 ax, WORD PTR [ecx+14]
  00081	5f		 pop	 edi
  00082	66 40		 inc	 ax
; Line 1116
  00084	5e		 pop	 esi
  00085	5d		 pop	 ebp
  00086	c2 08 00	 ret	 8
$LN9@FindVertex:
  00089	5f		 pop	 edi
; Line 1115
  0008a	33 c0		 xor	 eax, eax
; Line 1116
  0008c	5e		 pop	 esi
  0008d	5d		 pop	 ebp
  0008e	c2 08 00	 ret	 8
?FindVertex@BT_QuadMap@@QAEGGG@Z ENDP			; BT_QuadMap::FindVertex
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ChangeMeshData@BT_QuadMap@@QAEXGGPAM@Z
_TEXT	SEGMENT
_this$1$ = -4						; size = 4
tv351 = 8						; size = 4
_VertexStart$ = 8					; size = 2
_VertexEnd$ = 12					; size = 2
_Vertices$ = 16						; size = 4
?ChangeMeshData@BT_QuadMap@@QAEXGGPAM@Z PROC		; BT_QuadMap::ChangeMeshData, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 990
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	89 75 fc	 mov	 DWORD PTR _this$1$[ebp], esi
; Line 992
  0000a	80 7e 10 01	 cmp	 BYTE PTR [esi+16], 1
  0000e	0f 85 b6 00 00
	00		 jne	 $LN5@ChangeMesh
; Line 997
  00014	66 8b 55 08	 mov	 dx, WORD PTR _VertexStart$[ebp]
  00018	0f b7 4d 0c	 movzx	 ecx, WORD PTR _VertexEnd$[ebp]
  0001c	53		 push	 ebx
  0001d	41		 inc	 ecx
  0001e	0f b7 c2	 movzx	 eax, dx
  00021	c6 46 33 01	 mov	 BYTE PTR [esi+51], 1
  00025	8d 5e 14	 lea	 ebx, DWORD PTR [esi+20]
  00028	89 4d 08	 mov	 DWORD PTR tv351[ebp], ecx
  0002b	57		 push	 edi
  0002c	0f b7 fa	 movzx	 edi, dx
  0002f	3b c1		 cmp	 eax, ecx
  00031	73 1b		 jae	 SHORT $LN22@ChangeMesh
$LL28@ChangeMesh:
; Line 998
  00033	8b 75 10	 mov	 esi, DWORD PTR _Vertices$[ebp]
  00036	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  00039	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003b	47		 inc	 edi
  0003c	8b 04 86	 mov	 eax, DWORD PTR [esi+eax*4]
  0003f	89 44 91 04	 mov	 DWORD PTR [ecx+edx*4+4], eax
  00043	0f b7 c7	 movzx	 eax, di
  00046	3b 45 08	 cmp	 eax, DWORD PTR tv351[ebp]
  00049	72 e8		 jb	 SHORT $LL28@ChangeMesh
  0004b	8b 75 fc	 mov	 esi, DWORD PTR _this$1$[ebp]
$LN22@ChangeMesh:
; Line 1002
  0004e	8b ce		 mov	 ecx, esi
  00050	c6 46 30 01	 mov	 BYTE PTR [esi+48], 1
  00054	e8 00 00 00 00	 call	 ?GenerateMeshData@BT_QuadMap@@QAEXXZ ; BT_QuadMap::GenerateMeshData
; Line 477
  00059	8b 13		 mov	 edx, DWORD PTR [ebx]
; Line 480
  0005b	b9 01 00 00 00	 mov	 ecx, 1
  00060	0f b7 7e 36	 movzx	 edi, WORD PTR [esi+54]
  00064	8b c1		 mov	 eax, ecx
  00066	f3 0f 10 4a 04	 movss	 xmm1, DWORD PTR [edx+4]
  0006b	f3 0f 11 4e 4c	 movss	 DWORD PTR [esi+76], xmm1
  00070	f3 0f 11 4e 48	 movss	 DWORD PTR [esi+72], xmm1
  00075	66 3b c7	 cmp	 ax, di
  00078	77 4a		 ja	 SHORT $LN9@ChangeMesh
; Line 482
  0007a	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@461c4000
  00082	0f 28 d1	 movaps	 xmm2, xmm1
  00085	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL29@ChangeMesh:
  00090	0f b7 c1	 movzx	 eax, cx
  00093	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00096	f3 0f 10 44 82
	04		 movss	 xmm0, DWORD PTR [edx+eax*4+4]
  0009c	0f 2f c1	 comiss	 xmm0, xmm1
  0009f	76 0a		 jbe	 SHORT $LN11@ChangeMesh
; Line 483
  000a1	c7 46 48 00 40
	1c 46		 mov	 DWORD PTR [esi+72], 1176256512 ; 461c4000H
  000a8	0f 28 cb	 movaps	 xmm1, xmm3
$LN11@ChangeMesh:
; Line 487
  000ab	f3 0f 10 44 82
	04		 movss	 xmm0, DWORD PTR [edx+eax*4+4]
  000b1	0f 2f d0	 comiss	 xmm2, xmm0
  000b4	76 08		 jbe	 SHORT $LN8@ChangeMesh
; Line 488
  000b6	0f 28 d0	 movaps	 xmm2, xmm0
  000b9	f3 0f 11 56 4c	 movss	 DWORD PTR [esi+76], xmm2
$LN8@ChangeMesh:
; Line 480
  000be	41		 inc	 ecx
  000bf	66 3b cf	 cmp	 cx, di
  000c2	76 cc		 jbe	 SHORT $LL29@ChangeMesh
$LN9@ChangeMesh:
; Line 1008
  000c4	5f		 pop	 edi
  000c5	c6 46 32 01	 mov	 BYTE PTR [esi+50], 1
  000c9	5b		 pop	 ebx
$LN5@ChangeMesh:
  000ca	5e		 pop	 esi
; Line 1010
  000cb	8b e5		 mov	 esp, ebp
  000cd	5d		 pop	 ebp
  000ce	c2 0c 00	 ret	 12			; 0000000cH
?ChangeMeshData@BT_QuadMap@@QAEXGGPAM@Z ENDP		; BT_QuadMap::ChangeMeshData
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ReduceQuad@BT_QuadMap@@QAEXGGGGPAUBT_Quadmap_Quad@@_N@Z
_TEXT	SEGMENT
_QuadTL$ = 8						; size = 2
_QuadTR$ = 12						; size = 2
_QuadBL$ = 16						; size = 2
_QuadBR$ = 20						; size = 2
_Quads$ = 24						; size = 4
_CheckHeights$ = 28					; size = 1
?ReduceQuad@BT_QuadMap@@QAEXGGGGPAUBT_Quadmap_Quad@@_N@Z PROC ; BT_QuadMap::ReduceQuad, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 1031
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1033
  00003	0f b7 45 08	 movzx	 eax, WORD PTR _QuadTL$[ebp]
  00007	8b 4d 18	 mov	 ecx, DWORD PTR _Quads$[ebp]
  0000a	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  00011	2b d0		 sub	 edx, eax
  00013	80 3c 91 01	 cmp	 BYTE PTR [ecx+edx*4], 1
  00017	0f 84 41 01 00
	00		 je	 $LN5@ReduceQuad
  0001d	0f b7 45 0c	 movzx	 eax, WORD PTR _QuadTR$[ebp]
  00021	56		 push	 esi
  00022	8d 34 c5 00 00
	00 00		 lea	 esi, DWORD PTR [eax*8]
  00029	2b f0		 sub	 esi, eax
  0002b	80 3c b1 01	 cmp	 BYTE PTR [ecx+esi*4], 1
  0002f	0f 84 28 01 00
	00		 je	 $LN32@ReduceQuad
  00035	0f b7 45 10	 movzx	 eax, WORD PTR _QuadBL$[ebp]
  00039	57		 push	 edi
  0003a	8d 3c c5 00 00
	00 00		 lea	 edi, DWORD PTR [eax*8]
  00041	2b f8		 sub	 edi, eax
  00043	80 3c b9 01	 cmp	 BYTE PTR [ecx+edi*4], 1
  00047	0f 84 0f 01 00
	00		 je	 $LN33@ReduceQuad
  0004d	0f b7 45 14	 movzx	 eax, WORD PTR _QuadBR$[ebp]
  00051	53		 push	 ebx
  00052	8d 1c c5 00 00
	00 00		 lea	 ebx, DWORD PTR [eax*8]
  00059	2b d8		 sub	 ebx, eax
  0005b	80 3c 99 01	 cmp	 BYTE PTR [ecx+ebx*4], 1
  0005f	0f 84 f6 00 00
	00		 je	 $LN34@ReduceQuad
; Line 1037
  00065	f3 0f 10 4c 91
	14		 movss	 xmm1, DWORD PTR [ecx+edx*4+20]
  0006b	0f 2e 4c b1 14	 ucomiss xmm1, DWORD PTR [ecx+esi*4+20]
  00070	9f		 lahf
  00071	f6 c4 44	 test	 ah, 68			; 00000044H
  00074	0f 8a e1 00 00
	00		 jp	 $LN34@ReduceQuad
  0007a	f3 0f 10 44 b9
	14		 movss	 xmm0, DWORD PTR [ecx+edi*4+20]
  00080	0f 2e 44 99 14	 ucomiss xmm0, DWORD PTR [ecx+ebx*4+20]
  00085	9f		 lahf
  00086	f6 c4 44	 test	 ah, 68			; 00000044H
  00089	0f 8a cc 00 00
	00		 jp	 $LN34@ReduceQuad
  0008f	0f 2e c8	 ucomiss xmm1, xmm0
  00092	9f		 lahf
  00093	f6 c4 44	 test	 ah, 68			; 00000044H
  00096	0f 8a bf 00 00
	00		 jp	 $LN34@ReduceQuad
; Line 1042
  0009c	80 7d 1c 00	 cmp	 BYTE PTR _CheckHeights$[ebp], 0
  000a0	0f 84 81 00 00
	00		 je	 $LN16@ReduceQuad
; Line 1045
  000a6	8b 44 91 04	 mov	 eax, DWORD PTR [ecx+edx*4+4]
  000aa	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
; Line 1056
  000af	8b 44 91 08	 mov	 eax, DWORD PTR [ecx+edx*4+8]
  000b3	0f 2e 40 04	 ucomiss xmm0, DWORD PTR [eax+4]
  000b7	9f		 lahf
  000b8	f6 c4 44	 test	 ah, 68			; 00000044H
  000bb	0f 8a 9a 00 00
	00		 jp	 $LN34@ReduceQuad
; Line 1058
  000c1	8b 44 b1 08	 mov	 eax, DWORD PTR [ecx+esi*4+8]
  000c5	0f 2e 40 04	 ucomiss xmm0, DWORD PTR [eax+4]
  000c9	9f		 lahf
  000ca	f6 c4 44	 test	 ah, 68			; 00000044H
  000cd	0f 8a 88 00 00
	00		 jp	 $LN34@ReduceQuad
; Line 1060
  000d3	8b 44 91 0c	 mov	 eax, DWORD PTR [ecx+edx*4+12]
  000d7	0f 2e 40 04	 ucomiss xmm0, DWORD PTR [eax+4]
  000db	9f		 lahf
  000dc	f6 c4 44	 test	 ah, 68			; 00000044H
  000df	7a 7a		 jp	 SHORT $LN34@ReduceQuad
; Line 1062
  000e1	8b 44 91 10	 mov	 eax, DWORD PTR [ecx+edx*4+16]
  000e5	0f 2e 40 04	 ucomiss xmm0, DWORD PTR [eax+4]
  000e9	9f		 lahf
  000ea	f6 c4 44	 test	 ah, 68			; 00000044H
  000ed	7a 6c		 jp	 SHORT $LN34@ReduceQuad
; Line 1064
  000ef	8b 44 b1 0c	 mov	 eax, DWORD PTR [ecx+esi*4+12]
  000f3	0f 2e 40 04	 ucomiss xmm0, DWORD PTR [eax+4]
  000f7	9f		 lahf
  000f8	f6 c4 44	 test	 ah, 68			; 00000044H
  000fb	7a 5e		 jp	 SHORT $LN34@ReduceQuad
; Line 1066
  000fd	8b 44 b9 0c	 mov	 eax, DWORD PTR [ecx+edi*4+12]
  00101	0f 2e 40 04	 ucomiss xmm0, DWORD PTR [eax+4]
  00105	9f		 lahf
  00106	f6 c4 44	 test	 ah, 68			; 00000044H
  00109	7a 50		 jp	 SHORT $LN34@ReduceQuad
; Line 1068
  0010b	8b 44 b9 10	 mov	 eax, DWORD PTR [ecx+edi*4+16]
  0010f	0f 2e 40 04	 ucomiss xmm0, DWORD PTR [eax+4]
  00113	9f		 lahf
  00114	f6 c4 44	 test	 ah, 68			; 00000044H
  00117	7a 42		 jp	 SHORT $LN34@ReduceQuad
; Line 1070
  00119	8b 44 99 10	 mov	 eax, DWORD PTR [ecx+ebx*4+16]
  0011d	0f 2e 40 04	 ucomiss xmm0, DWORD PTR [eax+4]
  00121	9f		 lahf
  00122	f6 c4 44	 test	 ah, 68			; 00000044H
  00125	7a 34		 jp	 SHORT $LN34@ReduceQuad
$LN16@ReduceQuad:
; Line 1076
  00127	c6 04 b1 01	 mov	 BYTE PTR [ecx+esi*4], 1
; Line 1077
  0012b	c6 04 b9 01	 mov	 BYTE PTR [ecx+edi*4], 1
; Line 1078
  0012f	c6 04 99 01	 mov	 BYTE PTR [ecx+ebx*4], 1
; Line 1081
  00133	8b 44 b1 08	 mov	 eax, DWORD PTR [ecx+esi*4+8]
; Line 1084
  00137	f3 0f 10 44 91
	14		 movss	 xmm0, DWORD PTR [ecx+edx*4+20]
  0013d	f3 0f 58 c0	 addss	 xmm0, xmm0
  00141	89 44 91 08	 mov	 DWORD PTR [ecx+edx*4+8], eax
  00145	8b 44 b9 0c	 mov	 eax, DWORD PTR [ecx+edi*4+12]
  00149	89 44 91 0c	 mov	 DWORD PTR [ecx+edx*4+12], eax
  0014d	8b 44 99 10	 mov	 eax, DWORD PTR [ecx+ebx*4+16]
  00151	89 44 91 10	 mov	 DWORD PTR [ecx+edx*4+16], eax
  00155	f3 0f 11 44 91
	14		 movss	 DWORD PTR [ecx+edx*4+20], xmm0
$LN34@ReduceQuad:
  0015b	5b		 pop	 ebx
$LN33@ReduceQuad:
  0015c	5f		 pop	 edi
$LN32@ReduceQuad:
  0015d	5e		 pop	 esi
$LN5@ReduceQuad:
; Line 1085
  0015e	5d		 pop	 ebp
  0015f	c2 18 00	 ret	 24			; 00000018H
?ReduceQuad@BT_QuadMap@@QAEXGGGGPAUBT_Quadmap_Quad@@_N@Z ENDP ; BT_QuadMap::ReduceQuad
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?DeleteInternalData@BT_QuadMap@@QAEXXZ
_TEXT	SEGMENT
?DeleteInternalData@BT_QuadMap@@QAEXXZ PROC		; BT_QuadMap::DeleteInternalData, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 1013
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; Line 1015
  00003	80 7e 10 01	 cmp	 BYTE PTR [esi+16], 1
  00007	75 50		 jne	 SHORT $LN7@DeleteInte
; Line 1017
  00009	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0000c	85 c0		 test	 eax, eax
  0000e	74 09		 je	 SHORT $LN3@DeleteInte
; Line 1018
  00010	50		 push	 eax
  00011	e8 00 00 00 00	 call	 _free
  00016	83 c4 04	 add	 esp, 4
$LN3@DeleteInte:
; Line 1019
  00019	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0001c	85 c0		 test	 eax, eax
  0001e	74 09		 je	 SHORT $LN4@DeleteInte
; Line 1020
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 _free
  00026	83 c4 04	 add	 esp, 4
$LN4@DeleteInte:
; Line 1021
  00029	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0002c	85 c0		 test	 eax, eax
  0002e	74 09		 je	 SHORT $LN5@DeleteInte
; Line 1022
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 _free
  00036	83 c4 04	 add	 esp, 4
$LN5@DeleteInte:
; Line 1023
  00039	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0003c	85 c0		 test	 eax, eax
  0003e	74 09		 je	 SHORT $LN6@DeleteInte
; Line 1024
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 _free
  00046	83 c4 04	 add	 esp, 4
$LN6@DeleteInte:
; Line 1025
  00049	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0004c	85 c0		 test	 eax, eax
  0004e	74 09		 je	 SHORT $LN7@DeleteInte
; Line 1026
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 _free
  00056	83 c4 04	 add	 esp, 4
$LN7@DeleteInte:
; Line 1028
  00059	5e		 pop	 esi
  0005a	c3		 ret	 0
?DeleteInternalData@BT_QuadMap@@QAEXXZ ENDP		; BT_QuadMap::DeleteInternalData
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?FillMeshData@BT_QuadMap@@QAEXPAUBT_RTTMS_STRUCT@@@Z
_TEXT	SEGMENT
_Vertexn$1$ = 8						; size = 4
_Meshdata$ = 8						; size = 4
?FillMeshData@BT_QuadMap@@QAEXPAUBT_RTTMS_STRUCT@@@Z PROC ; BT_QuadMap::FillMeshData, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 969
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	8b d9		 mov	 ebx, ecx
; Line 971
  00006	80 7b 10 01	 cmp	 BYTE PTR [ebx+16], 1
  0000a	75 7f		 jne	 SHORT $LN5@FillMeshDa
; Line 972
  0000c	57		 push	 edi
  0000d	8b 7d 08	 mov	 edi, DWORD PTR _Meshdata$[ebp]
  00010	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00013	c6 40 10 00	 mov	 BYTE PTR [eax+16], 0
; Line 973
  00017	33 c0		 xor	 eax, eax
  00019	66 89 07	 mov	 WORD PTR [edi], ax
; Line 974
  0001c	89 47 04	 mov	 DWORD PTR [edi+4], eax
; Line 975
  0001f	38 43 20	 cmp	 BYTE PTR [ebx+32], al
  00022	75 0c		 jne	 SHORT $LN6@FillMeshDa
; Line 976
  00024	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00027	c6 40 10 01	 mov	 BYTE PTR [eax+16], 1
; Line 977
  0002b	e8 00 00 00 00	 call	 ?GenerateMeshData@BT_QuadMap@@QAEXXZ ; BT_QuadMap::GenerateMeshData
$LN6@FillMeshDa:
; Line 979
  00030	66 8b 43 22	 mov	 ax, WORD PTR [ebx+34]
  00034	66 89 07	 mov	 WORD PTR [edi], ax
; Line 980
  00037	0f b7 43 22	 movzx	 eax, WORD PTR [ebx+34]
  0003b	c1 e0 02	 shl	 eax, 2
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 _malloc
  00044	89 47 04	 mov	 DWORD PTR [edi+4], eax
; Line 981
  00047	33 c9		 xor	 ecx, ecx
  00049	33 c0		 xor	 eax, eax
  0004b	83 c4 04	 add	 esp, 4
  0004e	89 45 08	 mov	 DWORD PTR _Vertexn$1$[ebp], eax
  00051	66 3b 4b 22	 cmp	 cx, WORD PTR [ebx+34]
  00055	73 2a		 jae	 SHORT $LN3@FillMeshDa
  00057	56		 push	 esi
  00058	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@FillMeshDa:
; Line 982
  00060	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00063	0f b7 f0	 movzx	 esi, ax
  00066	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00069	8d 14 b6	 lea	 edx, DWORD PTR [esi+esi*4]
  0006c	8b 44 90 04	 mov	 eax, DWORD PTR [eax+edx*4+4]
  00070	89 04 b1	 mov	 DWORD PTR [ecx+esi*4], eax
  00073	8b 45 08	 mov	 eax, DWORD PTR _Vertexn$1$[ebp]
  00076	40		 inc	 eax
  00077	89 45 08	 mov	 DWORD PTR _Vertexn$1$[ebp], eax
  0007a	66 3b 43 22	 cmp	 ax, WORD PTR [ebx+34]
  0007e	72 e0		 jb	 SHORT $LL4@FillMeshDa
; Line 981
  00080	5e		 pop	 esi
$LN3@FillMeshDa:
; Line 984
  00081	33 c0		 xor	 eax, eax
  00083	c6 47 08 00	 mov	 BYTE PTR [edi+8], 0
  00087	89 47 0a	 mov	 DWORD PTR [edi+10], eax
; Line 985
  0008a	5f		 pop	 edi
$LN5@FillMeshDa:
  0008b	5b		 pop	 ebx
; Line 987
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
?FillMeshData@BT_QuadMap@@QAEXPAUBT_RTTMS_STRUCT@@@Z ENDP ; BT_QuadMap::FillMeshData
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetSideLOD@BT_QuadMap@@QAEXEK@Z
_TEXT	SEGMENT
tv366 = -20						; size = 4
tv359 = -16						; size = 4
tv364 = -12						; size = 4
_Vertexn$1$ = -8					; size = 4
$T1 = -1						; size = 1
_Side$ = 8						; size = 1
_LODLevel$ = 12						; size = 4
_Point$1$ = 15						; size = 1
?SetSideLOD@BT_QuadMap@@QAEXEK@Z PROC			; BT_QuadMap::SetSideLOD, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 931
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
; Line 933
  00009	80 7f 10 01	 cmp	 BYTE PTR [edi+16], 1
  0000d	0f 85 fc 00 00
	00		 jne	 $LN5@SetSideLOD
; Line 938
  00013	8b 4d 0c	 mov	 ecx, DWORD PTR _LODLevel$[ebp]
  00016	b6 01		 mov	 dh, 1
  00018	8a 57 45	 mov	 dl, BYTE PTR [edi+69]
  0001b	0f 57 db	 xorps	 xmm3, xmm3
  0001e	0f b6 45 08	 movzx	 eax, BYTE PTR _Side$[ebp]
  00022	0f 57 d2	 xorps	 xmm2, xmm2
  00025	d2 e6		 shl	 dh, cl
  00027	0f b6 ca	 movzx	 ecx, dl
  0002a	0f af c8	 imul	 ecx, eax
  0002d	53		 push	 ebx
  0002e	56		 push	 esi
; Line 943
  0002f	0f b6 c2	 movzx	 eax, dl
  00032	88 55 ff	 mov	 BYTE PTR $T1[ebp], dl
  00035	0f b7 f1	 movzx	 esi, cx
  00038	33 c9		 xor	 ecx, ecx
  0003a	80 7d 08 03	 cmp	 BYTE PTR _Side$[ebp], 3
  0003e	89 75 f8	 mov	 DWORD PTR _Vertexn$1$[ebp], esi
  00041	0f 95 c1	 setne	 cl
  00044	c6 45 0f 00	 mov	 BYTE PTR _Point$1$[ebp], 0
  00048	89 4d ec	 mov	 DWORD PTR tv366[ebp], ecx
  0004b	03 c1		 add	 eax, ecx
  0004d	0f 84 b6 00 00
	00		 je	 $LN3@SetSideLOD
  00053	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  0005b	33 db		 xor	 ebx, ebx
  0005d	0f b6 ce	 movzx	 ecx, dh
  00060	89 4d f4	 mov	 DWORD PTR tv364[ebp], ecx
  00063	66 0f 6e c1	 movd	 xmm0, ecx
  00067	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0006a	f3 0f 5e e0	 divss	 xmm4, xmm0
  0006e	66 90		 npad	 2
$LL4@SetSideLOD:
; Line 945
  00070	33 d2		 xor	 edx, edx
  00072	8b c3		 mov	 eax, ebx
  00074	f7 f1		 div	 ecx
  00076	8b c2		 mov	 eax, edx
  00078	89 45 f0	 mov	 DWORD PTR tv359[ebp], eax
  0007b	85 c0		 test	 eax, eax
  0007d	75 3b		 jne	 SHORT $LN8@SetSideLOD
; Line 949
  0007f	80 7d 08 03	 cmp	 BYTE PTR _Side$[ebp], 3
  00083	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00086	8b 55 f4	 mov	 edx, DWORD PTR tv364[ebp]
  00089	0f b7 f6	 movzx	 esi, si
  0008c	8d 04 b6	 lea	 eax, DWORD PTR [esi+esi*4]
  0008f	f3 0f 10 5c 81
	04		 movss	 xmm3, DWORD PTR [ecx+eax*4+4]
  00095	75 11		 jne	 SHORT $LN7@SetSideLOD
  00097	0f b6 45 ff	 movzx	 eax, BYTE PTR $T1[ebp]
  0009b	2b c2		 sub	 eax, edx
  0009d	3b d8		 cmp	 ebx, eax
  0009f	75 07		 jne	 SHORT $LN7@SetSideLOD
; Line 950
  000a1	f3 0f 10 51 04	 movss	 xmm2, DWORD PTR [ecx+4]
; Line 951
  000a6	eb 0c		 jmp	 SHORT $LN20@SetSideLOD
$LN7@SetSideLOD:
; Line 952
  000a8	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
  000ab	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  000ae	f3 0f 10 54 81
	04		 movss	 xmm2, DWORD PTR [ecx+eax*4+4]
$LN20@SetSideLOD:
; Line 957
  000b4	8b 75 f8	 mov	 esi, DWORD PTR _Vertexn$1$[ebp]
  000b7	8b 45 f0	 mov	 eax, DWORD PTR tv359[ebp]
$LN8@SetSideLOD:
; Line 958
  000ba	66 0f 6e c8	 movd	 xmm1, eax
  000be	0f 28 c2	 movaps	 xmm0, xmm2
  000c1	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000c4	0f b7 c6	 movzx	 eax, si
; Line 960
  000c7	46		 inc	 esi
  000c8	89 75 f8	 mov	 DWORD PTR _Vertexn$1$[ebp], esi
  000cb	f3 0f 5c c3	 subss	 xmm0, xmm3
  000cf	f3 0f 59 cc	 mulss	 xmm1, xmm4
  000d3	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  000d6	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  000d9	f3 0f 59 c8	 mulss	 xmm1, xmm0
  000dd	f3 0f 58 cb	 addss	 xmm1, xmm3
  000e1	f3 0f 11 4c c8
	04		 movss	 DWORD PTR [eax+ecx*8+4], xmm1
  000e7	8a 4d 0f	 mov	 cl, BYTE PTR _Point$1$[ebp]
  000ea	8a 47 45	 mov	 al, BYTE PTR [edi+69]
  000ed	fe c1		 inc	 cl
  000ef	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  000f2	0f b6 c0	 movzx	 eax, al
  000f5	03 45 ec	 add	 eax, DWORD PTR tv366[ebp]
  000f8	0f b6 d9	 movzx	 ebx, cl
  000fb	88 4d 0f	 mov	 BYTE PTR _Point$1$[ebp], cl
  000fe	8b 4d f4	 mov	 ecx, DWORD PTR tv364[ebp]
  00101	3b d8		 cmp	 ebx, eax
  00103	0f 82 67 ff ff
	ff		 jb	 $LL4@SetSideLOD
$LN3@SetSideLOD:
; Line 964
  00109	5e		 pop	 esi
  0010a	c6 47 33 01	 mov	 BYTE PTR [edi+51], 1
  0010e	5b		 pop	 ebx
$LN5@SetSideLOD:
  0010f	5f		 pop	 edi
; Line 966
  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c2 08 00	 ret	 8
?SetSideLOD@BT_QuadMap@@QAEXEK@Z ENDP			; BT_QuadMap::SetSideLOD
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetPointHeight@BT_QuadMap@@QAEMMM_N@Z
_TEXT	SEGMENT
_U$1$ = 8						; size = 4
_x$ = 8							; size = 4
_z$ = 12						; size = 4
tv579 = 16						; size = 4
_Round$ = 16						; size = 1
?GetPointHeight@BT_QuadMap@@QAEMMM_N@Z PROC		; BT_QuadMap::GetPointHeight, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 852
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
; Line 867
  00006	80 7e 10 01	 cmp	 BYTE PTR [esi+16], 1
  0000a	0f 85 27 02 00
	00		 jne	 $LN7@GetPointHe
; Line 869
  00010	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00018	0f 57 ff	 xorps	 xmm7, xmm7
  0001b	f3 0f 5e 4e 3c	 divss	 xmm1, DWORD PTR [esi+60]
  00020	57		 push	 edi
; Line 873
  00021	0f b6 7e 45	 movzx	 edi, BYTE PTR [esi+69]
  00025	f3 0f 10 76 3c	 movss	 xmm6, DWORD PTR [esi+60]
  0002a	f3 0f 59 35 00
	00 00 00	 mulss	 xmm6, DWORD PTR __real@3f000000
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  00032	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@80000000
  0003a	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@4b000000
  00042	0f 28 dd	 movaps	 xmm3, xmm5
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 869
  00045	0f 28 c6	 movaps	 xmm0, xmm6
  00048	f3 0f 58 45 08	 addss	 xmm0, DWORD PTR _x$[ebp]
; Line 870
  0004d	f3 0f 58 75 0c	 addss	 xmm6, DWORD PTR _z$[ebp]
; Line 873
  00052	f3 0f 2a ff	 cvtsi2ss xmm7, edi
  00056	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0005a	f3 0f 59 f1	 mulss	 xmm6, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  0005e	0f 28 cc	 movaps	 xmm1, xmm4
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 869
  00061	f3 0f 11 45 08	 movss	 DWORD PTR _U$1$[ebp], xmm0
; Line 873
  00066	f3 0f 59 fe	 mulss	 xmm7, xmm6
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  0006a	0f 54 df	 andps	 xmm3, xmm7
  0006d	0f 28 c7	 movaps	 xmm0, xmm7
  00070	0f 57 c3	 xorps	 xmm0, xmm3
  00073	0f 28 d7	 movaps	 xmm2, xmm7
  00076	f3 0f c2 c4 01	 cmpltss xmm0, xmm4
  0007b	0f 54 c8	 andps	 xmm1, xmm0
  0007e	0f 56 cb	 orps	 xmm1, xmm3
  00081	f3 0f 58 d1	 addss	 xmm2, xmm1
  00085	f3 0f 5c d1	 subss	 xmm2, xmm1
  00089	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00091	0f 28 c2	 movaps	 xmm0, xmm2
  00094	f3 0f 5c c7	 subss	 xmm0, xmm7
  00098	f3 0f c2 c3 06	 cmpnless xmm0, xmm3
  0009d	0f 57 db	 xorps	 xmm3, xmm3
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 874
  000a0	f3 0f 2a df	 cvtsi2ss xmm3, edi
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  000a4	0f 54 c1	 andps	 xmm0, xmm1
  000a7	f3 0f 5c d0	 subss	 xmm2, xmm0
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 873
  000ab	f3 0f 2c c2	 cvttss2si eax, xmm2
; Line 874
  000af	f3 0f 10 55 08	 movss	 xmm2, DWORD PTR _U$1$[ebp]
  000b4	f3 0f 59 da	 mulss	 xmm3, xmm2
  000b8	0f b7 c8	 movzx	 ecx, ax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  000bb	0f 54 eb	 andps	 xmm5, xmm3
  000be	0f 28 c3	 movaps	 xmm0, xmm3
  000c1	0f 57 c5	 xorps	 xmm0, xmm5
  000c4	0f 28 cb	 movaps	 xmm1, xmm3
  000c7	f3 0f c2 c4 01	 cmpltss xmm0, xmm4
  000cc	0f 54 e0	 andps	 xmm4, xmm0
  000cf	0f 56 e5	 orps	 xmm4, xmm5
  000d2	f3 0f 58 cc	 addss	 xmm1, xmm4
  000d6	f3 0f 5c cc	 subss	 xmm1, xmm4
  000da	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 876
  000e2	0f 2e f4	 ucomiss xmm6, xmm4
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  000e5	0f 28 c1	 movaps	 xmm0, xmm1
  000e8	f3 0f 5c c3	 subss	 xmm0, xmm3
  000ec	f3 0f c2 c5 06	 cmpnless xmm0, xmm5
  000f1	0f 54 c4	 andps	 xmm0, xmm4
  000f4	f3 0f 5c c8	 subss	 xmm1, xmm0
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 874
  000f8	f3 0f 2c c1	 cvttss2si eax, xmm1
  000fc	0f b7 d0	 movzx	 edx, ax
; Line 876
  000ff	9f		 lahf
  00100	f6 c4 44	 test	 ah, 68			; 00000044H
  00103	7a 06		 jp	 SHORT $LN3@GetPointHe
; Line 877
  00105	81 c1 ff ff 00
	00		 add	 ecx, 65535		; 0000ffffH
$LN3@GetPointHe:
; Line 878
  0010b	0f 2e d4	 ucomiss xmm2, xmm4
  0010e	9f		 lahf
  0010f	f6 c4 44	 test	 ah, 68			; 00000044H
  00112	7a 06		 jp	 SHORT $LN4@GetPointHe
; Line 879
  00114	81 c2 ff ff 00
	00		 add	 edx, 65535		; 0000ffffH
$LN4@GetPointHe:
; Line 882
  0011a	0f b7 c9	 movzx	 ecx, cx
  0011d	0f af cf	 imul	 ecx, edi
  00120	0f b7 c2	 movzx	 eax, dx
  00123	5f		 pop	 edi
  00124	03 c8		 add	 ecx, eax
  00126	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00129	8b 0c 88	 mov	 ecx, DWORD PTR [eax+ecx*4]
; Line 885
  0012c	85 c9		 test	 ecx, ecx
  0012e	0f 84 03 01 00
	00		 je	 $LN7@GetPointHe
; Line 896
  00134	80 7d 10 00	 cmp	 BYTE PTR _Round$[ebp], 0
  00138	0f 28 cc	 movaps	 xmm1, xmm4
  0013b	f3 0f 10 41 14	 movss	 xmm0, DWORD PTR [ecx+20]
  00140	f3 0f 5e 46 40	 divss	 xmm0, DWORD PTR [esi+64]
  00145	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00148	0f b6 42 09	 movzx	 eax, BYTE PTR [edx+9]
  0014c	f3 0f 5e c8	 divss	 xmm1, xmm0
  00150	66 0f 6e c0	 movd	 xmm0, eax
  00154	0f b6 42 08	 movzx	 eax, BYTE PTR [edx+8]
  00158	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0015b	f3 0f 5c d8	 subss	 xmm3, xmm0
  0015f	66 0f 6e c0	 movd	 xmm0, eax
  00163	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00166	f3 0f 59 d9	 mulss	 xmm3, xmm1
  0016a	f3 0f 5c f8	 subss	 xmm7, xmm0
  0016e	f3 0f 59 f9	 mulss	 xmm7, xmm1
  00172	74 08		 je	 SHORT $LN6@GetPointHe
; Line 897
  00174	d9 42 04	 fld	 DWORD PTR [edx+4]
  00177	5e		 pop	 esi
; Line 928
  00178	5d		 pop	 ebp
  00179	c2 0c 00	 ret	 12			; 0000000cH
$LN6@GetPointHe:
; Line 900
  0017c	80 79 18 00	 cmp	 BYTE PTR [ecx+24], 0
  00180	74 59		 je	 SHORT $LN8@GetPointHe
; Line 901
  00182	0f 2f fb	 comiss	 xmm7, xmm3
; Line 902
  00185	77 2d		 ja	 SHORT $LN10@GetPointHe
; Line 903
  00187	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
; Line 909
  0018a	f3 0f 5c e7	 subss	 xmm4, xmm7
  0018e	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00191	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00196	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00199	0f 28 d0	 movaps	 xmm2, xmm0
  0019c	f3 0f 5c 52 04	 subss	 xmm2, DWORD PTR [edx+4]
  001a1	0f 28 fc	 movaps	 xmm7, xmm4
; Line 910
  001a4	f3 0f 10 62 04	 movss	 xmm4, DWORD PTR [edx+4]
  001a9	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  001ae	f3 0f 5c c8	 subss	 xmm1, xmm0
; Line 911
  001b2	eb 66		 jmp	 SHORT $LN13@GetPointHe
$LN10@GetPointHe:
; Line 906
  001b4	f3 0f 10 4a 04	 movss	 xmm1, DWORD PTR [edx+4]
; Line 909
  001b9	f3 0f 5c e7	 subss	 xmm4, xmm7
  001bd	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  001c0	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  001c3	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
  001c8	0f 28 fc	 movaps	 xmm7, xmm4
; Line 910
  001cb	f3 0f 10 62 04	 movss	 xmm4, DWORD PTR [edx+4]
  001d0	f3 0f 5c d1	 subss	 xmm2, xmm1
  001d4	f3 0f 5c 4a 04	 subss	 xmm1, DWORD PTR [edx+4]
; Line 911
  001d9	eb 3f		 jmp	 SHORT $LN13@GetPointHe
$LN8@GetPointHe:
; Line 912
  001db	0f 2f df	 comiss	 xmm3, xmm7
; Line 913
  001de	f3 0f 10 62 04	 movss	 xmm4, DWORD PTR [edx+4]
  001e3	76 1d		 jbe	 SHORT $LN12@GetPointHe
; Line 914
  001e5	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  001e8	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
; Line 915
  001ed	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  001f0	0f 28 d0	 movaps	 xmm2, xmm0
  001f3	f3 0f 5c d4	 subss	 xmm2, xmm4
  001f7	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  001fc	f3 0f 5c c8	 subss	 xmm1, xmm0
; Line 916
  00200	eb 18		 jmp	 SHORT $LN13@GetPointHe
$LN12@GetPointHe:
; Line 917
  00202	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00205	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  0020a	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0020d	f3 0f 10 50 04	 movss	 xmm2, DWORD PTR [eax+4]
  00212	f3 0f 5c d1	 subss	 xmm2, xmm1
; Line 918
  00216	f3 0f 5c cc	 subss	 xmm1, xmm4
$LN13@GetPointHe:
; Line 924
  0021a	f3 0f 59 cf	 mulss	 xmm1, xmm7
  0021e	5e		 pop	 esi
  0021f	f3 0f 59 d3	 mulss	 xmm2, xmm3
  00223	f3 0f 58 ca	 addss	 xmm1, xmm2
  00227	f3 0f 58 cc	 addss	 xmm1, xmm4
  0022b	f3 0f 11 4d 10	 movss	 DWORD PTR tv579[ebp], xmm1
  00230	d9 45 10	 fld	 DWORD PTR tv579[ebp]
; Line 928
  00233	5d		 pop	 ebp
  00234	c2 0c 00	 ret	 12			; 0000000cH
$LN7@GetPointHe:
; Line 927
  00237	d9 ee		 fldz
  00239	5e		 pop	 esi
; Line 928
  0023a	5d		 pop	 ebp
  0023b	c2 0c 00	 ret	 12			; 0000000cH
?GetPointHeight@BT_QuadMap@@QAEMMM_N@Z ENDP		; BT_QuadMap::GetPointHeight
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GetPointExcluded@BT_QuadMap@@QAE_NMM@Z
_TEXT	SEGMENT
tv138 = -8						; size = 4
tv347 = -4						; size = 4
_x$ = 8							; size = 4
_z$ = 12						; size = 4
?GetPointExcluded@BT_QuadMap@@QAE_NMM@Z PROC		; BT_QuadMap::GetPointExcluded, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 818
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	8b d9		 mov	 ebx, ecx
; Line 827
  00009	80 7b 10 01	 cmp	 BYTE PTR [ebx+16], 1
  0000d	0f 85 0c 01 00
	00		 jne	 $LN2@GetPointEx
; Line 830
  00013	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  0001b	0f 57 c0	 xorps	 xmm0, xmm0
  0001e	f3 0f 10 5b 3c	 movss	 xmm3, DWORD PTR [ebx+60]
  00023	0f 28 cc	 movaps	 xmm1, xmm4
  00026	f3 0f 5e 4b 3c	 divss	 xmm1, DWORD PTR [ebx+60]
  0002b	56		 push	 esi
  0002c	57		 push	 edi
; Line 840
  0002d	0f b6 7b 45	 movzx	 edi, BYTE PTR [ebx+69]
  00031	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR __real@3f000000
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  00039	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@80000000
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 833
  00041	f3 0f 2a c7	 cvtsi2ss xmm0, edi
  00045	f3 0f 11 5d fc	 movss	 DWORD PTR tv347[ebp], xmm3
  0004a	f3 0f 58 5d 0c	 addss	 xmm3, DWORD PTR _z$[ebp]
  0004f	f3 0f 11 4d f8	 movss	 DWORD PTR tv138[ebp], xmm1
  00054	f3 0f 59 d9	 mulss	 xmm3, xmm1
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  00058	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@4b000000
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 833
  00060	f3 0f 59 d8	 mulss	 xmm3, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  00064	0f 54 d3	 andps	 xmm2, xmm3
  00067	0f 28 c3	 movaps	 xmm0, xmm3
  0006a	0f 57 c2	 xorps	 xmm0, xmm2
  0006d	f3 0f c2 c1 01	 cmpltss xmm0, xmm1
  00072	0f 54 c8	 andps	 xmm1, xmm0
  00075	0f 28 c3	 movaps	 xmm0, xmm3
  00078	0f 56 ca	 orps	 xmm1, xmm2
  0007b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0007f	f3 0f 5c c1	 subss	 xmm0, xmm1
  00083	0f 28 c8	 movaps	 xmm1, xmm0
  00086	f3 0f 5c cb	 subss	 xmm1, xmm3
  0008a	f3 0f c2 ca 06	 cmpnless xmm1, xmm2
  0008f	0f 54 cc	 andps	 xmm1, xmm4
  00092	f3 0f 5c c1	 subss	 xmm0, xmm1
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 833
  00096	e8 00 00 00 00	 call	 __ftol3
  0009b	f3 0f 10 5d fc	 movss	 xmm3, DWORD PTR tv347[ebp]
  000a0	0f 57 c0	 xorps	 xmm0, xmm0
  000a3	f3 0f 58 5d 08	 addss	 xmm3, DWORD PTR _x$[ebp]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  000a8	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@80000000
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 833
  000b0	8b f0		 mov	 esi, eax
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  000b2	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@4b000000
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 834
  000ba	f3 0f 2a c7	 cvtsi2ss xmm0, edi
  000be	f3 0f 59 5d f8	 mulss	 xmm3, DWORD PTR tv138[ebp]
  000c3	0f af f7	 imul	 esi, edi
  000c6	f3 0f 59 d8	 mulss	 xmm3, xmm0
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  000ca	0f 54 d3	 andps	 xmm2, xmm3
  000cd	0f 28 c3	 movaps	 xmm0, xmm3
  000d0	0f 57 c2	 xorps	 xmm0, xmm2
  000d3	f3 0f c2 c1 01	 cmpltss xmm0, xmm1
  000d8	0f 54 c8	 andps	 xmm1, xmm0
  000db	0f 28 c3	 movaps	 xmm0, xmm3
  000de	0f 56 ca	 orps	 xmm1, xmm2
  000e1	f3 0f 58 c1	 addss	 xmm0, xmm1
  000e5	f3 0f 5c c1	 subss	 xmm0, xmm1
  000e9	0f 28 c8	 movaps	 xmm1, xmm0
  000ec	f3 0f 5c cb	 subss	 xmm1, xmm3
  000f0	f3 0f c2 ca 06	 cmpnless xmm1, xmm2
  000f5	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f800000
  000fd	0f 54 ca	 andps	 xmm1, xmm2
  00100	f3 0f 5c c1	 subss	 xmm0, xmm1
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 834
  00104	e8 00 00 00 00	 call	 __ftol3
; Line 837
  00109	03 f0		 add	 esi, eax
; Line 840
  0010b	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  0010e	5f		 pop	 edi
  0010f	83 3c b0 00	 cmp	 DWORD PTR [eax+esi*4], 0
  00113	5e		 pop	 esi
  00114	74 09		 je	 SHORT $LN2@GetPointEx
; Line 844
  00116	32 c0		 xor	 al, al
  00118	5b		 pop	 ebx
; Line 847
  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c2 08 00	 ret	 8
$LN2@GetPointEx:
; Line 846
  0011f	b0 01		 mov	 al, 1
  00121	5b		 pop	 ebx
; Line 847
  00122	8b e5		 mov	 esp, ebp
  00124	5d		 pop	 ebp
  00125	c2 08 00	 ret	 8
?GetPointExcluded@BT_QuadMap@@QAE_NMM@Z ENDP		; BT_QuadMap::GetPointExcluded
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?UpdateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z
_TEXT	SEGMENT
_Mesh$ = 8						; size = 4
?UpdateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z PROC	; BT_QuadMap::UpdateDBPMesh, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 588
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	57		 push	 edi
  00005	8b f9		 mov	 edi, ecx
; Line 590
  00007	32 db		 xor	 bl, bl
; Line 593
  00009	80 7f 10 01	 cmp	 BYTE PTR [edi+16], 1
  0000d	75 72		 jne	 SHORT $LN8@UpdateDBPM
; Line 595
  0000f	38 5f 20	 cmp	 BYTE PTR [edi+32], bl
  00012	75 07		 jne	 SHORT $LN3@UpdateDBPM
; Line 596
  00014	b3 01		 mov	 bl, 1
; Line 597
  00016	e8 00 00 00 00	 call	 ?GenerateMeshData@BT_QuadMap@@QAEXXZ ; BT_QuadMap::GenerateMeshData
$LN3@UpdateDBPM:
; Line 600
  0001b	0f b7 47 22	 movzx	 eax, WORD PTR [edi+34]
  0001f	56		 push	 esi
  00020	8b 75 08	 mov	 esi, DWORD PTR _Mesh$[ebp]
  00023	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00026	c1 e0 03	 shl	 eax, 3
  00029	50		 push	 eax
  0002a	ff 77 28	 push	 DWORD PTR [edi+40]
  0002d	ff 76 14	 push	 DWORD PTR [esi+20]
  00030	e8 00 00 00 00	 call	 _memcpy
; Line 601
  00035	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  00038	03 c0		 add	 eax, eax
  0003a	50		 push	 eax
  0003b	ff 77 2c	 push	 DWORD PTR [edi+44]
  0003e	ff 76 18	 push	 DWORD PTR [esi+24]
  00041	e8 00 00 00 00	 call	 _memcpy
  00046	83 c4 18	 add	 esp, 24			; 00000018H
; Line 602
  00049	c6 86 ed 03 00
	00 01		 mov	 BYTE PTR [esi+1005], 1
; Line 605
  00050	5e		 pop	 esi
  00051	84 db		 test	 bl, bl
  00053	74 2c		 je	 SHORT $LN8@UpdateDBPM
; Line 804
  00055	80 7f 10 01	 cmp	 BYTE PTR [edi+16], 1
  00059	75 26		 jne	 SHORT $LN8@UpdateDBPM
; Line 805
  0005b	80 7f 20 01	 cmp	 BYTE PTR [edi+32], 1
  0005f	75 20		 jne	 SHORT $LN8@UpdateDBPM
; Line 807
  00061	ff 77 28	 push	 DWORD PTR [edi+40]
  00064	c6 47 20 00	 mov	 BYTE PTR [edi+32], 0
  00068	e8 00 00 00 00	 call	 _free
; Line 808
  0006d	ff 77 2c	 push	 DWORD PTR [edi+44]
  00070	e8 00 00 00 00	 call	 _free
  00075	83 c4 08	 add	 esp, 8
; Line 809
  00078	33 c0		 xor	 eax, eax
  0007a	66 89 47 22	 mov	 WORD PTR [edi+34], ax
; Line 810
  0007e	89 47 24	 mov	 DWORD PTR [edi+36], eax
$LN8@UpdateDBPM:
  00081	5f		 pop	 edi
; Line 608
  00082	5b		 pop	 ebx
  00083	5d		 pop	 ebp
  00084	c2 04 00	 ret	 4
?UpdateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z ENDP	; BT_QuadMap::UpdateDBPMesh
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GenerateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
$T2 = -4						; size = 4
_Mesh$ = 8						; size = 4
_bDeleteMeshData$1$ = 11				; size = 1
?GenerateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z PROC	; BT_QuadMap::GenerateDBPMesh, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 550
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR _Mesh$[ebp]
; Line 552
  0000d	c6 45 0b 00	 mov	 BYTE PTR _bDeleteMeshData$1$[ebp], 0
; Line 555
  00011	80 7e 10 01	 cmp	 BYTE PTR [esi+16], 1
  00015	0f 85 fd 00 00
	00		 jne	 $LN11@GenerateDB
; Line 557
  0001b	80 7e 20 00	 cmp	 BYTE PTR [esi+32], 0
  0001f	75 09		 jne	 SHORT $LN3@GenerateDB
; Line 558
  00021	c6 45 0b 01	 mov	 BYTE PTR _bDeleteMeshData$1$[ebp], 1
; Line 559
  00025	e8 00 00 00 00	 call	 ?GenerateMeshData@BT_QuadMap@@QAEXXZ ; BT_QuadMap::GenerateMeshData
$LN3@GenerateDB:
; Line 563
  0002a	0f b7 46 22	 movzx	 eax, WORD PTR [esi+34]
  0002e	53		 push	 ebx
  0002f	68 12 02 00 00	 push	 530			; 00000212H
  00034	ff 76 24	 push	 DWORD PTR [esi+36]
  00037	8d 5e 24	 lea	 ebx, DWORD PTR [esi+36]
  0003a	50		 push	 eax
  0003b	57		 push	 edi
  0003c	e8 00 00 00 00	 call	 ?BT_Intern_SetupMesh@@YAXPAUsMesh@@KKK@Z ; BT_Intern_SetupMesh
  00041	83 c4 10	 add	 esp, 16			; 00000010H
; Line 566
  00044	83 7f 14 00	 cmp	 DWORD PTR [edi+20], 0
  00048	75 5f		 jne	 SHORT $LN13@GenerateDB
; Line 567
  0004a	0f b7 46 22	 movzx	 eax, WORD PTR [esi+34]
  0004e	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00051	c1 e0 03	 shl	 eax, 3
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 _malloc
  0005a	83 c4 04	 add	 esp, 4
  0005d	89 47 14	 mov	 DWORD PTR [edi+20], eax
; Line 568
  00060	85 c0		 test	 eax, eax
  00062	75 0a		 jne	 SHORT $LN5@GenerateDB
; Line 569
  00064	6a 1b		 push	 27			; 0000001bH
  00066	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0006b	83 c4 04	 add	 esp, 4
$LN5@GenerateDB:
; Line 570
  0006e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00070	03 c0		 add	 eax, eax
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 _malloc
  00078	83 c4 04	 add	 esp, 4
  0007b	89 47 18	 mov	 DWORD PTR [edi+24], eax
; Line 571
  0007e	85 c0		 test	 eax, eax
  00080	75 0a		 jne	 SHORT $LN6@GenerateDB
; Line 572
  00082	6a 1b		 push	 27			; 0000001bH
  00084	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00089	83 c4 04	 add	 esp, 4
$LN6@GenerateDB:
; Line 573
  0008c	0f b7 46 22	 movzx	 eax, WORD PTR [esi+34]
  00090	89 47 1c	 mov	 DWORD PTR [edi+28], eax
; Line 574
  00093	8b 03		 mov	 eax, DWORD PTR [ebx]
  00095	89 47 20	 mov	 DWORD PTR [edi+32], eax
  00098	8d 46 22	 lea	 eax, DWORD PTR [esi+34]
  0009b	89 45 fc	 mov	 DWORD PTR $T2[ebp], eax
  0009e	8d 46 24	 lea	 eax, DWORD PTR [esi+36]
  000a1	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  000a4	8d 46 22	 lea	 eax, DWORD PTR [esi+34]
  000a7	eb 09		 jmp	 SHORT $LN4@GenerateDB
$LN13@GenerateDB:
  000a9	8d 46 22	 lea	 eax, DWORD PTR [esi+34]
  000ac	89 5d f8	 mov	 DWORD PTR $T1[ebp], ebx
  000af	89 45 fc	 mov	 DWORD PTR $T2[ebp], eax
$LN4@GenerateDB:
; Line 577
  000b2	0f b7 00	 movzx	 eax, WORD PTR [eax]
  000b5	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  000b8	c1 e0 03	 shl	 eax, 3
  000bb	50		 push	 eax
  000bc	ff 76 28	 push	 DWORD PTR [esi+40]
  000bf	ff 77 14	 push	 DWORD PTR [edi+20]
  000c2	e8 00 00 00 00	 call	 _memcpy
; Line 578
  000c7	8b 03		 mov	 eax, DWORD PTR [ebx]
  000c9	03 c0		 add	 eax, eax
  000cb	50		 push	 eax
  000cc	ff 76 2c	 push	 DWORD PTR [esi+44]
  000cf	ff 77 18	 push	 DWORD PTR [edi+24]
  000d2	e8 00 00 00 00	 call	 _memcpy
  000d7	83 c4 18	 add	 esp, 24			; 00000018H
; Line 579
  000da	c6 87 ed 03 00
	00 01		 mov	 BYTE PTR [edi+1005], 1
; Line 582
  000e1	80 7d 0b 00	 cmp	 BYTE PTR _bDeleteMeshData$1$[ebp], 0
  000e5	5b		 pop	 ebx
  000e6	74 30		 je	 SHORT $LN11@GenerateDB
; Line 804
  000e8	80 7e 10 01	 cmp	 BYTE PTR [esi+16], 1
  000ec	75 2a		 jne	 SHORT $LN11@GenerateDB
; Line 805
  000ee	80 7e 20 01	 cmp	 BYTE PTR [esi+32], 1
  000f2	75 24		 jne	 SHORT $LN11@GenerateDB
; Line 807
  000f4	ff 76 28	 push	 DWORD PTR [esi+40]
  000f7	c6 46 20 00	 mov	 BYTE PTR [esi+32], 0
  000fb	e8 00 00 00 00	 call	 _free
; Line 808
  00100	ff 76 2c	 push	 DWORD PTR [esi+44]
  00103	e8 00 00 00 00	 call	 _free
; Line 809
  00108	8b 45 fc	 mov	 eax, DWORD PTR $T2[ebp]
  0010b	83 c4 08	 add	 esp, 8
  0010e	33 c9		 xor	 ecx, ecx
  00110	66 89 08	 mov	 WORD PTR [eax], cx
; Line 810
  00113	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00116	89 08		 mov	 DWORD PTR [eax], ecx
$LN11@GenerateDB:
  00118	5f		 pop	 edi
; Line 585
  00119	5e		 pop	 esi
  0011a	8b e5		 mov	 esp, ebp
  0011c	5d		 pop	 ebp
  0011d	c2 04 00	 ret	 4
?GenerateDBPMesh@BT_QuadMap@@QAEXPAUsMesh@@@Z ENDP	; BT_QuadMap::GenerateDBPMesh
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GeneratePlain@BT_QuadMap@@QAEPAUs_BT_DrawBuffer@@XZ
_TEXT	SEGMENT
_bufferDesc$1 = -28					; size = 24
__$ArrayPad$ = -4					; size = 4
?GeneratePlain@BT_QuadMap@@QAEPAUs_BT_DrawBuffer@@XZ PROC ; BT_QuadMap::GeneratePlain, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 494
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b f1		 mov	 esi, ecx
; Line 499
  00013	80 7e 10 01	 cmp	 BYTE PTR [esi+16], 1
  00017	0f 85 70 01 00
	00		 jne	 $LN2@GeneratePl
; Line 501
  0001d	57		 push	 edi
  0001e	6a 20		 push	 32			; 00000020H
  00020	e8 00 00 00 00	 call	 _malloc
  00025	8b f8		 mov	 edi, eax
  00027	83 c4 04	 add	 esp, 4
; Line 502
  0002a	85 ff		 test	 edi, edi
  0002c	75 0a		 jne	 SHORT $LN3@GeneratePl
; Line 503
  0002e	6a 1b		 push	 27			; 0000001bH
  00030	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00035	83 c4 04	 add	 esp, 4
$LN3@GeneratePl:
; Line 510
  00038	0f b7 46 22	 movzx	 eax, WORD PTR [esi+34]
; Line 514
  0003c	8d 55 e4	 lea	 edx, DWORD PTR _bufferDesc$1[ebp]
  0003f	57		 push	 edi
  00040	6a 00		 push	 0
  00042	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$1[ebp+4], 0
  00049	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0004c	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _bufferDesc$1[ebp+8], 1
  00053	c1 e0 03	 shl	 eax, 3
  00056	89 45 e4	 mov	 DWORD PTR _bufferDesc$1[ebp], eax
  00059	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_pD3D@@3PAUID3D11Device@@A ; m_pD3D
  0005e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$1[ebp+12], 0
  00065	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _bufferDesc$1[ebp+16], 0
  0006c	52		 push	 edx
  0006d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006f	50		 push	 eax
  00070	ff 51 0c	 call	 DWORD PTR [ecx+12]
  00073	85 c0		 test	 eax, eax
  00075	79 0a		 jns	 SHORT $LN4@GeneratePl
; Line 515
  00077	6a 0b		 push	 11			; 0000000bH
  00079	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0007e	83 c4 04	 add	 esp, 4
$LN4@GeneratePl:
; Line 517
  00081	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
; Line 519
  00084	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pD3D@@3PAUID3D11Device@@A ; m_pD3D
  0008a	03 c0		 add	 eax, eax
  0008c	89 45 e4	 mov	 DWORD PTR _bufferDesc$1[ebp], eax
  0008f	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00092	50		 push	 eax
  00093	6a 00		 push	 0
  00095	c7 45 ec 02 00
	00 00		 mov	 DWORD PTR _bufferDesc$1[ebp+8], 2
  0009c	8d 45 e4	 lea	 eax, DWORD PTR _bufferDesc$1[ebp]
  0009f	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a1	50		 push	 eax
  000a2	51		 push	 ecx
  000a3	ff 52 0c	 call	 DWORD PTR [edx+12]
  000a6	85 c0		 test	 eax, eax
  000a8	79 0a		 jns	 SHORT $LN5@GeneratePl
; Line 520
  000aa	6a 0c		 push	 12			; 0000000cH
  000ac	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  000b1	83 c4 04	 add	 esp, 4
$LN5@GeneratePl:
; Line 522
  000b4	0f b6 46 45	 movzx	 eax, BYTE PTR [esi+69]
; Line 523
  000b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?m_pD3D@@3PAUID3D11Device@@A ; m_pD3D
  000be	8d 04 c5 08 00
	00 00		 lea	 eax, DWORD PTR [eax*8+8]
  000c5	89 45 e4	 mov	 DWORD PTR _bufferDesc$1[ebp], eax
  000c8	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  000cb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cd	50		 push	 eax
  000ce	6a 00		 push	 0
  000d0	8d 45 e4	 lea	 eax, DWORD PTR _bufferDesc$1[ebp]
  000d3	50		 push	 eax
  000d4	51		 push	 ecx
  000d5	ff 52 0c	 call	 DWORD PTR [edx+12]
  000d8	85 c0		 test	 eax, eax
  000da	79 0a		 jns	 SHORT $LN6@GeneratePl
; Line 524
  000dc	6a 0c		 push	 12			; 0000000cH
  000de	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  000e3	83 c4 04	 add	 esp, 4
$LN6@GeneratePl:
; Line 613
  000e6	80 7e 10 01	 cmp	 BYTE PTR [esi+16], 1
; Line 540
  000ea	66 8b 46 22	 mov	 ax, WORD PTR [esi+34]
  000ee	66 89 47 0c	 mov	 WORD PTR [edi+12], ax
; Line 541
  000f2	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  000f5	c6 47 1c 28	 mov	 BYTE PTR [edi+28], 40	; 00000028H
  000f9	89 47 10	 mov	 DWORD PTR [edi+16], eax
; Line 613
  000fc	75 7d		 jne	 SHORT $LN15@GeneratePl
  000fe	53		 push	 ebx
; Line 614
  000ff	32 db		 xor	 bl, bl
; Line 615
  00101	38 5e 20	 cmp	 BYTE PTR [esi+32], bl
  00104	75 09		 jne	 SHORT $LN10@GeneratePl
; Line 617
  00106	8b ce		 mov	 ecx, esi
  00108	b3 01		 mov	 bl, 1
  0010a	e8 00 00 00 00	 call	 ?GenerateMeshData@BT_QuadMap@@QAEXXZ ; BT_QuadMap::GenerateMeshData
$LN10@GeneratePl:
; Line 619
  0010f	ff 76 28	 push	 DWORD PTR [esi+40]
  00112	0f b7 46 22	 movzx	 eax, WORD PTR [esi+34]
  00116	50		 push	 eax
  00117	6a 00		 push	 0
  00119	57		 push	 edi
  0011a	e8 00 00 00 00	 call	 ?BT_Intern_RefreshVB@@YAXPAUs_BT_DrawBuffer@@KKPAUBT_Meshdata_Vertex@@@Z ; BT_Intern_RefreshVB
; Line 620
  0011f	ff 76 2c	 push	 DWORD PTR [esi+44]
  00122	ff 76 24	 push	 DWORD PTR [esi+36]
  00125	6a 00		 push	 0
  00127	57		 push	 edi
  00128	e8 00 00 00 00	 call	 ?BT_Intern_RefreshIB@@YAXPAUs_BT_DrawBuffer@@KKPAG@Z ; BT_Intern_RefreshIB
; Line 668
  0012d	0f b7 4e 24	 movzx	 ecx, WORD PTR [esi+36]
  00131	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  00136	f7 e1		 mul	 ecx
; Line 669
  00138	66 8b 46 22	 mov	 ax, WORD PTR [esi+34]
  0013c	83 c4 20	 add	 esp, 32			; 00000020H
  0013f	d1 ea		 shr	 edx, 1
; Line 670
  00141	80 fb 01	 cmp	 bl, 1
  00144	66 89 57 1e	 mov	 WORD PTR [edi+30], dx
  00148	66 89 47 0c	 mov	 WORD PTR [edi+12], ax
  0014c	5b		 pop	 ebx
  0014d	75 2c		 jne	 SHORT $LN15@GeneratePl
; Line 804
  0014f	80 7e 10 01	 cmp	 BYTE PTR [esi+16], 1
  00153	75 26		 jne	 SHORT $LN15@GeneratePl
; Line 805
  00155	80 7e 20 01	 cmp	 BYTE PTR [esi+32], 1
  00159	75 20		 jne	 SHORT $LN15@GeneratePl
; Line 807
  0015b	ff 76 28	 push	 DWORD PTR [esi+40]
  0015e	c6 46 20 00	 mov	 BYTE PTR [esi+32], 0
  00162	e8 00 00 00 00	 call	 _free
; Line 808
  00167	ff 76 2c	 push	 DWORD PTR [esi+44]
  0016a	e8 00 00 00 00	 call	 _free
  0016f	83 c4 08	 add	 esp, 8
; Line 809
  00172	33 c0		 xor	 eax, eax
  00174	66 89 46 22	 mov	 WORD PTR [esi+34], ax
; Line 810
  00178	89 46 24	 mov	 DWORD PTR [esi+36], eax
$LN15@GeneratePl:
; Line 544
  0017b	8b c7		 mov	 eax, edi
  0017d	5f		 pop	 edi
  0017e	5e		 pop	 esi
; Line 547
  0017f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00182	33 cd		 xor	 ecx, ebp
  00184	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00189	8b e5		 mov	 esp, ebp
  0018b	5d		 pop	 ebp
  0018c	c3		 ret	 0
$LN2@GeneratePl:
  0018d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00190	33 c0		 xor	 eax, eax
  00192	33 cd		 xor	 ecx, ebp
  00194	5e		 pop	 esi
  00195	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0019a	8b e5		 mov	 esp, ebp
  0019c	5d		 pop	 ebp
  0019d	c3		 ret	 0
?GeneratePlain@BT_QuadMap@@QAEPAUs_BT_DrawBuffer@@XZ ENDP ; BT_QuadMap::GeneratePlain
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?UpdateMesh@BT_QuadMap@@QAEXPAUs_BT_DrawBuffer@@_N@Z
_TEXT	SEGMENT
_DrawBuffer$ = 8					; size = 4
_ClearUpdateInfo$ = 12					; size = 1
?UpdateMesh@BT_QuadMap@@QAEXPAUs_BT_DrawBuffer@@_N@Z PROC ; BT_QuadMap::UpdateMesh, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 676
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
; Line 678
  00006	80 7e 10 01	 cmp	 BYTE PTR [esi+16], 1
  0000a	0f 85 e3 00 00
	00		 jne	 $LN8@UpdateMesh
; Line 679
  00010	80 7e 32 00	 cmp	 BYTE PTR [esi+50], 0
  00014	53		 push	 ebx
  00015	57		 push	 edi
  00016	0f 84 89 00 00
	00		 je	 $LN15@UpdateMesh
; Line 682
  0001c	e8 00 00 00 00	 call	 ?CalculateNormals@BT_QuadMap@@QAEXXZ ; BT_QuadMap::CalculateNormals
  00021	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3f80204081020408
; Line 686
  00029	33 db		 xor	 ebx, ebx
  0002b	33 c9		 xor	 ecx, ecx
  0002d	c6 46 32 00	 mov	 BYTE PTR [esi+50], 0
  00031	33 d2		 xor	 edx, edx
$LL4@UpdateMesh:
; Line 688
  00033	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00036	8d 52 14	 lea	 edx, DWORD PTR [edx+20]
  00039	43		 inc	 ebx
  0003a	8d 49 28	 lea	 ecx, DWORD PTR [ecx+40]
  0003d	0f be 44 10 f6	 movsx	 eax, BYTE PTR [eax+edx-10]
  00042	66 0f 6e c0	 movd	 xmm0, eax
  00046	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00049	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0004d	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00051	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00055	f3 0f 11 44 01
	e4		 movss	 DWORD PTR [ecx+eax-28], xmm0
; Line 689
  0005b	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0005e	0f be 44 10 f7	 movsx	 eax, BYTE PTR [eax+edx-9]
  00063	66 0f 6e c0	 movd	 xmm0, eax
  00067	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0006a	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0006e	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00072	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00076	f3 0f 11 44 01
	e8		 movss	 DWORD PTR [ecx+eax-24], xmm0
; Line 690
  0007c	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0007f	0f be 44 10 f8	 movsx	 eax, BYTE PTR [eax+edx-8]
  00084	66 0f 6e c0	 movd	 xmm0, eax
  00088	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0008b	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0008f	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00093	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00097	f3 0f 11 44 01
	ec		 movss	 DWORD PTR [ecx+eax-20], xmm0
  0009d	0f b7 46 36	 movzx	 eax, WORD PTR [esi+54]
  000a1	3b d8		 cmp	 ebx, eax
  000a3	76 8e		 jbe	 SHORT $LL4@UpdateMesh
$LN15@UpdateMesh:
; Line 695
  000a5	80 7e 33 01	 cmp	 BYTE PTR [esi+51], 1
  000a9	8b 5d 08	 mov	 ebx, DWORD PTR _DrawBuffer$[ebp]
  000ac	75 1b		 jne	 SHORT $LN7@UpdateMesh
; Line 697
  000ae	ff 76 28	 push	 DWORD PTR [esi+40]
  000b1	0f b7 46 22	 movzx	 eax, WORD PTR [esi+34]
  000b5	50		 push	 eax
  000b6	6a 00		 push	 0
  000b8	53		 push	 ebx
  000b9	e8 00 00 00 00	 call	 ?BT_Intern_RefreshVB@@YAXPAUs_BT_DrawBuffer@@KKPAUBT_Meshdata_Vertex@@@Z ; BT_Intern_RefreshVB
; Line 698
  000be	66 8b 46 22	 mov	 ax, WORD PTR [esi+34]
  000c2	83 c4 10	 add	 esp, 16			; 00000010H
  000c5	66 89 43 0c	 mov	 WORD PTR [ebx+12], ax
$LN7@UpdateMesh:
; Line 702
  000c9	80 7e 34 01	 cmp	 BYTE PTR [esi+52], 1
  000cd	75 22		 jne	 SHORT $LN21@UpdateMesh
; Line 703
  000cf	ff 76 2c	 push	 DWORD PTR [esi+44]
  000d2	ff 76 24	 push	 DWORD PTR [esi+36]
  000d5	6a 00		 push	 0
  000d7	53		 push	 ebx
  000d8	e8 00 00 00 00	 call	 ?BT_Intern_RefreshIB@@YAXPAUs_BT_DrawBuffer@@KKPAG@Z ; BT_Intern_RefreshIB
; Line 704
  000dd	0f b7 4e 24	 movzx	 ecx, WORD PTR [esi+36]
  000e1	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  000e6	f7 e1		 mul	 ecx
  000e8	83 c4 10	 add	 esp, 16			; 00000010H
  000eb	d1 ea		 shr	 edx, 1
  000ed	66 89 53 1e	 mov	 WORD PTR [ebx+30], dx
$LN21@UpdateMesh:
  000f1	5f		 pop	 edi
  000f2	5b		 pop	 ebx
$LN8@UpdateMesh:
; Line 709
  000f3	80 7d 0c 01	 cmp	 BYTE PTR _ClearUpdateInfo$[ebp], 1
  000f7	75 06		 jne	 SHORT $LN9@UpdateMesh
; Line 710
  000f9	66 c7 46 33 00
	00		 mov	 WORD PTR [esi+51], 0
$LN9@UpdateMesh:
  000ff	5e		 pop	 esi
; Line 713
  00100	5d		 pop	 ebp
  00101	c2 08 00	 ret	 8
?UpdateMesh@BT_QuadMap@@QAEXPAUs_BT_DrawBuffer@@_N@Z ENDP ; BT_QuadMap::UpdateMesh
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?SetToMesh@BT_QuadMap@@QAEXPAUs_BT_DrawBuffer@@@Z
_TEXT	SEGMENT
_DrawBuffer$ = 8					; size = 4
?SetToMesh@BT_QuadMap@@QAEXPAUs_BT_DrawBuffer@@@Z PROC	; BT_QuadMap::SetToMesh, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
  00004	8b f9		 mov	 edi, ecx
; Line 613
  00006	80 7f 10 01	 cmp	 BYTE PTR [edi+16], 1
  0000a	0f 85 80 00 00
	00		 jne	 $LN8@SetToMesh
; Line 614
  00010	53		 push	 ebx
  00011	32 db		 xor	 bl, bl
  00013	56		 push	 esi
; Line 615
  00014	38 5f 20	 cmp	 BYTE PTR [edi+32], bl
  00017	75 07		 jne	 SHORT $LN3@SetToMesh
; Line 616
  00019	b3 01		 mov	 bl, 1
; Line 617
  0001b	e8 00 00 00 00	 call	 ?GenerateMeshData@BT_QuadMap@@QAEXXZ ; BT_QuadMap::GenerateMeshData
$LN3@SetToMesh:
; Line 619
  00020	ff 77 28	 push	 DWORD PTR [edi+40]
  00023	0f b7 47 22	 movzx	 eax, WORD PTR [edi+34]
  00027	8b 75 08	 mov	 esi, DWORD PTR _DrawBuffer$[ebp]
  0002a	50		 push	 eax
  0002b	6a 00		 push	 0
  0002d	56		 push	 esi
  0002e	e8 00 00 00 00	 call	 ?BT_Intern_RefreshVB@@YAXPAUs_BT_DrawBuffer@@KKPAUBT_Meshdata_Vertex@@@Z ; BT_Intern_RefreshVB
; Line 620
  00033	ff 77 2c	 push	 DWORD PTR [edi+44]
  00036	ff 77 24	 push	 DWORD PTR [edi+36]
  00039	6a 00		 push	 0
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 ?BT_Intern_RefreshIB@@YAXPAUs_BT_DrawBuffer@@KKPAG@Z ; BT_Intern_RefreshIB
; Line 668
  00041	0f b7 4f 24	 movzx	 ecx, WORD PTR [edi+36]
  00045	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0004a	f7 e1		 mul	 ecx
  0004c	83 c4 20	 add	 esp, 32			; 00000020H
  0004f	d1 ea		 shr	 edx, 1
; Line 670
  00051	80 fb 01	 cmp	 bl, 1
  00054	66 89 56 1e	 mov	 WORD PTR [esi+30], dx
  00058	66 8b 47 22	 mov	 ax, WORD PTR [edi+34]
  0005c	66 89 46 0c	 mov	 WORD PTR [esi+12], ax
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	75 2c		 jne	 SHORT $LN8@SetToMesh
; Line 804
  00064	80 7f 10 01	 cmp	 BYTE PTR [edi+16], 1
  00068	75 26		 jne	 SHORT $LN8@SetToMesh
; Line 805
  0006a	80 7f 20 01	 cmp	 BYTE PTR [edi+32], 1
  0006e	75 20		 jne	 SHORT $LN8@SetToMesh
; Line 807
  00070	ff 77 28	 push	 DWORD PTR [edi+40]
  00073	c6 47 20 00	 mov	 BYTE PTR [edi+32], 0
  00077	e8 00 00 00 00	 call	 _free
; Line 808
  0007c	ff 77 2c	 push	 DWORD PTR [edi+44]
  0007f	e8 00 00 00 00	 call	 _free
  00084	83 c4 08	 add	 esp, 8
; Line 809
  00087	33 c0		 xor	 eax, eax
  00089	66 89 47 22	 mov	 WORD PTR [edi+34], ax
; Line 810
  0008d	89 47 24	 mov	 DWORD PTR [edi+36], eax
$LN8@SetToMesh:
  00090	5f		 pop	 edi
; Line 673
  00091	5d		 pop	 ebp
  00092	c2 04 00	 ret	 4
?SetToMesh@BT_QuadMap@@QAEXPAUs_BT_DrawBuffer@@@Z ENDP	; BT_QuadMap::SetToMesh
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?DeleteMeshData@BT_QuadMap@@QAEXXZ
_TEXT	SEGMENT
?DeleteMeshData@BT_QuadMap@@QAEXXZ PROC			; BT_QuadMap::DeleteMeshData, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 802
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
; Line 804
  00003	80 7e 10 01	 cmp	 BYTE PTR [esi+16], 1
  00007	75 26		 jne	 SHORT $LN3@DeleteMesh
; Line 805
  00009	80 7e 20 01	 cmp	 BYTE PTR [esi+32], 1
  0000d	75 20		 jne	 SHORT $LN3@DeleteMesh
; Line 807
  0000f	ff 76 28	 push	 DWORD PTR [esi+40]
  00012	c6 46 20 00	 mov	 BYTE PTR [esi+32], 0
  00016	e8 00 00 00 00	 call	 _free
; Line 808
  0001b	ff 76 2c	 push	 DWORD PTR [esi+44]
  0001e	e8 00 00 00 00	 call	 _free
  00023	83 c4 08	 add	 esp, 8
; Line 809
  00026	33 c0		 xor	 eax, eax
  00028	66 89 46 22	 mov	 WORD PTR [esi+34], ax
; Line 810
  0002c	89 46 24	 mov	 DWORD PTR [esi+36], eax
$LN3@DeleteMesh:
; Line 813
  0002f	5e		 pop	 esi
  00030	c3		 ret	 0
?DeleteMeshData@BT_QuadMap@@QAEXXZ ENDP			; BT_QuadMap::DeleteMeshData
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?GenerateMeshData@BT_QuadMap@@QAEXXZ
_TEXT	SEGMENT
tv1978 = -16						; size = 4
tv1936 = -16						; size = 4
tv1981 = -12						; size = 4
_CurrentVertex$1$ = -12					; size = 4
_this$1$ = -8						; size = 4
$T1 = -4						; size = 4
?GenerateMeshData@BT_QuadMap@@QAEXXZ PROC		; BT_QuadMap::GenerateMeshData, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 717
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	89 75 f8	 mov	 DWORD PTR _this$1$[ebp], esi
; Line 724
  0000c	80 7e 10 01	 cmp	 BYTE PTR [esi+16], 1
  00010	0f 85 95 03 00
	00		 jne	 $LN15@GenerateMe
; Line 726
  00016	80 7e 20 00	 cmp	 BYTE PTR [esi+32], 0
  0001a	8d 46 36	 lea	 eax, DWORD PTR [esi+54]
  0001d	53		 push	 ebx
  0001e	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00021	75 56		 jne	 SHORT $LN26@GenerateMe
; Line 727
  00023	0f b7 00	 movzx	 eax, WORD PTR [eax]
  00026	40		 inc	 eax
  00027	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0002a	c1 e0 03	 shl	 eax, 3
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 _malloc
  00033	83 c4 04	 add	 esp, 4
  00036	89 46 28	 mov	 DWORD PTR [esi+40], eax
; Line 728
  00039	85 c0		 test	 eax, eax
  0003b	75 0a		 jne	 SHORT $LN10@GenerateMe
; Line 729
  0003d	6a 1b		 push	 27			; 0000001bH
  0003f	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00044	83 c4 04	 add	 esp, 4
$LN10@GenerateMe:
; Line 730
  00047	0f b7 46 38	 movzx	 eax, WORD PTR [esi+56]
  0004b	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0004e	c1 e0 02	 shl	 eax, 2
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 _malloc
  00057	83 c4 04	 add	 esp, 4
  0005a	89 46 2c	 mov	 DWORD PTR [esi+44], eax
; Line 731
  0005d	85 c0		 test	 eax, eax
  0005f	75 0a		 jne	 SHORT $LN11@GenerateMe
; Line 732
  00061	6a 1b		 push	 27			; 0000001bH
  00063	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00068	83 c4 04	 add	 esp, 4
$LN11@GenerateMe:
; Line 733
  0006b	c6 46 20 01	 mov	 BYTE PTR [esi+32], 1
; Line 735
  0006f	b1 01		 mov	 cl, 1
  00071	66 c7 46 30 01
	01		 mov	 WORD PTR [esi+48], 257	; 00000101H
  00077	eb 06		 jmp	 SHORT $LN9@GenerateMe
$LN26@GenerateMe:
  00079	8a 4e 31	 mov	 cl, BYTE PTR [esi+49]
  0007c	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
$LN9@GenerateMe:
; Line 739
  0007f	80 7e 30 01	 cmp	 BYTE PTR [esi+48], 1
  00083	57		 push	 edi
  00084	0f 85 1a 02 00
	00		 jne	 $LN12@GenerateMe
; Line 740
  0008a	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  0008d	33 ff		 xor	 edi, edi
  0008f	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@3c000000
  00097	33 d2		 xor	 edx, edx
; Line 741
  00099	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  000a1	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f000000
  000a9	0f 28 dc	 movaps	 xmm3, xmm4
  000ac	8b 40 64	 mov	 eax, DWORD PTR [eax+100]
  000af	f2 0f 10 35 00
	00 00 00	 movsd	 xmm6, QWORD PTR __real@3f80204081020408
; Line 743
  000b7	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _CurrentVertex$1$[ebp], 0
  000be	89 55 f0	 mov	 DWORD PTR tv1936[ebp], edx
  000c1	f3 0f 10 50 34	 movss	 xmm2, DWORD PTR [eax+52]
  000c6	f3 0f 59 d5	 mulss	 xmm2, xmm5
  000ca	0f 28 c2	 movaps	 xmm0, xmm2
  000cd	f3 0f 59 40 4c	 mulss	 xmm0, DWORD PTR [eax+76]
  000d2	f3 0f 5e d8	 divss	 xmm3, xmm0
  000d6	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL4@GenerateMe:
; Line 747
  000e0	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  000e3	f3 0f 10 46 3c	 movss	 xmm0, DWORD PTR [esi+60]
  000e8	f3 0f 59 c7	 mulss	 xmm0, xmm7
  000ec	0f b6 44 02 09	 movzx	 eax, BYTE PTR [edx+eax+9]
  000f1	66 0f 6e c8	 movd	 xmm1, eax
  000f5	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  000f8	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000fb	8b 40 64	 mov	 eax, DWORD PTR [eax+100]
  000fe	f3 0f 59 4e 40	 mulss	 xmm1, DWORD PTR [esi+64]
  00103	f3 0f 5c c8	 subss	 xmm1, xmm0
  00107	f3 0f 59 cd	 mulss	 xmm1, xmm5
  0010b	f3 0f 59 48 34	 mulss	 xmm1, DWORD PTR [eax+52]
  00110	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00113	f3 0f 11 0c 07	 movss	 DWORD PTR [edi+eax], xmm1
; Line 748
  00118	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  0011b	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  0011e	8b 44 02 04	 mov	 eax, DWORD PTR [edx+eax+4]
  00122	89 44 0f 04	 mov	 DWORD PTR [edi+ecx+4], eax
; Line 749
  00126	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00129	f3 0f 10 46 3c	 movss	 xmm0, DWORD PTR [esi+60]
  0012e	f3 0f 59 c7	 mulss	 xmm0, xmm7
  00132	0f b6 44 02 08	 movzx	 eax, BYTE PTR [edx+eax+8]
  00137	66 0f 6e c8	 movd	 xmm1, eax
  0013b	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  0013e	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00141	8b 40 64	 mov	 eax, DWORD PTR [eax+100]
  00144	f3 0f 59 4e 40	 mulss	 xmm1, DWORD PTR [esi+64]
  00149	f3 0f 5c c8	 subss	 xmm1, xmm0
  0014d	f3 0f 59 cd	 mulss	 xmm1, xmm5
  00151	f3 0f 59 48 34	 mulss	 xmm1, DWORD PTR [eax+52]
  00156	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00159	f3 0f 11 4c 07
	08		 movss	 DWORD PTR [edi+eax+8], xmm1
; Line 752
  0015f	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00162	0f be 44 02 0a	 movsx	 eax, BYTE PTR [edx+eax+10]
  00167	66 0f 6e c0	 movd	 xmm0, eax
  0016b	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0016e	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00172	f2 0f 59 c6	 mulsd	 xmm0, xmm6
  00176	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0017a	f3 0f 11 44 07
	0c		 movss	 DWORD PTR [edi+eax+12], xmm0
; Line 753
  00180	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00183	0f be 44 02 0b	 movsx	 eax, BYTE PTR [edx+eax+11]
  00188	66 0f 6e c0	 movd	 xmm0, eax
  0018c	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0018f	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00193	f2 0f 59 c6	 mulsd	 xmm0, xmm6
  00197	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0019b	f3 0f 11 44 07
	10		 movss	 DWORD PTR [edi+eax+16], xmm0
; Line 754
  001a1	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  001a4	0f be 44 02 0c	 movsx	 eax, BYTE PTR [edx+eax+12]
  001a9	66 0f 6e c0	 movd	 xmm0, eax
  001ad	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  001b0	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  001b4	f2 0f 59 c6	 mulsd	 xmm0, xmm6
  001b8	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  001bc	f3 0f 11 44 07
	14		 movss	 DWORD PTR [edi+eax+20], xmm0
; Line 757
  001c2	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  001c5	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  001c8	03 cf		 add	 ecx, edi
  001ca	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  001cf	8b 40 64	 mov	 eax, DWORD PTR [eax+100]
  001d2	f3 0f 59 c2	 mulss	 xmm0, xmm2
  001d6	80 78 5c 00	 cmp	 BYTE PTR [eax+92], 0
  001da	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  001de	f3 0f 59 c3	 mulss	 xmm0, xmm3
  001e2	f3 0f 11 41 18	 movss	 DWORD PTR [ecx+24], xmm0
  001e7	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  001ea	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  001ed	74 1b		 je	 SHORT $LN13@GenerateMe
; Line 759
  001ef	0f 28 ca	 movaps	 xmm1, xmm2
  001f2	0f 28 c4	 movaps	 xmm0, xmm4
  001f5	f3 0f 59 48 14	 mulss	 xmm1, DWORD PTR [eax+20]
  001fa	f3 0f 58 4c 0f
	08		 addss	 xmm1, DWORD PTR [edi+ecx+8]
  00200	f3 0f 59 cb	 mulss	 xmm1, xmm3
  00204	f3 0f 5c c1	 subss	 xmm0, xmm1
; Line 760
  00208	eb 12		 jmp	 SHORT $LN42@GenerateMe
$LN13@GenerateMe:
; Line 762
  0020a	0f 28 c2	 movaps	 xmm0, xmm2
  0020d	f3 0f 59 40 14	 mulss	 xmm0, DWORD PTR [eax+20]
  00212	f3 0f 58 44 0f
	08		 addss	 xmm0, DWORD PTR [edi+ecx+8]
  00218	f3 0f 59 c3	 mulss	 xmm0, xmm3
$LN42@GenerateMe:
; Line 764
  0021c	f3 0f 11 44 0f
	1c		 movss	 DWORD PTR [edi+ecx+28], xmm0
  00222	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  00225	8b 56 28	 mov	 edx, DWORD PTR [esi+40]
  00228	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  0022b	8b 41 44	 mov	 eax, DWORD PTR [ecx+68]
  0022e	0f b7 40 14	 movzx	 eax, WORD PTR [eax+20]
  00232	66 0f 6e c0	 movd	 xmm0, eax
  00236	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00239	f3 0f 59 44 17
	18		 mulss	 xmm0, DWORD PTR [edi+edx+24]
  0023f	f3 0f 59 41 3c	 mulss	 xmm0, DWORD PTR [ecx+60]
  00244	f3 0f 11 44 17
	20		 movss	 DWORD PTR [edi+edx+32], xmm0
; Line 765
  0024a	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
  0024d	8b 56 28	 mov	 edx, DWORD PTR [esi+40]
  00250	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  00253	8b 41 44	 mov	 eax, DWORD PTR [ecx+68]
  00256	0f b7 40 14	 movzx	 eax, WORD PTR [eax+20]
  0025a	66 0f 6e c0	 movd	 xmm0, eax
  0025e	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]
  00261	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00264	f3 0f 59 44 17
	1c		 mulss	 xmm0, DWORD PTR [edi+edx+28]
  0026a	f3 0f 59 41 3c	 mulss	 xmm0, DWORD PTR [ecx+60]
  0026f	8b 4d f4	 mov	 ecx, DWORD PTR _CurrentVertex$1$[ebp]
  00272	41		 inc	 ecx
  00273	89 4d f4	 mov	 DWORD PTR _CurrentVertex$1$[ebp], ecx
  00276	f3 0f 11 44 17
	24		 movss	 DWORD PTR [edi+edx+36], xmm0
  0027c	83 c7 28	 add	 edi, 40			; 00000028H
  0027f	8b 55 f0	 mov	 edx, DWORD PTR tv1936[ebp]
  00282	0f b7 00	 movzx	 eax, WORD PTR [eax]
  00285	83 c2 14	 add	 edx, 20			; 00000014H
  00288	89 55 f0	 mov	 DWORD PTR tv1936[ebp], edx
  0028b	3b c8		 cmp	 ecx, eax
  0028d	0f 86 4d fe ff
	ff		 jbe	 $LL4@GenerateMe
; Line 735
  00293	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00296	0f b7 01	 movzx	 eax, WORD PTR [ecx]
  00299	8a 4e 31	 mov	 cl, BYTE PTR [esi+49]
; Line 767
  0029c	66 89 46 22	 mov	 WORD PTR [esi+34], ax
; Line 768
  002a0	c6 46 30 00	 mov	 BYTE PTR [esi+48], 0
$LN12@GenerateMe:
; Line 772
  002a4	80 f9 01	 cmp	 cl, 1
  002a7	0f 85 fc 00 00
	00		 jne	 $LN41@GenerateMe
; Line 774
  002ad	33 c0		 xor	 eax, eax
  002af	33 d2		 xor	 edx, edx
  002b1	33 db		 xor	 ebx, ebx
  002b3	66 3b 46 38	 cmp	 ax, WORD PTR [esi+56]
  002b7	0f 83 e5 00 00
	00		 jae	 $LN6@GenerateMe
; Line 773
  002bd	33 ff		 xor	 edi, edi
  002bf	90		 npad	 1
$LL7@GenerateMe:
; Line 775
  002c0	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  002c3	8b ca		 mov	 ecx, edx
  002c5	80 3c 07 00	 cmp	 BYTE PTR [edi+eax], 0
  002c9	0f 85 c3 00 00
	00		 jne	 $LN5@GenerateMe
; Line 776
  002cf	8b 74 07 04	 mov	 esi, DWORD PTR [edi+eax+4]
  002d3	89 75 f0	 mov	 DWORD PTR tv1978[ebp], esi
  002d6	8b 75 f8	 mov	 esi, DWORD PTR _this$1$[ebp]
  002d9	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  002dc	8b 76 2c	 mov	 esi, DWORD PTR [esi+44]
  002df	80 7c 07 18 00	 cmp	 BYTE PTR [edi+eax+24], 0
  002e4	8b 45 f0	 mov	 eax, DWORD PTR tv1978[ebp]
  002e7	0f b7 40 0e	 movzx	 eax, WORD PTR [eax+14]
  002eb	66 89 04 4e	 mov	 WORD PTR [esi+ecx*2], ax
  002ef	8b 75 f8	 mov	 esi, DWORD PTR _this$1$[ebp]
  002f2	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  002f5	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  002f8	8b 44 07 0c	 mov	 eax, DWORD PTR [edi+eax+12]
  002fc	0f b7 40 0e	 movzx	 eax, WORD PTR [eax+14]
  00300	66 89 44 51 02	 mov	 WORD PTR [ecx+edx*2+2], ax
  00305	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00308	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  0030b	74 3c		 je	 SHORT $LN17@GenerateMe
; Line 779
  0030d	8b 44 07 08	 mov	 eax, DWORD PTR [edi+eax+8]
  00311	0f b7 40 0e	 movzx	 eax, WORD PTR [eax+14]
  00315	66 89 44 51 04	 mov	 WORD PTR [ecx+edx*2+4], ax
; Line 780
  0031a	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0031d	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00320	8b 44 07 10	 mov	 eax, DWORD PTR [edi+eax+16]
  00324	0f b7 40 0e	 movzx	 eax, WORD PTR [eax+14]
  00328	66 89 44 51 06	 mov	 WORD PTR [ecx+edx*2+6], ax
; Line 781
  0032d	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00330	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00333	8b 44 07 08	 mov	 eax, DWORD PTR [edi+eax+8]
  00337	0f b7 40 0e	 movzx	 eax, WORD PTR [eax+14]
  0033b	66 89 44 51 08	 mov	 WORD PTR [ecx+edx*2+8], ax
; Line 782
  00340	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00343	8b 44 07 0c	 mov	 eax, DWORD PTR [edi+eax+12]
; Line 783
  00347	eb 3a		 jmp	 SHORT $LN43@GenerateMe
$LN17@GenerateMe:
; Line 786
  00349	8b 44 07 10	 mov	 eax, DWORD PTR [edi+eax+16]
  0034d	0f b7 40 0e	 movzx	 eax, WORD PTR [eax+14]
  00351	66 89 44 51 04	 mov	 WORD PTR [ecx+edx*2+4], ax
; Line 787
  00356	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00359	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  0035c	8b 44 07 04	 mov	 eax, DWORD PTR [edi+eax+4]
  00360	0f b7 40 0e	 movzx	 eax, WORD PTR [eax+14]
  00364	66 89 44 51 06	 mov	 WORD PTR [ecx+edx*2+6], ax
; Line 788
  00369	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0036c	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  0036f	8b 44 07 10	 mov	 eax, DWORD PTR [edi+eax+16]
  00373	0f b7 40 0e	 movzx	 eax, WORD PTR [eax+14]
  00377	66 89 44 51 08	 mov	 WORD PTR [ecx+edx*2+8], ax
; Line 789
  0037c	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0037f	8b 44 07 08	 mov	 eax, DWORD PTR [edi+eax+8]
$LN43@GenerateMe:
; Line 774
  00383	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00386	0f b7 40 0e	 movzx	 eax, WORD PTR [eax+14]
  0038a	66 89 44 51 0a	 mov	 WORD PTR [ecx+edx*2+10], ax
  0038f	83 c2 06	 add	 edx, 6
$LN5@GenerateMe:
  00392	0f b7 46 38	 movzx	 eax, WORD PTR [esi+56]
  00396	43		 inc	 ebx
  00397	83 c7 1c	 add	 edi, 28			; 0000001cH
  0039a	3b d8		 cmp	 ebx, eax
  0039c	0f 82 1e ff ff
	ff		 jb	 $LL7@GenerateMe
$LN6@GenerateMe:
; Line 793
  003a2	89 56 24	 mov	 DWORD PTR [esi+36], edx
; Line 796
  003a5	c6 46 31 00	 mov	 BYTE PTR [esi+49], 0
$LN41@GenerateMe:
  003a9	5f		 pop	 edi
  003aa	5b		 pop	 ebx
$LN15@GenerateMe:
  003ab	5e		 pop	 esi
; Line 799
  003ac	8b e5		 mov	 esp, ebp
  003ae	5d		 pop	 ebp
  003af	c3		 ret	 0
?GenerateMeshData@BT_QuadMap@@QAEXXZ ENDP		; BT_QuadMap::GenerateMeshData
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?CalculateBounds@BT_QuadMap@@QAEXXZ
_TEXT	SEGMENT
?CalculateBounds@BT_QuadMap@@QAEXXZ PROC		; BT_QuadMap::CalculateBounds, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 475
  00000	8b d1		 mov	 edx, ecx
; Line 480
  00002	b9 01 00 00 00	 mov	 ecx, 1
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b c1		 mov	 eax, ecx
  0000b	8b 72 14	 mov	 esi, DWORD PTR [edx+20]
  0000e	0f b7 7a 36	 movzx	 edi, WORD PTR [edx+54]
  00012	f3 0f 10 4e 04	 movss	 xmm1, DWORD PTR [esi+4]
  00017	f3 0f 11 4a 4c	 movss	 DWORD PTR [edx+76], xmm1
  0001c	f3 0f 11 4a 48	 movss	 DWORD PTR [edx+72], xmm1
  00021	66 3b c7	 cmp	 ax, di
  00024	77 3f		 ja	 SHORT $LN3@CalculateB
; Line 482
  00026	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@461c4000
  0002e	0f 28 d1	 movaps	 xmm2, xmm1
$LL4@CalculateB:
  00031	0f b7 c1	 movzx	 eax, cx
  00034	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00037	f3 0f 10 44 86
	04		 movss	 xmm0, DWORD PTR [esi+eax*4+4]
  0003d	0f 2f c1	 comiss	 xmm0, xmm1
  00040	76 0a		 jbe	 SHORT $LN5@CalculateB
; Line 483
  00042	c7 42 48 00 40
	1c 46		 mov	 DWORD PTR [edx+72], 1176256512 ; 461c4000H
  00049	0f 28 cb	 movaps	 xmm1, xmm3
$LN5@CalculateB:
; Line 487
  0004c	f3 0f 10 44 86
	04		 movss	 xmm0, DWORD PTR [esi+eax*4+4]
  00052	0f 2f d0	 comiss	 xmm2, xmm0
  00055	76 08		 jbe	 SHORT $LN2@CalculateB
; Line 488
  00057	f3 0f 11 42 4c	 movss	 DWORD PTR [edx+76], xmm0
  0005c	0f 28 d0	 movaps	 xmm2, xmm0
$LN2@CalculateB:
; Line 480
  0005f	41		 inc	 ecx
  00060	66 3b cf	 cmp	 cx, di
  00063	76 cc		 jbe	 SHORT $LL4@CalculateB
$LN3@CalculateB:
  00065	5f		 pop	 edi
; Line 491
  00066	5e		 pop	 esi
  00067	c3		 ret	 0
?CalculateBounds@BT_QuadMap@@QAEXXZ ENDP		; BT_QuadMap::CalculateBounds
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?CalculateNormals@BT_QuadMap@@QAEXXZ
_TEXT	SEGMENT
_leftY$1 = -20						; size = 4
_topY$2 = -16						; size = 4
_belowY$3 = -12						; size = 4
_x$1$ = -8						; size = 4
_rightY$4 = -8						; size = 4
_y$1$ = -4						; size = 4
?CalculateNormals@BT_QuadMap@@QAEXXZ PROC		; BT_QuadMap::CalculateNormals, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 406
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	53		 push	 ebx
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
; Line 408
  0000a	33 db		 xor	 ebx, ebx
  0000c	0f b6 47 45	 movzx	 eax, BYTE PTR [edi+69]
  00010	40		 inc	 eax
  00011	0f af c0	 imul	 eax, eax
  00014	85 c0		 test	 eax, eax
  00016	0f 84 27 02 00
	00		 je	 $LN3@CalculateN
  0001c	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  00024	33 c9		 xor	 ecx, ecx
  00026	56		 push	 esi
  00027	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL4@CalculateN:
; Line 411
  00030	f3 0f 10 47 3c	 movss	 xmm0, DWORD PTR [edi+60]
  00035	8d 34 89	 lea	 esi, DWORD PTR [ecx+ecx*4]
  00038	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0003b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00043	8b 57 54	 mov	 edx, DWORD PTR [edi+84]
; Line 415
  00046	6a 01		 push	 1
  00048	0f b6 44 b1 09	 movzx	 eax, BYTE PTR [ecx+esi*4+9]
  0004d	66 0f 6e d8	 movd	 xmm3, eax
  00051	0f b6 44 b1 08	 movzx	 eax, BYTE PTR [ecx+esi*4+8]
  00056	0f 5b db	 cvtdq2ps xmm3, xmm3
  00059	66 0f 6e d0	 movd	 xmm2, eax
  0005d	f3 0f 59 5f 40	 mulss	 xmm3, DWORD PTR [edi+64]
  00062	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  00065	0f 5b d2	 cvtdq2ps xmm2, xmm2
  00068	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  0006b	50		 push	 eax
  0006c	f3 0f 5c d8	 subss	 xmm3, xmm0
  00070	83 ec 08	 sub	 esp, 8
  00073	f3 0f 59 57 40	 mulss	 xmm2, DWORD PTR [edi+64]
  00078	f3 0f 58 5a 0c	 addss	 xmm3, DWORD PTR [edx+12]
  0007d	f3 0f 5c d0	 subss	 xmm2, xmm0
  00081	f3 0f 11 5d f8	 movss	 DWORD PTR _x$1$[ebp], xmm3
  00086	f3 0f 58 52 14	 addss	 xmm2, DWORD PTR [edx+20]
  0008b	0f 28 c2	 movaps	 xmm0, xmm2
  0008e	f3 0f 11 55 fc	 movss	 DWORD PTR _y$1$[ebp], xmm2
  00093	f3 0f 5c c4	 subss	 xmm0, xmm4
  00097	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0009d	f3 0f 11 1c 24	 movss	 DWORD PTR [esp], xmm3
  000a2	ff 72 64	 push	 DWORD PTR [edx+100]
  000a5	e8 00 00 00 00	 call	 ?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z ; BT_Intern_GetPointHeight
; Line 416
  000aa	8b 4f 54	 mov	 ecx, DWORD PTR [edi+84]
  000ad	83 c4 14	 add	 esp, 20			; 00000014H
  000b0	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _y$1$[ebp]
  000b5	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  000bd	d9 5d f0	 fstp	 DWORD PTR _topY$2[ebp]
  000c0	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]
  000c3	6a 01		 push	 1
  000c5	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  000c8	50		 push	 eax
  000c9	83 ec 08	 sub	 esp, 8
  000cc	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000d2	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$1$[ebp]
  000d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000dc	ff 71 64	 push	 DWORD PTR [ecx+100]
  000df	e8 00 00 00 00	 call	 ?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z ; BT_Intern_GetPointHeight
; Line 417
  000e4	8b 4f 54	 mov	 ecx, DWORD PTR [edi+84]
  000e7	83 c4 14	 add	 esp, 20			; 00000014H
  000ea	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _y$1$[ebp]
  000ef	d9 5d f4	 fstp	 DWORD PTR _belowY$3[ebp]
  000f2	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]
  000f5	6a 01		 push	 1
  000f7	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  000fa	50		 push	 eax
  000fb	83 ec 08	 sub	 esp, 8
  000fe	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00104	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$1$[ebp]
  00109	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00111	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00116	ff 71 64	 push	 DWORD PTR [ecx+100]
  00119	e8 00 00 00 00	 call	 ?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z ; BT_Intern_GetPointHeight
; Line 418
  0011e	8b 4f 54	 mov	 ecx, DWORD PTR [edi+84]
  00121	83 c4 14	 add	 esp, 20			; 00000014H
  00124	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _y$1$[ebp]
  00129	d9 5d ec	 fstp	 DWORD PTR _leftY$1[ebp]
  0012c	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]
  0012f	6a 01		 push	 1
  00131	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  00134	50		 push	 eax
  00135	83 ec 08	 sub	 esp, 8
  00138	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0013e	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$1$[ebp]
  00143	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  0014b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00150	ff 71 64	 push	 DWORD PTR [ecx+100]
  00153	e8 00 00 00 00	 call	 ?BT_Intern_GetPointHeight@@YAMPAUs_BT_terrain@@MMD_N@Z ; BT_Intern_GetPointHeight
; Line 439
  00158	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@3f800000
  00160	83 c4 14	 add	 esp, 20			; 00000014H
; Line 441
  00163	8b 47 54	 mov	 eax, DWORD PTR [edi+84]
  00166	0f 28 cc	 movaps	 xmm1, xmm4
  00169	f3 0f 5e 4f 40	 divss	 xmm1, DWORD PTR [edi+64]
  0016e	d9 5d f8	 fstp	 DWORD PTR _rightY$4[ebp]
  00171	8b 40 64	 mov	 eax, DWORD PTR [eax+100]
  00174	0f 28 c4	 movaps	 xmm0, xmm4
  00177	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR _rightY$4[ebp]
  0017c	43		 inc	 ebx
  0017d	f3 0f 10 5d f4	 movss	 xmm3, DWORD PTR _belowY$3[ebp]
  00182	f3 0f 5c 55 ec	 subss	 xmm2, DWORD PTR _leftY$1[ebp]
  00187	f3 0f 5e 40 34	 divss	 xmm0, DWORD PTR [eax+52]
; Line 444
  0018c	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  0018f	f3 0f 5c 5d f0	 subss	 xmm3, DWORD PTR _topY$2[ebp]
  00194	f3 0f 59 d1	 mulss	 xmm2, xmm1
  00198	f3 0f 59 d9	 mulss	 xmm3, xmm1
  0019c	f3 0f 59 d0	 mulss	 xmm2, xmm0
  001a0	f3 0f 59 d8	 mulss	 xmm3, xmm0
  001a4	0f 28 ca	 movaps	 xmm1, xmm2
  001a7	f3 0f 59 ca	 mulss	 xmm1, xmm2
  001ab	0f 28 c3	 movaps	 xmm0, xmm3
  001ae	f3 0f 59 c3	 mulss	 xmm0, xmm3
  001b2	f3 0f 58 c8	 addss	 xmm1, xmm0
  001b6	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@46800000
  001be	f3 0f 58 cc	 addss	 xmm1, xmm4
  001c2	0f 5a c1	 cvtps2pd xmm0, xmm1
  001c5	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  001cd	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  001d1	f2 0f 5e c8	 divsd	 xmm1, xmm0
  001d5	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  001d9	0f 28 c1	 movaps	 xmm0, xmm1
  001dc	f3 0f 59 c2	 mulss	 xmm0, xmm2
  001e0	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@405fc00000000000
  001e8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@c3000000
  001f0	0f 5a c0	 cvtps2pd xmm0, xmm0
  001f3	f2 0f 59 c2	 mulsd	 xmm0, xmm2
  001f7	f2 0f 2c c8	 cvttsd2si ecx, xmm0
; Line 445
  001fb	0f 5a c1	 cvtps2pd xmm0, xmm1
  001fe	88 4c b0 0a	 mov	 BYTE PTR [eax+esi*4+10], cl
  00202	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
; Line 446
  00205	f3 0f 59 cb	 mulss	 xmm1, xmm3
  00209	f2 0f 59 c2	 mulsd	 xmm0, xmm2
  0020d	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@c3000000
  00215	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  00219	0f 5a c1	 cvtps2pd xmm0, xmm1
  0021c	88 4c b0 0b	 mov	 BYTE PTR [eax+esi*4+11], cl
  00220	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00223	f2 0f 59 c2	 mulsd	 xmm0, xmm2
  00227	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  0022b	88 4c b0 0c	 mov	 BYTE PTR [eax+esi*4+12], cl
  0022f	0f b6 47 45	 movzx	 eax, BYTE PTR [edi+69]
  00233	40		 inc	 eax
  00234	0f b7 cb	 movzx	 ecx, bx
  00237	0f af c0	 imul	 eax, eax
  0023a	3b c8		 cmp	 ecx, eax
  0023c	0f 82 ee fd ff
	ff		 jb	 $LL4@CalculateN
; Line 408
  00242	5e		 pop	 esi
$LN3@CalculateN:
  00243	5f		 pop	 edi
; Line 472
  00244	5b		 pop	 ebx
  00245	8b e5		 mov	 esp, ebp
  00247	5d		 pop	 ebp
  00248	c3		 ret	 0
?CalculateNormals@BT_QuadMap@@QAEXXZ ENDP		; BT_QuadMap::CalculateNormals
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?Generate@BT_QuadMap@@QAEXUBT_Quadmap_Generator@@@Z
_TEXT	SEGMENT
tv3057 = -68						; size = 4
_TwoPowerLevelSquared$1$ = -64				; size = 4
tv3225 = -64						; size = 4
tv2982 = -64						; size = 4
$T1 = -60						; size = 4
tv3182 = -60						; size = 4
tv3120 = -60						; size = 4
_TL$1$ = -56						; size = 4
tv2959 = -56						; size = 4
tv3086 = -52						; size = 4
$T2 = -48						; size = 4
_Vertexn$3$ = -48					; size = 4
tv3221 = -48						; size = 4
tv3183 = -48						; size = 4
tv3175 = -48						; size = 4
tv3073 = -48						; size = 4
tv2870 = -48						; size = 4
tv2846 = -48						; size = 4
tv2835 = -48						; size = 4
_Quadn$3$ = -44						; size = 4
_Quadn$2$ = -44						; size = 4
tv3211 = -44						; size = 4
tv3196 = -44						; size = 4
tv3179 = -44						; size = 4
tv3174 = -44						; size = 4
tv3106 = -44						; size = 4
tv3079 = -44						; size = 4
_BL$1$ = -40						; size = 4
$T3 = -40						; size = 4
_QuadSize$1$ = -40					; size = 4
tv3150 = -40						; size = 4
tv2874 = -40						; size = 4
_CurrVertex$1$ = -36					; size = 4
_TwoPowerLevel$1$ = -36					; size = 4
_Quadn$4$ = -36						; size = 4
_Quadn$1$ = -36						; size = 4
$T4 = -36						; size = 4
tv3173 = -36						; size = 4
tv3144 = -36						; size = 4
_IncVertices$1$ = -32					; size = 4
$T5 = -32						; size = 4
tv3117 = -32						; size = 4
tv3110 = -32						; size = 4
_TempQuad$1$ = -28					; size = 4
$T6 = -24						; size = 4
_Vertexn$1$ = -24					; size = 4
tv3178 = -24						; size = 4
tv3014 = -24						; size = 4
_IncQuads$1$ = -20					; size = 4
_VertexMap$1$ = -20					; size = 4
_CurrQuad$1$ = -16					; size = 4
_this$1$ = -16						; size = 4
tv2995 = -16						; size = 4
tv3198 = -12						; size = 4
tv3099 = -12						; size = 4
tv3087 = -12						; size = 4
_TempVertex$1$ = -8					; size = 4
tv3229 = -2						; size = 1
tv3168 = -2						; size = 1
_Level$1$ = -1						; size = 1
_i$1$ = -1						; size = 1
_i$1$ = -1						; size = 1
_i$1$ = -1						; size = 1
_i$1$ = -1						; size = 1
tv3107 = -1						; size = 1
_Generator$ = 8						; size = 36
?Generate@BT_QuadMap@@QAEXUBT_Quadmap_Generator@@@Z PROC ; BT_QuadMap::Generate, COMDAT
; _this$ = ecx
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 49
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
; Line 68
  0000a	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _Generator$[ebp+4]
  0000f	8a 4d 10	 mov	 cl, BYTE PTR _Generator$[ebp+8]
  00012	0f b6 d1	 movzx	 edx, cl
  00015	89 7d f0	 mov	 DWORD PTR _this$1$[ebp], edi
; Line 70
  00018	88 4f 45	 mov	 BYTE PTR [edi+69], cl
; Line 74
  0001b	f3 0f 11 4f 40	 movss	 DWORD PTR [edi+64], xmm1
  00020	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  00023	0f af d2	 imul	 edx, edx
  00026	0f af c0	 imul	 eax, eax
  00029	66 89 57 38	 mov	 WORD PTR [edi+56], dx
  0002d	66 89 47 36	 mov	 WORD PTR [edi+54], ax
  00031	8b 45 1c	 mov	 eax, DWORD PTR _Generator$[ebp+20]
  00034	c1 e8 08	 shr	 eax, 8
  00037	88 47 50	 mov	 BYTE PTR [edi+80], al
  0003a	0f b6 c1	 movzx	 eax, cl
  0003d	89 45 f4	 mov	 DWORD PTR tv3198[ebp], eax
  00040	66 0f 6e c0	 movd	 xmm0, eax
  00044	8b 45 20	 mov	 eax, DWORD PTR _Generator$[ebp+24]
  00047	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0004a	89 47 54	 mov	 DWORD PTR [edi+84], eax
  0004d	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00051	f3 0f 11 47 3c	 movss	 DWORD PTR [edi+60], xmm0
; Line 77
  00056	a1 40 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29760
  0005b	89 45 f8	 mov	 DWORD PTR _TempVertex$1$[ebp], eax
; Line 78
  0005e	a1 44 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29764
  00063	89 45 e4	 mov	 DWORD PTR _TempQuad$1$[ebp], eax
; Line 79
  00066	a1 48 74 00 00	 mov	 eax, DWORD PTR ?BT_Main@@3Us_BT_main@@A+29768
  0006b	89 45 ec	 mov	 DWORD PTR _VertexMap$1$[ebp], eax
; Line 82
  0006e	0f b7 c2	 movzx	 eax, dx
  00071	c1 e0 02	 shl	 eax, 2
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 _malloc
  0007a	83 c4 04	 add	 esp, 4
  0007d	89 47 1c	 mov	 DWORD PTR [edi+28], eax
; Line 83
  00080	85 c0		 test	 eax, eax
  00082	75 0a		 jne	 SHORT $LN43@Generate
; Line 84
  00084	6a 1b		 push	 27			; 0000001bH
  00086	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  0008b	83 c4 04	 add	 esp, 4
$LN43@Generate:
; Line 90
  0008e	8a 75 10	 mov	 dh, BYTE PTR _Generator$[ebp+8]
  00091	33 f6		 xor	 esi, esi
  00093	32 c9		 xor	 cl, cl
  00095	89 75 e8	 mov	 DWORD PTR _Vertexn$1$[ebp], esi
  00098	88 4d ff	 mov	 BYTE PTR _i$1$[ebp], cl
  0009b	84 f6		 test	 dh, dh
  0009d	74 5a		 je	 SHORT $LN3@Generate
; Line 87
  0009f	8b 7d f8	 mov	 edi, DWORD PTR _TempVertex$1$[ebp]
  000a2	89 75 e0	 mov	 DWORD PTR tv3117[ebp], esi
$LL4@Generate:
; Line 96
  000a5	0f b7 c6	 movzx	 eax, si
  000a8	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  000ab	8d 14 87	 lea	 edx, DWORD PTR [edi+eax*4]
  000ae	8b 45 ec	 mov	 eax, DWORD PTR _VertexMap$1$[ebp]
  000b1	8b 7d e0	 mov	 edi, DWORD PTR tv3117[ebp]
  000b4	83 45 e0 04	 add	 DWORD PTR tv3117[ebp], 4
  000b8	8b 00		 mov	 eax, DWORD PTR [eax]
  000ba	89 14 07	 mov	 DWORD PTR [edi+eax], edx
  000bd	8b 7d f8	 mov	 edi, DWORD PTR _TempVertex$1$[ebp]
; Line 100
  000c0	0f b6 c1	 movzx	 eax, cl
  000c3	8b 4d 1c	 mov	 ecx, DWORD PTR _Generator$[ebp+20]
  000c6	0f b6 c9	 movzx	 ecx, cl
  000c9	0f af c8	 imul	 ecx, eax
; Line 103
  000cc	c6 42 08 00	 mov	 BYTE PTR [edx+8], 0
; Line 104
  000d0	88 4a 09	 mov	 BYTE PTR [edx+9], cl
; Line 105
  000d3	0f b6 c1	 movzx	 eax, cl
  000d6	8b 4d 14	 mov	 ecx, DWORD PTR _Generator$[ebp+12]
  000d9	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  000dc	8a 4d ff	 mov	 cl, BYTE PTR _i$1$[ebp]
; Line 108
  000df	66 89 72 0e	 mov	 WORD PTR [edx+14], si
  000e3	fe c1		 inc	 cl
  000e5	89 42 04	 mov	 DWORD PTR [edx+4], eax
; Line 110
  000e8	46		 inc	 esi
  000e9	8a 75 10	 mov	 dh, BYTE PTR _Generator$[ebp+8]
  000ec	88 4d ff	 mov	 BYTE PTR _i$1$[ebp], cl
  000ef	3a ce		 cmp	 cl, dh
  000f1	72 b2		 jb	 SHORT $LL4@Generate
  000f3	8b 7d f0	 mov	 edi, DWORD PTR _this$1$[ebp]
  000f6	89 75 e8	 mov	 DWORD PTR _Vertexn$1$[ebp], esi
$LN3@Generate:
; Line 114
  000f9	c6 45 ff 00	 mov	 BYTE PTR _i$1$[ebp], 0
  000fd	84 f6		 test	 dh, dh
  000ff	74 7f		 je	 SHORT $LN147@Generate
  00101	8b 4d 1c	 mov	 ecx, DWORD PTR _Generator$[ebp+20]
  00104	8b 7d f8	 mov	 edi, DWORD PTR _TempVertex$1$[ebp]
  00107	0f b6 c6	 movzx	 eax, dh
  0010a	0f b6 d1	 movzx	 edx, cl
  0010d	0f af d0	 imul	 edx, eax
  00110	0f b6 c2	 movzx	 eax, dl
  00113	89 45 d4	 mov	 DWORD PTR tv3179[ebp], eax
  00116	8b 45 ec	 mov	 eax, DWORD PTR _VertexMap$1$[ebp]
  00119	89 55 d0	 mov	 DWORD PTR tv2835[ebp], edx
  0011c	89 45 e0	 mov	 DWORD PTR tv3110[ebp], eax
  0011f	90		 npad	 1
$LL7@Generate:
; Line 120
  00120	0f b7 c6	 movzx	 eax, si
  00123	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00126	8d 14 87	 lea	 edx, DWORD PTR [edi+eax*4]
  00129	8b 45 e0	 mov	 eax, DWORD PTR tv3110[ebp]
  0012c	8b 7d f4	 mov	 edi, DWORD PTR tv3198[ebp]
  0012f	83 45 e0 04	 add	 DWORD PTR tv3110[ebp], 4
  00133	8b 00		 mov	 eax, DWORD PTR [eax]
  00135	89 14 b8	 mov	 DWORD PTR [eax+edi*4], edx
; Line 123
  00138	0f b6 c1	 movzx	 eax, cl
  0013b	0f b6 4d ff	 movzx	 ecx, BYTE PTR _i$1$[ebp]
  0013f	0f af c8	 imul	 ecx, eax
; Line 128
  00142	8b 45 d0	 mov	 eax, DWORD PTR tv2835[ebp]
  00145	88 42 09	 mov	 BYTE PTR [edx+9], al
  00148	88 4a 08	 mov	 BYTE PTR [edx+8], cl
; Line 129
  0014b	0f b6 c1	 movzx	 eax, cl
  0014e	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
  00151	8b 7d f8	 mov	 edi, DWORD PTR _TempVertex$1$[ebp]
  00154	0f af c1	 imul	 eax, ecx
  00157	8b 4d 14	 mov	 ecx, DWORD PTR _Generator$[ebp+12]
  0015a	03 45 d4	 add	 eax, DWORD PTR tv3179[ebp]
  0015d	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  00160	8b 4d 1c	 mov	 ecx, DWORD PTR _Generator$[ebp+20]
  00163	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00166	8a 45 ff	 mov	 al, BYTE PTR _i$1$[ebp]
; Line 132
  00169	66 89 72 0e	 mov	 WORD PTR [edx+14], si
  0016d	fe c0		 inc	 al
  0016f	8a 75 10	 mov	 dh, BYTE PTR _Generator$[ebp+8]
; Line 134
  00172	46		 inc	 esi
  00173	88 45 ff	 mov	 BYTE PTR _i$1$[ebp], al
  00176	3a c6		 cmp	 al, dh
  00178	72 a6		 jb	 SHORT $LL7@Generate
  0017a	8b 7d f0	 mov	 edi, DWORD PTR _this$1$[ebp]
  0017d	89 75 e8	 mov	 DWORD PTR _Vertexn$1$[ebp], esi
$LN147@Generate:
; Line 138
  00180	c6 45 ff 00	 mov	 BYTE PTR _i$1$[ebp], 0
  00184	84 f6		 test	 dh, dh
  00186	0f 84 83 00 00
	00		 je	 $LN9@Generate
  0018c	8b 4d 1c	 mov	 ecx, DWORD PTR _Generator$[ebp+20]
  0018f	8b 7d f4	 mov	 edi, DWORD PTR tv3198[ebp]
  00192	0f b6 c6	 movzx	 eax, dh
  00195	47		 inc	 edi
  00196	0f b6 c9	 movzx	 ecx, cl
  00199	0f af c8	 imul	 ecx, eax
  0019c	0f b6 c1	 movzx	 eax, cl
  0019f	0f af f8	 imul	 edi, eax
  001a2	8a 45 ff	 mov	 al, BYTE PTR _i$1$[ebp]
  001a5	89 4d d0	 mov	 DWORD PTR tv2846[ebp], ecx
  001a8	89 7d d4	 mov	 DWORD PTR tv3174[ebp], edi
  001ab	8b 7d f8	 mov	 edi, DWORD PTR _TempVertex$1$[ebp]
  001ae	66 90		 npad	 2
$LL10@Generate:
; Line 142
  001b0	8a d6		 mov	 dl, dh
  001b2	2a d0		 sub	 dl, al
; Line 145
  001b4	0f b7 c6	 movzx	 eax, si
  001b7	0f b6 ca	 movzx	 ecx, dl
  001ba	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  001bd	8d 34 87	 lea	 esi, DWORD PTR [edi+eax*4]
  001c0	8b 7d f4	 mov	 edi, DWORD PTR tv3198[ebp]
  001c3	8b 45 ec	 mov	 eax, DWORD PTR _VertexMap$1$[ebp]
  001c6	8b 04 b8	 mov	 eax, DWORD PTR [eax+edi*4]
  001c9	8b 7d f8	 mov	 edi, DWORD PTR _TempVertex$1$[ebp]
  001cc	89 34 88	 mov	 DWORD PTR [eax+ecx*4], esi
; Line 149
  001cf	8b 4d 1c	 mov	 ecx, DWORD PTR _Generator$[ebp+20]
  001d2	0f b6 c2	 movzx	 eax, dl
  001d5	0f b6 c9	 movzx	 ecx, cl
  001d8	0f af c8	 imul	 ecx, eax
; Line 152
  001db	8b 45 d0	 mov	 eax, DWORD PTR tv2846[ebp]
  001de	88 46 08	 mov	 BYTE PTR [esi+8], al
; Line 153
  001e1	88 4e 09	 mov	 BYTE PTR [esi+9], cl
; Line 154
  001e4	0f b6 c1	 movzx	 eax, cl
  001e7	03 45 d4	 add	 eax, DWORD PTR tv3174[ebp]
  001ea	8b 4d 14	 mov	 ecx, DWORD PTR _Generator$[ebp+12]
  001ed	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  001f0	89 46 04	 mov	 DWORD PTR [esi+4], eax
; Line 157
  001f3	8b 45 e8	 mov	 eax, DWORD PTR _Vertexn$1$[ebp]
  001f6	66 89 46 0e	 mov	 WORD PTR [esi+14], ax
; Line 159
  001fa	8b f0		 mov	 esi, eax
  001fc	8a 45 ff	 mov	 al, BYTE PTR _i$1$[ebp]
  001ff	46		 inc	 esi
  00200	fe c0		 inc	 al
  00202	89 75 e8	 mov	 DWORD PTR _Vertexn$1$[ebp], esi
  00205	88 45 ff	 mov	 BYTE PTR _i$1$[ebp], al
  00208	3a c6		 cmp	 al, dh
  0020a	72 a4		 jb	 SHORT $LL10@Generate
  0020c	8b 7d f0	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN9@Generate:
; Line 163
  0020f	32 c0		 xor	 al, al
  00211	88 45 ff	 mov	 BYTE PTR _i$1$[ebp], al
  00214	84 f6		 test	 dh, dh
  00216	74 5f		 je	 SHORT $LN12@Generate
  00218	8b 4d f4	 mov	 ecx, DWORD PTR tv3198[ebp]
  0021b	8b 7d f8	 mov	 edi, DWORD PTR _TempVertex$1$[ebp]
  0021e	41		 inc	 ecx
  0021f	89 4d d0	 mov	 DWORD PTR tv3175[ebp], ecx
$LL13@Generate:
; Line 165
  00222	8a ce		 mov	 cl, dh
  00224	2a c8		 sub	 cl, al
; Line 169
  00226	0f b7 c6	 movzx	 eax, si
  00229	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0022c	8d 14 87	 lea	 edx, DWORD PTR [edi+eax*4]
  0022f	8b 7d ec	 mov	 edi, DWORD PTR _VertexMap$1$[ebp]
  00232	0f b6 c1	 movzx	 eax, cl
  00235	8b 04 87	 mov	 eax, DWORD PTR [edi+eax*4]
  00238	8b 7d f8	 mov	 edi, DWORD PTR _TempVertex$1$[ebp]
  0023b	89 10		 mov	 DWORD PTR [eax], edx
; Line 172
  0023d	0f b6 c1	 movzx	 eax, cl
  00240	8b 4d 1c	 mov	 ecx, DWORD PTR _Generator$[ebp+20]
  00243	0f b6 c9	 movzx	 ecx, cl
  00246	0f af c8	 imul	 ecx, eax
; Line 177
  00249	c6 42 09 00	 mov	 BYTE PTR [edx+9], 0
; Line 178
  0024d	0f b6 c1	 movzx	 eax, cl
  00250	0f af 45 d0	 imul	 eax, DWORD PTR tv3175[ebp]
  00254	88 4a 08	 mov	 BYTE PTR [edx+8], cl
  00257	8b 4d 14	 mov	 ecx, DWORD PTR _Generator$[ebp+12]
  0025a	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  0025d	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00260	8a 45 ff	 mov	 al, BYTE PTR _i$1$[ebp]
; Line 181
  00263	66 89 72 0e	 mov	 WORD PTR [edx+14], si
  00267	fe c0		 inc	 al
  00269	8a 75 10	 mov	 dh, BYTE PTR _Generator$[ebp+8]
; Line 183
  0026c	46		 inc	 esi
  0026d	88 45 ff	 mov	 BYTE PTR _i$1$[ebp], al
  00270	3a c6		 cmp	 al, dh
  00272	72 ae		 jb	 SHORT $LL13@Generate
  00274	8b 7d f0	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN12@Generate:
; Line 187
  00277	8b 55 f4	 mov	 edx, DWORD PTR tv3198[ebp]
  0027a	0f b7 f6	 movzx	 esi, si
  0027d	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  00280	85 c0		 test	 eax, eax
  00282	0f 84 ab 00 00
	00		 je	 $LN15@Generate
  00288	b1 01		 mov	 cl, 1
  0028a	8b fe		 mov	 edi, esi
  0028c	88 4d fe	 mov	 BYTE PTR tv3229[ebp], cl
$LN149@Generate:
; Line 188
  0028f	0f b6 c1	 movzx	 eax, cl
  00292	42		 inc	 edx
  00293	89 45 d0	 mov	 DWORD PTR tv2870[ebp], eax
  00296	8b 45 1c	 mov	 eax, DWORD PTR _Generator$[ebp+20]
  00299	0f b6 c0	 movzx	 eax, al
  0029c	0f b6 c9	 movzx	 ecx, cl
  0029f	0f af c8	 imul	 ecx, eax
  002a2	0f b6 c1	 movzx	 eax, cl
  002a5	0f af d0	 imul	 edx, eax
  002a8	89 4d d8	 mov	 DWORD PTR tv2874[ebp], ecx
  002ab	b1 01		 mov	 cl, 1
  002ad	88 4d ff	 mov	 BYTE PTR tv3107[ebp], cl
  002b0	89 55 dc	 mov	 DWORD PTR tv3173[ebp], edx
$LL19@Generate:
; Line 194
  002b3	8b 55 f8	 mov	 edx, DWORD PTR _TempVertex$1$[ebp]
  002b6	0f b6 f1	 movzx	 esi, cl
  002b9	0f b7 c7	 movzx	 eax, di
  002bc	89 75 d4	 mov	 DWORD PTR tv3106[ebp], esi
  002bf	8b 75 d0	 mov	 esi, DWORD PTR tv2870[ebp]
; Line 198
  002c2	0f b6 c9	 movzx	 ecx, cl
  002c5	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  002c8	8d 14 82	 lea	 edx, DWORD PTR [edx+eax*4]
  002cb	8b 45 ec	 mov	 eax, DWORD PTR _VertexMap$1$[ebp]
  002ce	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  002d1	8b 75 d4	 mov	 esi, DWORD PTR tv3106[ebp]
  002d4	89 14 b0	 mov	 DWORD PTR [eax+esi*4], edx
  002d7	8b 45 1c	 mov	 eax, DWORD PTR _Generator$[ebp+20]
  002da	0f b6 c0	 movzx	 eax, al
  002dd	0f af c8	 imul	 ecx, eax
; Line 201
  002e0	8b 45 d8	 mov	 eax, DWORD PTR tv2874[ebp]
  002e3	88 42 08	 mov	 BYTE PTR [edx+8], al
; Line 202
  002e6	88 4a 09	 mov	 BYTE PTR [edx+9], cl
; Line 203
  002e9	0f b6 c1	 movzx	 eax, cl
  002ec	03 45 dc	 add	 eax, DWORD PTR tv3173[ebp]
  002ef	8b 4d 14	 mov	 ecx, DWORD PTR _Generator$[ebp+12]
  002f2	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  002f5	8a 4d ff	 mov	 cl, BYTE PTR tv3107[ebp]
  002f8	89 42 04	 mov	 DWORD PTR [edx+4], eax
  002fb	fe c1		 inc	 cl
; Line 206
  002fd	66 89 7a 0e	 mov	 WORD PTR [edx+14], di
; Line 208
  00301	47		 inc	 edi
  00302	8b 55 f4	 mov	 edx, DWORD PTR tv3198[ebp]
  00305	4a		 dec	 edx
  00306	0f b7 c7	 movzx	 eax, di
  00309	89 45 d4	 mov	 DWORD PTR tv3079[ebp], eax
  0030c	88 4d ff	 mov	 BYTE PTR tv3107[ebp], cl
  0030f	3b f2		 cmp	 esi, edx
  00311	72 a0		 jb	 SHORT $LL19@Generate
; Line 187
  00313	8a 4d fe	 mov	 cl, BYTE PTR tv3229[ebp]
  00316	fe c1		 inc	 cl
  00318	0f b7 f8	 movzx	 edi, ax
  0031b	8a c1		 mov	 al, cl
  0031d	88 4d fe	 mov	 BYTE PTR tv3229[ebp], cl
  00320	fe c8		 dec	 al
  00322	0f b6 c0	 movzx	 eax, al
  00325	3b c2		 cmp	 eax, edx
  00327	8b 55 f4	 mov	 edx, DWORD PTR tv3198[ebp]
  0032a	0f 82 5f ff ff
	ff		 jb	 $LN149@Generate
  00330	8b 7d f0	 mov	 edi, DWORD PTR _this$1$[ebp]
$LN15@Generate:
; Line 213
  00333	0f b7 47 38	 movzx	 eax, WORD PTR [edi+56]
  00337	33 d2		 xor	 edx, edx
  00339	33 f6		 xor	 esi, esi
  0033b	89 55 dc	 mov	 DWORD PTR _Quadn$1$[ebp], edx
  0033e	8b c8		 mov	 ecx, eax
  00340	89 4d e8	 mov	 DWORD PTR $T6[ebp], ecx
  00343	66 3b f0	 cmp	 si, ax
  00346	0f 83 7e 01 00
	00		 jae	 $LN151@Generate
; Line 215
  0034c	0f b6 4d 10	 movzx	 ecx, BYTE PTR _Generator$[ebp+8]
  00350	0f b6 45 10	 movzx	 eax, BYTE PTR _Generator$[ebp+8]
  00354	f3 0f 10 35 00
	00 00 00	 movss	 xmm6, DWORD PTR __real@80000000
  0035c	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@4b000000
  00364	f3 0f 10 3d 00
	00 00 00	 movss	 xmm7, DWORD PTR __real@3f800000
  0036c	89 4d d4	 mov	 DWORD PTR tv3196[ebp], ecx
  0036f	89 45 d0	 mov	 DWORD PTR tv3183[ebp], eax
$LL22@Generate:
  00372	0f b7 f2	 movzx	 esi, dx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  00375	0f 28 de	 movaps	 xmm3, xmm6
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 215
  00378	33 d2		 xor	 edx, edx
  0037a	8b c6		 mov	 eax, esi
  0037c	f7 f1		 div	 ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  0037e	0f 28 cd	 movaps	 xmm1, xmm5
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 216
  00381	8b 55 dc	 mov	 edx, DWORD PTR _Quadn$1$[ebp]
  00384	66 0f 6e e0	 movd	 xmm4, eax
  00388	0f 5b e4	 cvtdq2ps xmm4, xmm4
  0038b	0f b6 45 10	 movzx	 eax, BYTE PTR _Generator$[ebp+8]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 672
  0038f	0f 54 dc	 andps	 xmm3, xmm4
  00392	0f 28 c4	 movaps	 xmm0, xmm4
  00395	0f 57 c3	 xorps	 xmm0, xmm3
  00398	0f 28 d4	 movaps	 xmm2, xmm4
  0039b	f3 0f c2 c5 01	 cmpltss xmm0, xmm5
  003a0	0f 54 c8	 andps	 xmm1, xmm0
  003a3	0f 56 cb	 orps	 xmm1, xmm3
  003a6	f3 0f 58 d1	 addss	 xmm2, xmm1
  003aa	f3 0f 5c d1	 subss	 xmm2, xmm1
  003ae	0f 28 c2	 movaps	 xmm0, xmm2
  003b1	f3 0f 5c c4	 subss	 xmm0, xmm4
  003b5	f3 0f c2 c3 06	 cmpnless xmm0, xmm3
  003ba	0f 54 c7	 andps	 xmm0, xmm7
  003bd	f3 0f 5c d0	 subss	 xmm2, xmm0
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 226
  003c1	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _Generator$[ebp+4]
  003c6	f3 0f 2c ca	 cvttss2si ecx, xmm2
  003ca	0f b6 f9	 movzx	 edi, cl
  003cd	0f b6 c9	 movzx	 ecx, cl
  003d0	0f af c8	 imul	 ecx, eax
  003d3	89 7d e8	 mov	 DWORD PTR tv3178[ebp], edi
  003d6	2a d1		 sub	 dl, cl
  003d8	8b 4d ec	 mov	 ecx, DWORD PTR _VertexMap$1$[ebp]
  003db	0f b6 c2	 movzx	 eax, dl
  003de	89 45 f4	 mov	 DWORD PTR tv3099[ebp], eax
  003e1	8d 04 f5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*8]
  003e8	2b c6		 sub	 eax, esi
  003ea	8b 55 f4	 mov	 edx, DWORD PTR tv3099[ebp]
  003ed	8b 75 e4	 mov	 esi, DWORD PTR _TempQuad$1$[ebp]
  003f0	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]
  003f3	89 45 e0	 mov	 DWORD PTR $T5[ebp], eax
  003f6	8b 04 b9	 mov	 eax, DWORD PTR [ecx+edi*4]
  003f9	8b 7d f4	 mov	 edi, DWORD PTR tv3099[ebp]
  003fc	8b 04 b8	 mov	 eax, DWORD PTR [eax+edi*4]
  003ff	8b 7d e0	 mov	 edi, DWORD PTR $T5[ebp]
  00402	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00405	8b 45 e8	 mov	 eax, DWORD PTR tv3178[ebp]
  00408	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  0040b	8b 44 90 04	 mov	 eax, DWORD PTR [eax+edx*4+4]
  0040f	89 47 08	 mov	 DWORD PTR [edi+8], eax
  00412	8b 45 e8	 mov	 eax, DWORD PTR tv3178[ebp]
  00415	8b 44 81 04	 mov	 eax, DWORD PTR [ecx+eax*4+4]
  00419	8b 04 90	 mov	 eax, DWORD PTR [eax+edx*4]
  0041c	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  0041f	8b 45 e8	 mov	 eax, DWORD PTR tv3178[ebp]
  00422	8b 44 81 04	 mov	 eax, DWORD PTR [ecx+eax*4+4]
  00426	8b ca		 mov	 ecx, edx
  00428	8b 44 88 04	 mov	 eax, DWORD PTR [eax+ecx*4+4]
  0042c	8b cf		 mov	 ecx, edi
  0042e	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  00431	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0
; Line 229
  00436	8b 4d 18	 mov	 ecx, DWORD PTR _Generator$[ebp+16]
  00439	85 c9		 test	 ecx, ecx
  0043b	74 33		 je	 SHORT $LN44@Generate
; Line 230
  0043d	8b 7d d0	 mov	 edi, DWORD PTR tv3183[ebp]
  00440	8b 45 e8	 mov	 eax, DWORD PTR tv3178[ebp]
  00443	47		 inc	 edi
  00444	0f af c7	 imul	 eax, edi
  00447	03 c2		 add	 eax, edx
  00449	80 3c 08 00	 cmp	 BYTE PTR [eax+ecx], 0
  0044d	74 21		 je	 SHORT $LN44@Generate
  0044f	80 7c 08 01 00	 cmp	 BYTE PTR [eax+ecx+1], 0
  00454	74 1a		 je	 SHORT $LN44@Generate
  00456	8b 45 e8	 mov	 eax, DWORD PTR tv3178[ebp]
  00459	40		 inc	 eax
  0045a	0f af c7	 imul	 eax, edi
  0045d	03 c2		 add	 eax, edx
  0045f	80 3c 08 00	 cmp	 BYTE PTR [eax+ecx], 0
  00463	74 0b		 je	 SHORT $LN44@Generate
  00465	80 7c 08 01 00	 cmp	 BYTE PTR [eax+ecx+1], 0
  0046a	74 04		 je	 SHORT $LN44@Generate
  0046c	b0 01		 mov	 al, 1
  0046e	eb 02		 jmp	 SHORT $LN65@Generate
$LN44@Generate:
; Line 239
  00470	32 c0		 xor	 al, al
$LN65@Generate:
  00472	80 7d 1d 00	 cmp	 BYTE PTR _Generator$[ebp+21], 0
  00476	8b 4d e0	 mov	 ecx, DWORD PTR $T5[ebp]
  00479	8b 7d f0	 mov	 edi, DWORD PTR _this$1$[ebp]
  0047c	8b 55 dc	 mov	 edx, DWORD PTR _Quadn$1$[ebp]
  0047f	88 01		 mov	 BYTE PTR [ecx], al
  00481	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00484	75 17		 jne	 SHORT $LN46@Generate
; Line 240
  00486	0f b7 ca	 movzx	 ecx, dx
  00489	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00490	2b c1		 sub	 eax, ecx
  00492	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  00495	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]
  00498	89 45 dc	 mov	 DWORD PTR $T4[ebp], eax
; Line 241
  0049b	eb 07		 jmp	 SHORT $LN198@Generate
$LN46@Generate:
; Line 242
  0049d	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR $T4[ebp], 0
$LN198@Generate:
; Line 213
  004a4	0f b7 c2	 movzx	 eax, dx
  004a7	42		 inc	 edx
  004a8	8d 0c 81	 lea	 ecx, DWORD PTR [ecx+eax*4]
  004ab	8b 45 dc	 mov	 eax, DWORD PTR $T4[ebp]
  004ae	89 01		 mov	 DWORD PTR [ecx], eax
  004b0	0f b7 47 38	 movzx	 eax, WORD PTR [edi+56]
  004b4	8b 4d d4	 mov	 ecx, DWORD PTR tv3196[ebp]
  004b7	89 55 dc	 mov	 DWORD PTR _Quadn$1$[ebp], edx
  004ba	66 3b d0	 cmp	 dx, ax
  004bd	0f 82 af fe ff
	ff		 jb	 $LL22@Generate
  004c3	8b c8		 mov	 ecx, eax
  004c5	89 4d e8	 mov	 DWORD PTR $T6[ebp], ecx
  004c8	eb 03		 jmp	 SHORT $LN21@Generate
$LN151@Generate:
  004ca	8b 75 e4	 mov	 esi, DWORD PTR _TempQuad$1$[ebp]
$LN21@Generate:
; Line 252
  004cd	80 7d 09 01	 cmp	 BYTE PTR _Generator$[ebp+1], 1
  004d1	0f b7 47 36	 movzx	 eax, WORD PTR [edi+54]
  004d5	8b d0		 mov	 edx, eax
  004d7	89 45 d0	 mov	 DWORD PTR $T2[ebp], eax
  004da	89 55 e0	 mov	 DWORD PTR _IncVertices$1$[ebp], edx
  004dd	0f b7 d1	 movzx	 edx, cx
  004e0	89 55 ec	 mov	 DWORD PTR _IncQuads$1$[ebp], edx
  004e3	0f b7 d1	 movzx	 edx, cx
  004e6	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv3057[ebp], 1
  004ed	0f 85 70 01 00
	00		 jne	 $LN100@Generate
; Line 253
  004f3	8b 45 e8	 mov	 eax, DWORD PTR $T6[ebp]
  004f6	b1 01		 mov	 cl, 1
$LN199@Generate:
; Line 255
  004f8	0f b7 c0	 movzx	 eax, ax
  004fb	89 45 d8	 mov	 DWORD PTR $T3[ebp], eax
  004fe	b8 01 00 00 00	 mov	 eax, 1
  00503	66 d3 e0	 shl	 ax, cl
  00506	0f b7 d0	 movzx	 edx, ax
  00509	0f b7 c2	 movzx	 eax, dx
  0050c	89 45 cc	 mov	 DWORD PTR tv3086[ebp], eax
; Line 256
  0050f	8b c2		 mov	 eax, edx
  00511	0f af c2	 imul	 eax, edx
  00514	89 55 dc	 mov	 DWORD PTR _TwoPowerLevel$1$[ebp], edx
; Line 257
  00517	8b 55 d8	 mov	 edx, DWORD PTR $T3[ebp]
  0051a	88 4d ff	 mov	 BYTE PTR _Level$1$[ebp], cl
  0051d	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _Quadn$2$[ebp], 0
  00524	0f b7 c0	 movzx	 eax, ax
  00527	89 45 c0	 mov	 DWORD PTR _TwoPowerLevelSquared$1$[ebp], eax
  0052a	0f b7 c0	 movzx	 eax, ax
  0052d	89 45 d0	 mov	 DWORD PTR tv3221[ebp], eax
  00530	0f b7 c2	 movzx	 eax, dx
  00533	89 45 c4	 mov	 DWORD PTR $T1[ebp], eax
  00536	0f b7 c2	 movzx	 eax, dx
  00539	33 d2		 xor	 edx, edx
  0053b	f7 75 d0	 div	 DWORD PTR tv3221[ebp]
  0053e	85 c0		 test	 eax, eax
  00540	0f 8e 03 01 00
	00		 jle	 $LN152@Generate
  00546	8b 45 dc	 mov	 eax, DWORD PTR _TwoPowerLevel$1$[ebp]
  00549	33 c9		 xor	 ecx, ecx
  0054b	0f b7 d0	 movzx	 edx, ax
  0054e	66 d1 e8	 shr	 ax, 1
  00551	89 55 dc	 mov	 DWORD PTR tv3144[ebp], edx
  00554	89 4d d8	 mov	 DWORD PTR tv3150[ebp], ecx
  00557	66 0f 6e c2	 movd	 xmm0, edx
  0055b	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0055e	89 45 f4	 mov	 DWORD PTR tv3087[ebp], eax
  00561	f3 0f 11 45 c4	 movss	 DWORD PTR tv3120[ebp], xmm0
$LL27@Generate:
; Line 259
  00566	8a 47 45	 mov	 al, BYTE PTR [edi+69]
  00569	33 d2		 xor	 edx, edx
  0056b	88 45 fe	 mov	 BYTE PTR tv3168[ebp], al
; Line 269
  0056e	0f 28 c8	 movaps	 xmm1, xmm0
  00571	0f b6 c0	 movzx	 eax, al
  00574	f7 75 dc	 div	 DWORD PTR tv3144[ebp]
  00577	0f b6 7d fe	 movzx	 edi, BYTE PTR tv3168[ebp]
  0057b	8b f0		 mov	 esi, eax
  0057d	8b c1		 mov	 eax, ecx
  0057f	99		 cdq
  00580	f7 fe		 idiv	 esi
  00582	8b 45 cc	 mov	 eax, DWORD PTR tv3086[ebp]
  00585	0f b6 c8	 movzx	 ecx, al
  00588	8b 45 dc	 mov	 eax, DWORD PTR tv3144[ebp]
  0058b	0f af 45 d8	 imul	 eax, DWORD PTR tv3150[ebp]
  0058f	0f b6 d2	 movzx	 edx, dl
  00592	0f af d1	 imul	 edx, ecx
  00595	0f b6 ca	 movzx	 ecx, dl
  00598	2b c1		 sub	 eax, ecx
  0059a	89 55 c8	 mov	 DWORD PTR tv2959[ebp], edx
  0059d	99		 cdq
  0059e	f7 fe		 idiv	 esi
  005a0	8b 75 e4	 mov	 esi, DWORD PTR _TempQuad$1$[ebp]
  005a3	0f b6 c8	 movzx	 ecx, al
  005a6	8b 45 c8	 mov	 eax, DWORD PTR tv2959[ebp]
  005a9	0f b6 d0	 movzx	 edx, al
  005ac	8b c1		 mov	 eax, ecx
  005ae	0f af c7	 imul	 eax, edi
  005b1	03 c2		 add	 eax, edx
  005b3	0f b7 c0	 movzx	 eax, ax
  005b6	89 45 c8	 mov	 DWORD PTR _TL$1$[ebp], eax
  005b9	8b 45 f4	 mov	 eax, DWORD PTR tv3087[ebp]
  005bc	03 c1		 add	 eax, ecx
  005be	0f af c7	 imul	 eax, edi
  005c1	8b 7d f0	 mov	 edi, DWORD PTR _this$1$[ebp]
  005c4	f3 0f 59 4f 40	 mulss	 xmm1, DWORD PTR [edi+64]
  005c9	03 c2		 add	 eax, edx
  005cb	8b 55 c8	 mov	 edx, DWORD PTR _TL$1$[ebp]
  005ce	0f b7 c0	 movzx	 eax, ax
  005d1	89 45 d8	 mov	 DWORD PTR _BL$1$[ebp], eax
  005d4	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3f000000
  005dc	0f b7 c2	 movzx	 eax, dx
  005df	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  005e6	2b c8		 sub	 ecx, eax
  005e8	f3 0f 10 44 8e
	14		 movss	 xmm0, DWORD PTR [esi+ecx*4+20]
  005ee	0f 2e c1	 ucomiss xmm0, xmm1
  005f1	9f		 lahf
  005f2	f6 c4 44	 test	 ah, 68			; 00000044H
  005f5	7a 24		 jp	 SHORT $LN25@Generate
; Line 270
  005f7	80 7d ff 01	 cmp	 BYTE PTR _Level$1$[ebp], 1
  005fb	8b 4d f4	 mov	 ecx, DWORD PTR tv3087[ebp]
  005fe	0f 94 c0	 sete	 al
  00601	0f b6 c0	 movzx	 eax, al
  00604	50		 push	 eax
  00605	8b 45 d8	 mov	 eax, DWORD PTR _BL$1$[ebp]
  00608	56		 push	 esi
  00609	03 c1		 add	 eax, ecx
  0060b	50		 push	 eax
  0060c	ff 75 d8	 push	 DWORD PTR _BL$1$[ebp]
  0060f	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  00612	8b cf		 mov	 ecx, edi
  00614	50		 push	 eax
  00615	52		 push	 edx
  00616	e8 00 00 00 00	 call	 ?ReduceQuad@BT_QuadMap@@QAEXGGGGPAUBT_Quadmap_Quad@@_N@Z ; BT_QuadMap::ReduceQuad
$LN25@Generate:
; Line 257
  0061b	8b 45 d4	 mov	 eax, DWORD PTR _Quadn$2$[ebp]
  0061e	0f b7 57 38	 movzx	 edx, WORD PTR [edi+56]
  00622	40		 inc	 eax
  00623	0f b7 c8	 movzx	 ecx, ax
  00626	89 45 d4	 mov	 DWORD PTR _Quadn$2$[ebp], eax
  00629	8b c2		 mov	 eax, edx
  0062b	33 d2		 xor	 edx, edx
  0062d	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR tv3120[ebp]
  00632	f7 75 d0	 div	 DWORD PTR tv3221[ebp]
  00635	89 4d d8	 mov	 DWORD PTR tv3150[ebp], ecx
  00638	3b c8		 cmp	 ecx, eax
  0063a	0f 8c 26 ff ff
	ff		 jl	 $LL27@Generate
  00640	0f b7 47 38	 movzx	 eax, WORD PTR [edi+56]
  00644	8a 4d ff	 mov	 cl, BYTE PTR _Level$1$[ebp]
  00647	eb 03		 jmp	 SHORT $LN148@Generate
$LN152@Generate:
  00649	8b 45 c4	 mov	 eax, DWORD PTR $T1[ebp]
$LN148@Generate:
; Line 275
  0064c	0f b7 d0	 movzx	 edx, ax
  0064f	66 39 45 c0	 cmp	 WORD PTR _TwoPowerLevelSquared$1$[ebp], ax
  00653	74 07		 je	 SHORT $LN131@Generate
; Line 278
  00655	fe c1		 inc	 cl
; Line 279
  00657	e9 9c fe ff ff	 jmp	 $LN199@Generate
$LN131@Generate:
  0065c	0f b7 47 36	 movzx	 eax, WORD PTR [edi+54]
  00660	89 45 d0	 mov	 DWORD PTR $T2[ebp], eax
$LN100@Generate:
; Line 291
  00663	80 7d 08 01	 cmp	 BYTE PTR _Generator$[ebp], 1
  00667	0f b7 c8	 movzx	 ecx, ax
  0066a	75 7b		 jne	 SHORT $LN29@Generate
; Line 292
  0066c	8b 4d d0	 mov	 ecx, DWORD PTR $T2[ebp]
  0066f	33 c0		 xor	 eax, eax
  00671	89 45 d4	 mov	 DWORD PTR _Quadn$3$[ebp], eax
  00674	0f b7 c9	 movzx	 ecx, cx
  00677	89 45 c0	 mov	 DWORD PTR tv2982[ebp], eax
  0067a	66 3b c2	 cmp	 ax, dx
  0067d	73 68		 jae	 SHORT $LN29@Generate
  0067f	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
  00687	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL30@Generate:
; Line 293
  00690	0f b7 c0	 movzx	 eax, ax
  00693	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  0069a	2b d0		 sub	 edx, eax
  0069c	80 3c 96 00	 cmp	 BYTE PTR [esi+edx*4], 0
  006a0	75 34		 jne	 SHORT $LN28@Generate
; Line 301
  006a2	8b 44 96 10	 mov	 eax, DWORD PTR [esi+edx*4+16]
  006a6	8b 4c 96 04	 mov	 ecx, DWORD PTR [esi+edx*4+4]
  006aa	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  006af	f3 0f 5c 49 04	 subss	 xmm1, DWORD PTR [ecx+4]
; Line 302
  006b4	8b 44 96 0c	 mov	 eax, DWORD PTR [esi+edx*4+12]
  006b8	8b 4c 96 08	 mov	 ecx, DWORD PTR [esi+edx*4+8]
  006bc	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 658
  006c1	0f 54 ca	 andps	 xmm1, xmm2
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 302
  006c4	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\math.h
; Line 658
  006c9	0f 54 c2	 andps	 xmm0, xmm2
; File D:\DEV\GameGuruConverter - reduced\GameGuru Core\Dark Basic Public Shared\Dark Basic Pro SDK\DarkSDKMore\BlitzTerrain\quadmapping.cpp
; Line 305
  006cc	0f 2f c8	 comiss	 xmm1, xmm0
  006cf	0f 97 c0	 seta	 al
  006d2	88 44 96 18	 mov	 BYTE PTR [esi+edx*4+24], al
$LN28@Generate:
; Line 292
  006d6	8b 45 d4	 mov	 eax, DWORD PTR _Quadn$3$[ebp]
  006d9	40		 inc	 eax
  006da	89 45 d4	 mov	 DWORD PTR _Quadn$3$[ebp], eax
  006dd	66 3b 47 38	 cmp	 ax, WORD PTR [edi+56]
  006e1	72 ad		 jb	 SHORT $LL30@Generate
  006e3	0f b7 4f 36	 movzx	 ecx, WORD PTR [edi+54]
$LN29@Generate:
; Line 311
  006e7	80 7d 1d 01	 cmp	 BYTE PTR _Generator$[ebp+21], 1
  006eb	0f 85 45 02 00
	00		 jne	 $LN53@Generate
; Line 313
  006f1	8b 45 e0	 mov	 eax, DWORD PTR _IncVertices$1$[ebp]
  006f4	0f b7 c0	 movzx	 eax, ax
  006f7	40		 inc	 eax
  006f8	6a 14		 push	 20			; 00000014H
  006fa	50		 push	 eax
  006fb	e8 00 00 00 00	 call	 _calloc
  00700	83 c4 08	 add	 esp, 8
  00703	89 47 14	 mov	 DWORD PTR [edi+20], eax
; Line 314
  00706	85 c0		 test	 eax, eax
  00708	75 0a		 jne	 SHORT $LN55@Generate
; Line 315
  0070a	6a 1b		 push	 27			; 0000001bH
  0070c	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00711	83 c4 04	 add	 esp, 4
$LN55@Generate:
; Line 316
  00714	8b 45 e8	 mov	 eax, DWORD PTR $T6[ebp]
  00717	0f b7 c0	 movzx	 eax, ax
  0071a	6a 1c		 push	 28			; 0000001cH
  0071c	50		 push	 eax
  0071d	e8 00 00 00 00	 call	 _calloc
  00722	83 c4 08	 add	 esp, 8
  00725	89 47 18	 mov	 DWORD PTR [edi+24], eax
; Line 317
  00728	85 c0		 test	 eax, eax
  0072a	75 0a		 jne	 SHORT $LN56@Generate
; Line 318
  0072c	6a 1b		 push	 27			; 0000001bH
  0072e	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00733	83 c4 04	 add	 esp, 4
$LN56@Generate:
; Line 321
  00736	8b 75 f8	 mov	 esi, DWORD PTR _TempVertex$1$[ebp]
  00739	33 c9		 xor	 ecx, ecx
; Line 322
  0073b	33 c0		 xor	 eax, eax
  0073d	89 4d dc	 mov	 DWORD PTR _CurrVertex$1$[ebp], ecx
  00740	89 45 d0	 mov	 DWORD PTR _Vertexn$3$[ebp], eax
$LL33@Generate:
; Line 323
  00743	0f b7 c0	 movzx	 eax, ax
  00746	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00749	80 3c 86 00	 cmp	 BYTE PTR [esi+eax*4], 0
  0074d	89 45 f0	 mov	 DWORD PTR tv2995[ebp], eax
  00750	0f 85 7d 00 00
	00		 jne	 $LN57@Generate
; Line 325
  00756	0f b7 c1	 movzx	 eax, cx
  00759	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0075c	8d 14 80	 lea	 edx, DWORD PTR [eax+eax*4]
  0075f	8b 45 f0	 mov	 eax, DWORD PTR tv2995[ebp]
  00762	c1 e2 02	 shl	 edx, 2
  00765	8b 44 86 04	 mov	 eax, DWORD PTR [esi+eax*4+4]
  00769	89 44 0a 04	 mov	 DWORD PTR [edx+ecx+4], eax
; Line 326
  0076d	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00770	8b 45 f0	 mov	 eax, DWORD PTR tv2995[ebp]
  00773	8a 44 86 08	 mov	 al, BYTE PTR [esi+eax*4+8]
  00777	88 44 0a 08	 mov	 BYTE PTR [edx+ecx+8], al
; Line 327
  0077b	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0077e	8b 45 f0	 mov	 eax, DWORD PTR tv2995[ebp]
  00781	8a 44 86 09	 mov	 al, BYTE PTR [esi+eax*4+9]
  00785	88 44 0a 09	 mov	 BYTE PTR [edx+ecx+9], al
; Line 330
  00789	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0078c	8b 45 f0	 mov	 eax, DWORD PTR tv2995[ebp]
  0078f	8a 44 86 0a	 mov	 al, BYTE PTR [esi+eax*4+10]
  00793	88 44 0a 0a	 mov	 BYTE PTR [edx+ecx+10], al
; Line 331
  00797	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  0079a	8b 45 f0	 mov	 eax, DWORD PTR tv2995[ebp]
  0079d	8a 44 86 0b	 mov	 al, BYTE PTR [esi+eax*4+11]
  007a1	88 44 0a 0b	 mov	 BYTE PTR [edx+ecx+11], al
; Line 332
  007a5	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  007a8	8b 45 f0	 mov	 eax, DWORD PTR tv2995[ebp]
  007ab	8a 44 86 0c	 mov	 al, BYTE PTR [esi+eax*4+12]
  007af	88 44 0a 0c	 mov	 BYTE PTR [edx+ecx+12], al
; Line 335
  007b3	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  007b6	8b 4d dc	 mov	 ecx, DWORD PTR _CurrVertex$1$[ebp]
  007b9	66 89 4c 02 0e	 mov	 WORD PTR [edx+eax+14], cx
; Line 338
  007be	8b 4d f0	 mov	 ecx, DWORD PTR tv2995[ebp]
  007c1	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  007c4	03 c2		 add	 eax, edx
  007c6	89 44 8e 10	 mov	 DWORD PTR [esi+ecx*4+16], eax
; Line 341
  007ca	8b 4d dc	 mov	 ecx, DWORD PTR _CurrVertex$1$[ebp]
  007cd	41		 inc	 ecx
  007ce	89 4d dc	 mov	 DWORD PTR _CurrVertex$1$[ebp], ecx
; Line 342
  007d1	eb 07		 jmp	 SHORT $LN31@Generate
$LN57@Generate:
; Line 343
  007d3	81 45 e0 ff ff
	00 00		 add	 DWORD PTR _IncVertices$1$[ebp], 65535 ; 0000ffffH
$LN31@Generate:
; Line 322
  007da	8b 45 d0	 mov	 eax, DWORD PTR _Vertexn$3$[ebp]
  007dd	40		 inc	 eax
  007de	89 45 d0	 mov	 DWORD PTR _Vertexn$3$[ebp], eax
  007e1	66 3b 47 36	 cmp	 ax, WORD PTR [edi+54]
  007e5	0f 86 58 ff ff
	ff		 jbe	 $LL33@Generate
; Line 349
  007eb	8b 75 e4	 mov	 esi, DWORD PTR _TempQuad$1$[ebp]
  007ee	33 d2		 xor	 edx, edx
  007f0	33 c9		 xor	 ecx, ecx
  007f2	89 55 f0	 mov	 DWORD PTR _CurrQuad$1$[ebp], edx
  007f5	33 c0		 xor	 eax, eax
  007f7	89 4d dc	 mov	 DWORD PTR _Quadn$4$[ebp], ecx
  007fa	66 3b 47 38	 cmp	 ax, WORD PTR [edi+56]
  007fe	0f 83 1f 01 00
	00		 jae	 $LN35@Generate
  00804	0f b6 45 10	 movzx	 eax, BYTE PTR _Generator$[ebp+8]
  00808	89 45 c4	 mov	 DWORD PTR tv3182[ebp], eax
  0080b	0f 1f 44 00 00	 npad	 5
$LL36@Generate:
; Line 350
  00810	0f b7 c1	 movzx	 eax, cx
  00813	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0081a	2b c8		 sub	 ecx, eax
  0081c	89 4d e8	 mov	 DWORD PTR tv3014[ebp], ecx
  0081f	80 3c 8e 00	 cmp	 BYTE PTR [esi+ecx*4], 0
  00823	0f 85 e2 00 00
	00		 jne	 $LN59@Generate
; Line 352
  00829	0f b7 c2	 movzx	 eax, dx
  0082c	8d 14 c5 00 00
	00 00		 lea	 edx, DWORD PTR [eax*8]
  00833	2b d0		 sub	 edx, eax
  00835	8b 44 8e 04	 mov	 eax, DWORD PTR [esi+ecx*4+4]
  00839	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  0083c	c1 e2 02	 shl	 edx, 2
  0083f	89 55 c0	 mov	 DWORD PTR tv3225[ebp], edx
  00842	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00845	89 44 11 04	 mov	 DWORD PTR [ecx+edx+4], eax
; Line 353
  00849	8b 45 e8	 mov	 eax, DWORD PTR tv3014[ebp]
  0084c	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  0084f	8b 44 86 08	 mov	 eax, DWORD PTR [esi+eax*4+8]
  00853	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00856	89 44 11 08	 mov	 DWORD PTR [ecx+edx+8], eax
; Line 354
  0085a	8b 45 e8	 mov	 eax, DWORD PTR tv3014[ebp]
  0085d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00860	8b 44 86 0c	 mov	 eax, DWORD PTR [esi+eax*4+12]
  00864	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00867	89 44 11 0c	 mov	 DWORD PTR [ecx+edx+12], eax
; Line 355
  0086b	8b 45 e8	 mov	 eax, DWORD PTR tv3014[ebp]
  0086e	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00871	8b 44 86 10	 mov	 eax, DWORD PTR [esi+eax*4+16]
  00875	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00878	89 44 11 10	 mov	 DWORD PTR [ecx+edx+16], eax
; Line 358
  0087c	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  0087f	8b 45 e8	 mov	 eax, DWORD PTR tv3014[ebp]
  00882	8b 44 86 14	 mov	 eax, DWORD PTR [esi+eax*4+20]
  00886	89 44 11 14	 mov	 DWORD PTR [ecx+edx+20], eax
; Line 361
  0088a	8b 45 e8	 mov	 eax, DWORD PTR tv3014[ebp]
  0088d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00890	8a 44 86 18	 mov	 al, BYTE PTR [esi+eax*4+24]
  00894	88 44 11 18	 mov	 BYTE PTR [ecx+edx+24], al
; Line 365
  00898	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  0089b	f3 0f 10 44 10
	14		 movss	 xmm0, DWORD PTR [eax+edx+20]
  008a1	f3 0f 5e 45 0c	 divss	 xmm0, DWORD PTR _Generator$[ebp+4]
  008a6	e8 00 00 00 00	 call	 __ftol3
  008ab	89 45 d8	 mov	 DWORD PTR _QuadSize$1$[ebp], eax
; Line 369
  008ae	85 c0		 test	 eax, eax
  008b0	74 50		 je	 SHORT $LN38@Generate
; Line 352
  008b2	8b 4d dc	 mov	 ecx, DWORD PTR _Quadn$4$[ebp]
  008b5	0f b7 c1	 movzx	 eax, cx
  008b8	8b 4d d8	 mov	 ecx, DWORD PTR _QuadSize$1$[ebp]
  008bb	c1 e0 02	 shl	 eax, 2
  008be	89 45 d0	 mov	 DWORD PTR tv3073[ebp], eax
  008c1	89 4d d4	 mov	 DWORD PTR tv3211[ebp], ecx
$LL39@Generate:
; Line 370
  008c4	8b d0		 mov	 edx, eax
  008c6	8b f1		 mov	 esi, ecx
  008c8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL42@Generate:
; Line 372
  008d0	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  008d3	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  008d6	03 4d c0	 add	 ecx, DWORD PTR tv3225[ebp]
  008d9	89 0c 02	 mov	 DWORD PTR [edx+eax], ecx
  008dc	8b 4d c4	 mov	 ecx, DWORD PTR tv3182[ebp]
  008df	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  008e6	03 d0		 add	 edx, eax
  008e8	83 ee 01	 sub	 esi, 1
  008eb	75 e3		 jne	 SHORT $LL42@Generate
; Line 369
  008ed	8b 45 d0	 mov	 eax, DWORD PTR tv3073[ebp]
  008f0	8b 4d d8	 mov	 ecx, DWORD PTR _QuadSize$1$[ebp]
  008f3	83 c0 04	 add	 eax, 4
  008f6	83 6d d4 01	 sub	 DWORD PTR tv3211[ebp], 1
  008fa	89 45 d0	 mov	 DWORD PTR tv3073[ebp], eax
  008fd	75 c5		 jne	 SHORT $LL39@Generate
  008ff	8b 75 e4	 mov	 esi, DWORD PTR _TempQuad$1$[ebp]
$LN38@Generate:
; Line 375
  00902	8b 55 f0	 mov	 edx, DWORD PTR _CurrQuad$1$[ebp]
  00905	42		 inc	 edx
  00906	89 55 f0	 mov	 DWORD PTR _CurrQuad$1$[ebp], edx
; Line 376
  00909	eb 07		 jmp	 SHORT $LN34@Generate
$LN59@Generate:
; Line 378
  0090b	81 45 ec ff ff
	00 00		 add	 DWORD PTR _IncQuads$1$[ebp], 65535 ; 0000ffffH
$LN34@Generate:
; Line 349
  00912	8b 4d dc	 mov	 ecx, DWORD PTR _Quadn$4$[ebp]
  00915	41		 inc	 ecx
  00916	89 4d dc	 mov	 DWORD PTR _Quadn$4$[ebp], ecx
  00919	66 3b 4f 38	 cmp	 cx, WORD PTR [edi+56]
  0091d	0f 82 ed fe ff
	ff		 jb	 $LL36@Generate
$LN35@Generate:
; Line 383
  00923	8b 45 e0	 mov	 eax, DWORD PTR _IncVertices$1$[ebp]
  00926	66 89 47 36	 mov	 WORD PTR [edi+54], ax
; Line 384
  0092a	8b 45 ec	 mov	 eax, DWORD PTR _IncQuads$1$[ebp]
  0092d	66 89 47 38	 mov	 WORD PTR [edi+56], ax
; Line 386
  00931	e9 81 00 00 00	 jmp	 $LN54@Generate
$LN53@Generate:
; Line 388
  00936	0f b7 c1	 movzx	 eax, cx
  00939	40		 inc	 eax
  0093a	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0093d	c1 e0 02	 shl	 eax, 2
  00940	50		 push	 eax
  00941	e8 00 00 00 00	 call	 _malloc
  00946	83 c4 04	 add	 esp, 4
  00949	89 47 14	 mov	 DWORD PTR [edi+20], eax
; Line 389
  0094c	85 c0		 test	 eax, eax
  0094e	75 0a		 jne	 SHORT $LN61@Generate
; Line 390
  00950	6a 1b		 push	 27			; 0000001bH
  00952	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00957	83 c4 04	 add	 esp, 4
$LN61@Generate:
; Line 391
  0095a	0f b7 47 38	 movzx	 eax, WORD PTR [edi+56]
  0095e	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  00965	2b c8		 sub	 ecx, eax
  00967	c1 e1 02	 shl	 ecx, 2
  0096a	51		 push	 ecx
  0096b	e8 00 00 00 00	 call	 _malloc
  00970	83 c4 04	 add	 esp, 4
  00973	89 47 18	 mov	 DWORD PTR [edi+24], eax
; Line 392
  00976	85 c0		 test	 eax, eax
  00978	75 0a		 jne	 SHORT $LN62@Generate
; Line 393
  0097a	6a 1b		 push	 27			; 0000001bH
  0097c	e8 00 00 00 00	 call	 ?BT_Intern_Error@@YAXH@Z ; BT_Intern_Error
  00981	83 c4 04	 add	 esp, 4
$LN62@Generate:
; Line 394
  00984	0f b7 47 36	 movzx	 eax, WORD PTR [edi+54]
  00988	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0098b	c1 e0 02	 shl	 eax, 2
  0098e	50		 push	 eax
  0098f	ff 75 f8	 push	 DWORD PTR _TempVertex$1$[ebp]
  00992	ff 77 14	 push	 DWORD PTR [edi+20]
  00995	e8 00 00 00 00	 call	 _memcpy
; Line 395
  0099a	0f b7 47 38	 movzx	 eax, WORD PTR [edi+56]
  0099e	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  009a5	2b c8		 sub	 ecx, eax
  009a7	c1 e1 02	 shl	 ecx, 2
  009aa	51		 push	 ecx
  009ab	56		 push	 esi
  009ac	ff 77 18	 push	 DWORD PTR [edi+24]
  009af	e8 00 00 00 00	 call	 _memcpy
  009b4	83 c4 18	 add	 esp, 24			; 00000018H
$LN54@Generate:
; Line 477
  009b7	8b 57 14	 mov	 edx, DWORD PTR [edi+20]
; Line 480
  009ba	b9 01 00 00 00	 mov	 ecx, 1
  009bf	0f b7 47 36	 movzx	 eax, WORD PTR [edi+54]
  009c3	8b f0		 mov	 esi, eax
  009c5	f3 0f 10 4a 04	 movss	 xmm1, DWORD PTR [edx+4]
  009ca	f3 0f 11 4f 4c	 movss	 DWORD PTR [edi+76], xmm1
  009cf	f3 0f 11 4f 48	 movss	 DWORD PTR [edi+72], xmm1
  009d4	66 39 45 bc	 cmp	 WORD PTR tv3057[ebp], ax
  009d8	77 56		 ja	 SHORT $LN150@Generate
; Line 482
  009da	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@461c4000
  009e2	0f 28 d1	 movaps	 xmm2, xmm1
  009e5	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL81@Generate:
  009f0	0f b7 c1	 movzx	 eax, cx
  009f3	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  009f6	f3 0f 10 44 82
	04		 movss	 xmm0, DWORD PTR [edx+eax*4+4]
  009fc	0f 2f c1	 comiss	 xmm0, xmm1
  009ff	76 0a		 jbe	 SHORT $LN82@Generate
; Line 483
  00a01	c7 47 48 00 40
	1c 46		 mov	 DWORD PTR [edi+72], 1176256512 ; 461c4000H
  00a08	0f 28 cb	 movaps	 xmm1, xmm3
$LN82@Generate:
; Line 487
  00a0b	f3 0f 10 44 82
	04		 movss	 xmm0, DWORD PTR [edx+eax*4+4]
  00a11	0f 2f d0	 comiss	 xmm2, xmm0
  00a14	76 08		 jbe	 SHORT $LN79@Generate
; Line 488
  00a16	0f 28 d0	 movaps	 xmm2, xmm0
  00a19	f3 0f 11 57 4c	 movss	 DWORD PTR [edi+76], xmm2
$LN79@Generate:
; Line 480
  00a1e	41		 inc	 ecx
  00a1f	66 3b ce	 cmp	 cx, si
  00a22	76 cc		 jbe	 SHORT $LL81@Generate
; Line 403
  00a24	c6 47 10 01	 mov	 BYTE PTR [edi+16], 1
  00a28	5f		 pop	 edi
  00a29	5e		 pop	 esi
  00a2a	8b e5		 mov	 esp, ebp
  00a2c	5d		 pop	 ebp
  00a2d	c2 24 00	 ret	 36			; 00000024H
$LN150@Generate:
; Line 402
  00a30	88 4f 10	 mov	 BYTE PTR [edi+16], cl
  00a33	5f		 pop	 edi
; Line 403
  00a34	5e		 pop	 esi
  00a35	8b e5		 mov	 esp, ebp
  00a37	5d		 pop	 ebp
  00a38	c2 24 00	 ret	 36			; 00000024H
?Generate@BT_QuadMap@@QAEXUBT_Quadmap_Generator@@@Z ENDP ; BT_QuadMap::Generate
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ___use_char_max
_TEXT	SEGMENT
___use_char_max PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10150.0\ucrt\locale.h
; Line 66
  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ___do_unsigned_char_lconv_initialization
; Line 67
  00005	c3		 ret	 0
___use_char_max ENDP
_TEXT	ENDS
END
